<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Beyova.Common</name>
    </assembly>
    <members>
        <member name="T:Beyova.AOP.OverrideMethodReturnMessageDelegate">
            <summary>
            Delegate OverrideMethodReturnMessageDelegate
            </summary>
            <param name="methodCallInfo">The method call information.</param>
            <param name="returnMessage">The return message.</param>
            <param name="exception">The exception. This is the exception which from <see cref="T:Beyova.AOP.ProcessExceptionDelegate" /> delegate.</param>
            <returns>
            IMethodReturnMessage.
            </returns>
        </member>
        <member name="T:Beyova.AOP.MethodMessageInjectionDelegates">
            <summary>
            Class MethodInjectionDelegates.
            </summary>
        </member>
        <member name="P:Beyova.AOP.MethodMessageInjectionDelegates.ReturnMessageOverrideDelegate">
            <summary>
            Gets or sets the method return message delegate.
            This delegate would be invoked after <c>ReturnMessageDelegate</c> and <c>ExceptionDelegate</c>.
            This is to override <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage"/> (<see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage"/>).
            </summary>
            <value>The method return message delegate.</value>
        </member>
        <member name="T:Beyova.AOP.AfterMethodInvokeDelegate">
            <summary>
            Delegate AfterMethodInvokeDelegate
            </summary>
            <param name="methodCallInfo">The method call information.</param>
        </member>
        <member name="T:Beyova.AOP.BeforeMethodInvokeDelegate">
            <summary>
            Delegate BeforeMethodInvokeDelegate
            </summary>
            <param name="callMessage">The call message.</param>
        </member>
        <member name="T:Beyova.AOP.ProcessExceptionDelegate">
            <summary>
            Delegate HandleExceptionDelegate. If return not null, that exception would be throw out.
            </summary>
            <param name="methodCallInfo">The method call information.</param>
            <returns>
            Exception.
            </returns>
        </member>
        <member name="T:Beyova.AOP.MethodInjectionDelegates">
            <summary>
            Class MethodInjectionDelegates.
            </summary>
        </member>
        <member name="P:Beyova.AOP.MethodInjectionDelegates.MethodInvokedEvent">
            <summary>
            Gets or sets the method invoked event.
            This delegate would be invoked after real method is invoked.
            </summary>
            <value>The method invoked event.</value>
        </member>
        <member name="P:Beyova.AOP.MethodInjectionDelegates.MethodInvokingEvent">
            <summary>
            Gets or sets the method invoking event.
            This delegate would be invoked before real method is invoked.
            </summary>
            <value>The method invoking event.</value>
        </member>
        <member name="P:Beyova.AOP.MethodInjectionDelegates.ExceptionDelegate">
            <summary>
            Gets or sets the exception delegate.
            This delegate would be invoked only when real method threw exception.
            It would be invoked after <c>ReturnMessageDelegate</c> is done.
            </summary>
            <value>The exception delegate.</value>
        </member>
        <member name="T:Beyova.AOP.AOPSinkProcessor">
            <summary>
            Class AOPSinkProcessor.
            </summary>
        </member>
        <member name="F:Beyova.AOP.AOPSinkProcessor.messageDelegates">
            <summary>
            The method injection delegate
            </summary>
        </member>
        <member name="P:Beyova.AOP.AOPSinkProcessor.Sender">
            <summary>
            Gets or sets the sender.
            </summary>
            <value>The sender.</value>
        </member>
        <member name="P:Beyova.AOP.AOPSinkProcessor.NextSink">
            <summary>
            Gets the next message sink in the sink chain.
            </summary>
            <value>The next sink.</value>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="Infrastructure" />
            </PermissionSet>
        </member>
        <member name="M:Beyova.AOP.AOPSinkProcessor.#ctor(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMessageSink,Beyova.AOP.MethodMessageInjectionDelegates)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.AOP.AOPSinkProcessor" /> class.
            </summary>
            <param name="sender">The sender.</param>
            <param name="nextSink">The next sink.</param>
            <param name="messageDelegates">The message delegates.</param>
        </member>
        <member name="M:Beyova.AOP.AOPSinkProcessor.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)">
            <summary>
            Asynchronously processes the given message.
            </summary>
            <param name="msg">The message to process.</param>
            <param name="replySink">The reply sink for the reply message.</param>
            <returns>Returns an <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> interface that provides a way to control asynchronous messages after they have been dispatched.</returns>
        </member>
        <member name="M:Beyova.AOP.AOPSinkProcessor.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)">
            <summary>
            Synchronously processes the given message.
            </summary>
            <param name="msg">The message to process.</param>
            <returns>A reply message in response to the request.</returns>
        </member>
        <member name="T:Beyova.AOP.AOPMessageProcessor">
            <summary>
            Class BaseAOPMessageProcessor.
            </summary>
        </member>
        <member name="F:Beyova.AOP.AOPMessageProcessor.messageDelegates">
            <summary>
            The handle exception delegate
            </summary>
        </member>
        <member name="M:Beyova.AOP.AOPMessageProcessor.#ctor(System.String,Beyova.AOP.MethodMessageInjectionDelegates)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.AOP.AOPMessageProcessor" /> class.
            </summary>
            <param name="name">The name.</param>
            <param name="messageDelegates">The message delegates.</param>
        </member>
        <member name="M:Beyova.AOP.AOPMessageProcessor.Freeze(System.Runtime.Remoting.Contexts.Context)">
            <summary>
            Called when the context is frozen.
            </summary>
            <param name="newContext">The context to freeze.</param>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="Infrastructure" />
              </PermissionSet>
        </member>
        <member name="M:Beyova.AOP.AOPMessageProcessor.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)">
            <summary>
            Returns a Boolean value indicating whether the context property is compatible with the new context.
            </summary>
            <param name="newCtx">The new context in which the <see cref="T:System.Runtime.Remoting.Contexts.ContextProperty" /> has been created.</param>
            <returns>true if the context property can coexist with the other context properties in the given context; otherwise, false.</returns>
        </member>
        <member name="P:Beyova.AOP.AOPMessageProcessor.Name">
            <summary>
            Gets the name of the property under which it will be added to the context.
            </summary>
            <value>The name.</value>
            <returns>The name of the property.</returns>
              <PermissionSet>
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="Infrastructure" />
              </PermissionSet>
        </member>
        <member name="M:Beyova.AOP.AOPMessageProcessor.GetObjectSink(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMessageSink)">
            <summary>
            Chains the message sink of the provided server object in front of the given sink chain.
            </summary>
            <param name="obj">The server object which provides the message sink that is to be chained in front of the given chain.</param>
            <param name="nextSink">The chain of sinks composed so far.</param>
            <returns>The composite sink chain.</returns>
        </member>
        <member name="T:Beyova.AOP.BaseAOPAttribute">
            <summary>
            Class BaseAOPAttribute.
            </summary>
        </member>
        <member name="F:Beyova.AOP.BaseAOPAttribute.messageDelegates">
            <summary>
            The message delegates
            </summary>
        </member>
        <member name="P:Beyova.AOP.BaseAOPAttribute.MethodInjectionDelegates">
            <summary>
            Gets the method injection delegates.
            </summary>
            <value>The method injection delegates.</value>
        </member>
        <member name="P:Beyova.AOP.BaseAOPAttribute.MethodMessageInjectionDelegates">
            <summary>
            Gets the method message injection delegates.
            </summary>
            <value>
            The method message injection delegates.
            </value>
        </member>
        <member name="M:Beyova.AOP.BaseAOPAttribute.#ctor(System.String,Beyova.AOP.MethodMessageInjectionDelegates)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.AOP.BaseAOPAttribute"/> class.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <param name="messageDelegates">The message delegates.</param>
        </member>
        <member name="M:Beyova.AOP.BaseAOPAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)">
            <summary>
            Gets the properties for new context.
            </summary>
            <param name="constructionCallMessage">The construction call message.</param>
        </member>
        <member name="T:Beyova.AOP.AopExtension">
             <summary>
            
             </summary>
        </member>
        <member name="M:Beyova.AOP.AopExtension.Fill(Beyova.AOP.MethodCallInfo,System.Reflection.MethodBase,System.Object[])">
            <summary>
            Fills the specified method call information.
            </summary>
            <param name="methodCallInfo">The method call information.</param>
            <param name="methodBase">The method base.</param>
            <param name="inArgsData">The in arguments data.</param>
        </member>
        <member name="M:Beyova.AOP.AopExtension.ToMethodCallInfo(System.Runtime.Remoting.Messaging.IMethodCallMessage)">
            <summary>
            To the method call information.
            </summary>
            <param name="methodMessage">The method message.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.AOP.AopExtension.FillReturnMessage(Beyova.AOP.MethodCallInfo,System.Runtime.Remoting.Messaging.IMethodReturnMessage)">
            <summary>
            Fills the return message.
            </summary>
            <param name="callInfo">The call information.</param>
            <param name="methodMessage">The method message.</param>
        </member>
        <member name="T:Beyova.AOP.HandleExceptionAttribute">
            <summary>
            Class HandleExceptionAttribute.
            </summary>
        </member>
        <member name="P:Beyova.AOP.HandleExceptionAttribute.ThrowException">
            <summary>
            The throw exception
            </summary>
        </member>
        <member name="M:Beyova.AOP.HandleExceptionAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.AOP.HandleExceptionAttribute" /> class.
            </summary>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
        </member>
        <member name="M:Beyova.AOP.HandleExceptionAttribute.HandleException(Beyova.AOP.MethodCallInfo)">
            <summary>
            Handles the exception.
            </summary>
            <param name="methodCallInfo">The method call information.</param>
            <returns>
            Exception.
            </returns>
        </member>
        <member name="M:Beyova.AOP.HandleExceptionAttribute.GetMethodArguments(Beyova.AOP.MethodCallInfo)">
            <summary>
            Gets the method arguments.
            </summary>
            <param name="methodCallInfo">The method call information.</param>
            <returns>
            System.Object.
            </returns>
        </member>
        <member name="T:Beyova.AOP.AOPInterceptorObject">
            <summary>
            Class AOPInterceptorObject.
            </summary>
        </member>
        <member name="M:Beyova.AOP.AOPInterceptorObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.AOP.AOPInterceptorObject"/> class.
            </summary>
        </member>
        <member name="T:Beyova.AOP.MethodCallInfo">
            <summary>
            Class MethodCallInfo
            </summary>
        </member>
        <member name="P:Beyova.AOP.MethodCallInfo.InArgCount">
            <summary>
            Gets the in argument count.
            </summary>
            <value>
            The in argument count.
            </value>
        </member>
        <member name="P:Beyova.AOP.MethodCallInfo.InArgs">
            <summary>
            Gets the in arguments.
            </summary>
            <value>
            The in arguments.
            </value>
        </member>
        <member name="P:Beyova.AOP.MethodCallInfo.OutArgCount">
            <summary>
            Gets the out argument count.
            </summary>
            <value>
            The out argument count.
            </value>
        </member>
        <member name="P:Beyova.AOP.MethodCallInfo.OutArgs">
            <summary>
            Gets the out arguments.
            </summary>
            <value>
            The out arguments.
            </value>
        </member>
        <member name="P:Beyova.AOP.MethodCallInfo.Exception">
            <summary>
            Gets the exception.
            </summary>
            <value>
            The exception.
            </value>
        </member>
        <member name="P:Beyova.AOP.MethodCallInfo.ReturnValue">
            <summary>
            Gets the return value.
            </summary>
            <value>
            The return value.
            </value>
        </member>
        <member name="P:Beyova.AOP.MethodCallInfo.MethodFullName">
            <summary>
            Gets the full name of the method.
            </summary>
            <value>
            The full name of the method.
            </value>
        </member>
        <member name="P:Beyova.AOP.MethodCallInfo.SerializableArgNames">
            <summary>
            Gets the serializable argument names.
            </summary>
            <value>
            The serializable argument names.
            </value>
        </member>
        <member name="M:Beyova.AOP.MethodCallInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.AOP.MethodCallInfo"/> class.
            </summary>
        </member>
        <member name="M:Beyova.AOP.MethodCallInfo.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.AOP.MethodCallInfo" /> class.
            </summary>
            <param name="methodName">Name of the method.</param>
            <param name="inArgs">The in arguments.</param>
        </member>
        <member name="M:Beyova.AOP.MethodCallInfo.GetExceptionReferenceObject">
            <summary>
            Gets the exception reference object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Beyova.AOP.AopProxyOptions">
            <summary>
            Class AopProxyOptions.
            </summary>
        </member>
        <member name="P:Beyova.AOP.AopProxyOptions.Instance">
            <summary>
            Gets or sets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="P:Beyova.AOP.AopProxyOptions.ProxiedType">
            <summary>
            Gets or sets the type of the proxied.
            </summary>
            <value>
            The type of the proxied.
            </value>
        </member>
        <member name="P:Beyova.AOP.AopProxyOptions.MethodInjectionDelegates">
            <summary>
            Gets or sets the method injection delegates.
            </summary>
            <value>The method injection delegates.</value>
        </member>
        <member name="M:Beyova.AOP.AopProxyOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.AOP.AopProxyOptions"/> class.
            </summary>
        </member>
        <member name="T:Beyova.AOP.AopProxyGenerator`1">
            <summary>
            Class AopProxyGenerator.
            </summary>
        </member>
        <member name="M:Beyova.AOP.AopProxyGenerator`1.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.AOP.AopProxyGenerator`1" /> class.
            </summary>
            <param name="namespace">The namespace.</param>
            <param name="proxyName">Name of the proxy.</param>
        </member>
        <member name="M:Beyova.AOP.AopProxyGenerator`1.WriteNamespaces(System.Text.StringBuilder)">
            <summary>
            Writes the namespaces.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:Beyova.AOP.AopProxyGenerator`1.GenerateCode">
            <summary>
            Generates the code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Beyova.AOP.AopProxyGenerator`1.GenerateCode(System.Text.StringBuilder,System.String,System.String,System.Type,System.Type,System.Collections.Generic.List{System.Reflection.MethodInfo})">
            <summary>
            Generates the code.
            </summary>
            <param name="builder">The builder.</param>
            <param name="namespace">The namespace.</param>
            <param name="targetClassName">Name of the target class.</param>
            <param name="inheritedClass">The inherited class.</param>
            <param name="selfClass">The self class.</param>
            <param name="methodsToBuild">The methods to build.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.AOP.AopProxyGenerator`1.WriteConstructor(System.Text.StringBuilder,System.String)">
            <summary>
            Writes the constructor.
            </summary>
            <param name="builder">The builder.</param>
            <param name="className">Name of the class.</param>
        </member>
        <member name="M:Beyova.AOP.AopProxyGenerator`1.GenerateMethodCallInfoDeclarition(System.Text.StringBuilder,System.Reflection.MethodInfo,System.Int32,System.String)">
            <summary>
            Generates the method call information declarition.
            </summary>
            <param name="builder">The builder.</param>
            <param name="methodInfo">The method information.</param>
            <param name="indent">The indent.</param>
            <param name="methodCallInfoVariableName">Name of the method call information variable.</param>
        </member>
        <member name="M:Beyova.AOP.AopProxyGenerator`1.GenerateMethodInjectionInvoke(System.Text.StringBuilder,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Generates the method injection invoke.
            </summary>
            <param name="builder">The builder.</param>
            <param name="injectionMethodName">Name of the injection method.</param>
            <param name="methodCallInfoVariableName">Name of the method call information variable.</param>
            <param name="indent">The indent.</param>
            <param name="ifNullCall">If null call.</param>
            <param name="callAfterInjection">The call after injection.</param>
        </member>
        <member name="M:Beyova.AOP.AopProxyGenerator`1.GenerateCoreMethod(System.Text.StringBuilder,System.Reflection.MethodInfo)">
            <summary>
            Generates the core method.
            </summary>
            <param name="builder">The builder.</param>
            <param name="methodInfo">The method information.</param>
        </member>
        <member name="M:Beyova.AOP.AopProxyGenerator`1.CheckClassType(System.Type)">
            <summary>
            Checks the type of the class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="T:Beyova.AOP.AopProxyFactory">
            <summary>
            Class AopProxyFactory.
            </summary>
        </member>
        <member name="F:Beyova.AOP.AopProxyFactory.AopFactoryOutputNamespace">
            <summary>
            The aop factory output namespace
            </summary>
        </member>
        <member name="F:Beyova.AOP.AopProxyFactory.ProxyNamespaceFormat">
            <summary>
            The proxy namespace format
            </summary>
        </member>
        <member name="F:Beyova.AOP.AopProxyFactory.proxyOptionsCollection">
            <summary>
            The proxy options
            </summary>
        </member>
        <member name="F:Beyova.AOP.AopProxyFactory.proxyInstances">
            <summary>
            The proxy instances
            </summary>
        </member>
        <member name="F:Beyova.AOP.AopProxyFactory.locker">
            <summary>
            The locker
            </summary>
        </member>
        <member name="M:Beyova.AOP.AopProxyFactory.CreateAopInterfaceProxy``1(Beyova.AOP.MethodInjectionDelegates)">
            <summary>
            Creates the aop interface proxy.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="injectionDelegates">The injection delegates.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.AOP.AopProxyFactory.AsAopInterfaceProxy``1(``0,Beyova.AOP.MethodInjectionDelegates)">
            <summary>
            As aop interface proxy.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance">The instance.</param>
            <param name="injectionDelegates">The injection delegates.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.AOP.AopProxyFactory.InternalAsAopInterfaceProxy``1(``0,System.Boolean,Beyova.AOP.MethodInjectionDelegates)">
            <summary>
            As the aop interface proxy.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance">The instance.</param>
            <param name="reuseInstance">if set to <c>true</c> [reuse instance].</param>
            <param name="injectionDelegates">The injection delegates.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.AOP.AopProxyFactory.PrepareProxy``1(Beyova.AOP.AopProxyOptions)">
            <summary>
            Prepares the proxy.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="proxyOptions">The proxy options.</param>
        </member>
        <member name="M:Beyova.AOP.AopProxyFactory.CreateInstance``1(Beyova.AOP.AopProxyOptions,``0)">
            <summary>
            Creates the instance.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="proxyOptions">The proxy options.</param>
            <param name="instance">The instance.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="T:Beyova.AOP.AopProxy`1">
            <summary>
            Class AopProxy.
            </summary>
        </member>
        <member name="F:Beyova.AOP.AopProxy`1._instance">
            <summary>
            The instance
            </summary>
        </member>
        <member name="F:Beyova.AOP.AopProxy`1._injectionDelegates">
            <summary>
            The injection delegates
            </summary>
        </member>
        <member name="M:Beyova.AOP.AopProxy`1.#ctor(`0,Beyova.AOP.MethodInjectionDelegates)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.AOP.AopProxy`1" /> class.
            </summary>
            <param name="instance">The instance.</param>
            <param name="injectionDelegates">The injection delegates.</param>
        </member>
        <member name="T:Beyova.Cache.ApiCacheAttribute">
            <summary>
            Class ApiCacheAttribute. It would take effects when <see cref="T:Beyova.RestApi.ApiOperationAttribute"/> take effects.
            </summary>
        </member>
        <member name="P:Beyova.Cache.ApiCacheAttribute.CacheParameter">
            <summary>
            Gets or sets the cache parameter.
            </summary>
            <value>The cache parameter.</value>
        </member>
        <member name="F:Beyova.Cache.ApiCacheAttribute._parameterNames">
            <summary>
            The parameter names
            </summary>
        </member>
        <member name="F:Beyova.Cache.ApiCacheAttribute._defaultBuilderCapacity">
            <summary>
            The default builder capacity
            </summary>
        </member>
        <member name="M:Beyova.Cache.ApiCacheAttribute.#ctor(Beyova.Cache.ApiCacheParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Cache.ApiCacheAttribute" /> class.
            </summary>
            <param name="cacheParameter">The cache parameter.</param>
        </member>
        <member name="M:Beyova.Cache.ApiCacheAttribute.GenerateParameterizedIdentity(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Generates the parameterized identity.
            </summary>
            <param name="queryString">The query string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.Cache.ApiCacheAttribute.InitializeParameterNames(System.Reflection.MethodInfo)">
            <summary>
            Initializes the parameter names.
            </summary>
            <param name="methodInfo">The method information.</param>
            <returns><c>true</c> if succeed to initialize and OK for use later, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Beyova.Cache.ApiCacheStatus">
            <summary>
            Enum ApiCacheStatus
            </summary>
        </member>
        <member name="F:Beyova.Cache.ApiCacheStatus.NoCache">
            <summary>
            The no cache
            </summary>
        </member>
        <member name="F:Beyova.Cache.ApiCacheStatus.UseCache">
            <summary>
            The use cache
            </summary>
        </member>
        <member name="F:Beyova.Cache.ApiCacheStatus.UpdateCache">
            <summary>
            The update cache
            </summary>
        </member>
        <member name="T:Beyova.Cache.ApiCacheContainer">
            <summary>
            Class ApiCacheContainer.
            </summary>
        </member>
        <member name="M:Beyova.Cache.ApiCacheContainer.#ctor(System.String,Beyova.Cache.ApiCacheParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Cache.ApiCacheContainer" /> class.
            </summary>
            <param name="name">The name.</param>
            <param name="cacheParameter">The cache parameter.</param>
        </member>
        <member name="M:Beyova.Cache.ApiCacheContainer.GetCacheResult(Beyova.Api.ApiRouteIdentifier,System.String@)">
            <summary>
            Gets the cache result.
            </summary>
            <param name="key">The key.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.Cache.ApiCacheParameter">
            <summary>
            Class ApiCacheParameter.
            </summary>
        </member>
        <member name="P:Beyova.Cache.ApiCacheParameter.CachedByParameterizedIdentity">
            <summary>
            Gets or sets a value indicating whether [cached by parameterized identity].
            </summary>
            <value><c>true</c> if [cached by parameterized identity]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.Cache.ApiCacheParameter.Capacity">
            <summary>
            Gets or sets the capacity.
            </summary>
            <value>
            The capacity.
            </value>
        </member>
        <member name="P:Beyova.Cache.ApiCacheParameter.ExpirationInSecond">
            <summary>
            The expiration in second
            </summary>
            <value>The expiration in second.</value>
        </member>
        <member name="P:Beyova.Cache.ApiCacheParameter.FailureExpirationInSecond">
            <summary>
            Gets the failure expiration in second. If entity is failed to get, use this expiration if specified, otherwise use <see cref="P:Beyova.Cache.ICacheParameter.ExpirationInSecond" />.
            </summary>
            <value>The failure expiration in second.</value>
        </member>
        <member name="T:Beyova.Cache.CacheContainerBase`1">
            <summary>
            Class CacheContainerBase.
            </summary>
        </member>
        <member name="F:Beyova.Cache.CacheContainerBase`1.container">
            <summary>
            The container
            </summary>
        </member>
        <member name="F:Beyova.Cache.CacheContainerBase`1.locker">
            <summary>
            The locker
            </summary>
        </member>
        <member name="P:Beyova.Cache.CacheContainerBase`1.ExpirationInSecond">
            <summary>
            The expiration in second
            </summary>
        </member>
        <member name="F:Beyova.Cache.CacheContainerBase`1.retrieveEntity">
            <summary>
            The retrieve entity
            </summary>
        </member>
        <member name="F:Beyova.Cache.CacheContainerBase`1.handleException">
            <summary>
            The handle exception. Return  bool value indicating whether needs to throw it.
            </summary>
        </member>
        <member name="P:Beyova.Cache.CacheContainerBase`1.FailureExpirationInSecond">
            <summary>
            Gets the failure expiration in second. If entity is failed to get, use this expiration if specified, otherwise use <see cref="P:Beyova.Cache.ICacheParameter.ExpirationInSecond" />.
            </summary>
            <value>The failure expiration in second.</value>
        </member>
        <member name="F:Beyova.Cache.CacheContainerBase`1.needRefresh">
            <summary>
            Gets or sets a value indicating whether [need refresh].
            </summary>
            <value><c>true</c> if [need refresh]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.Cache.CacheContainerBase`1.ExpiredStamp">
            <summary>
            Gets or sets the expired stamp.
            </summary>
            <value>The expired stamp.</value>
        </member>
        <member name="P:Beyova.Cache.CacheContainerBase`1.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.Cache.CacheContainerBase`1.Capacity">
            <summary>
            The capacity
            </summary>
            <value>The capacity.</value>
        </member>
        <member name="P:Beyova.Cache.CacheContainerBase`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:Beyova.Cache.CacheContainerBase`1.#ctor(System.String,System.Func{`0},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Func{Beyova.ExceptionSystem.BaseException,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Cache.CacheContainer`2" /> class.
            </summary>
            <param name="name">The name.</param>
            <param name="retrieveEntity">The retrieve entity.</param>
            <param name="expirationInSecond">The expiration in second.</param>
            <param name="failureExpirationInSecond">The failure expiration in second.</param>
            <param name="handleException">The handle exception. Bool value indicating whether needs to throw it.</param>
        </member>
        <member name="M:Beyova.Cache.CacheContainerBase`1.InternalGet">
            <summary>
            Gets this instance.
            </summary>
            <returns>System.Collections.Generic.IReadOnlyList&lt;TEntity&gt;.</returns>
        </member>
        <member name="M:Beyova.Cache.CacheContainerBase`1.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Beyova.Cache.CacheContainerBase`1.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="T:Beyova.Cache.CacheParameter">
            <summary>
            Class CacheParameter.
            </summary>
        </member>
        <member name="P:Beyova.Cache.CacheParameter.ExpirationInSecond">
            <summary>
            The expiration in second
            </summary>
            <value>The expiration in second.</value>
        </member>
        <member name="P:Beyova.Cache.CacheParameter.FailureExpirationInSecond">
            <summary>
            Gets the failure expiration in second. If entity is failed to get, use this expiration if specified, otherwise use <see cref="P:Beyova.Cache.ICacheParameter.ExpirationInSecond" />.
            </summary>
            <value>The failure expiration in second.</value>
        </member>
        <member name="T:Beyova.Cache.ICacheParameter">
            <summary>
            Interface ICacheParameter
            </summary>
        </member>
        <member name="P:Beyova.Cache.ICacheParameter.ExpirationInSecond">
            <summary>
            The expiration in second
            </summary>
        </member>
        <member name="P:Beyova.Cache.ICacheParameter.FailureExpirationInSecond">
            <summary>
            Gets the failure expiration in second. If entity is failed to get, use this expiration if specified, otherwise use <see cref="P:Beyova.Cache.ICacheParameter.ExpirationInSecond"/>.
            </summary>
            <value>The failure expiration in second.</value>
        </member>
        <member name="T:Beyova.Cache.SingleCacheContainer`1">
            <summary>
            Class SingleCacheContainer.
            </summary>
        </member>
        <member name="P:Beyova.Cache.SingleCacheContainer`1.IsExpired">
            <summary>
            Gets a value indicating whether this instance is expired.
            </summary>
            <value><c>true</c> if this instance is expired; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.Cache.SingleCacheContainer`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Beyova.Cache.SingleCacheContainer`1.Capacity">
            <summary>
            The capacity
            </summary>
            <value>The capacity.</value>
        </member>
        <member name="M:Beyova.Cache.SingleCacheContainer`1.#ctor(System.String,System.Func{`0},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Func{Beyova.ExceptionSystem.BaseException,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Cache.CacheContainer`2" /> class.
            </summary>
            <param name="name">The name.</param>
            <param name="retrieveEntity">The retrieve entity.</param>
            <param name="expirationInSecond">The expiration in second.</param>
            <param name="failureExpirationInSecond">The failure expiration in second.</param>
            <param name="handleException">The handle exception. Bool value indicating whether needs to throw it.</param>
        </member>
        <member name="M:Beyova.Cache.SingleCacheContainer`1.#ctor(System.String,System.Func{`0},Beyova.Cache.CacheParameter,System.Func{Beyova.ExceptionSystem.BaseException,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Cache.SingleCacheContainer`1" /> class.
            </summary>
            <param name="name">The name.</param>
            <param name="retrieveEntity">The retrieve entity.</param>
            <param name="cacheParameter">The cache parameter.</param>
            <param name="handleException">The handle exception. Bool value indicating whether needs to throw it.</param>
        </member>
        <member name="M:Beyova.Cache.SingleCacheContainer`1.Get">
            <summary>
            Gets this instance.
            </summary>
            <returns>System.Collections.Generic.IReadOnlyList&lt;TEntity&gt;.</returns>
        </member>
        <member name="M:Beyova.Cache.SingleCacheContainer`1.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="T:Beyova.Cache.CollectionCacheContainer`1">
            <summary>
            Class CacheContainer.
            </summary>
            <typeparam name="TEntity">The type of the t entity.</typeparam>
        </member>
        <member name="P:Beyova.Cache.CollectionCacheContainer`1.Capacity">
            <summary>
            The capacity
            </summary>
            <value>The capacity.</value>
        </member>
        <member name="P:Beyova.Cache.CollectionCacheContainer`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:Beyova.Cache.CollectionCacheContainer`1.#ctor(System.String,System.Func{System.Collections.Generic.List{`0}},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Func{Beyova.ExceptionSystem.BaseException,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Cache.CacheContainer`2" /> class.
            </summary>
            <param name="name">The name.</param>
            <param name="retrieveEntity">The retrieve entity.</param>
            <param name="expirationInSecond">The expiration in second.</param>
            <param name="failureExpirationInSecond">The failure expiration in second.</param>
            <param name="handleException">The handle exception. Bool value indicating whether needs to throw it.</param>
        </member>
        <member name="M:Beyova.Cache.CollectionCacheContainer`1.GetAll">
            <summary>
            Gets this instance.
            </summary>
            <returns>System.Collections.Generic.IReadOnlyList&lt;TEntity&gt;.</returns>
        </member>
        <member name="M:Beyova.Cache.CollectionCacheContainer`1.ForEach(System.Action{`0})">
            <summary>
            Fors the each.
            </summary>
            <param name="stuff">The stuff.</param>
        </member>
        <member name="M:Beyova.Cache.CollectionCacheContainer`1.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="T:Beyova.Cache.CacheContainerSummary">
            <summary>
            Class CacheContainerSummary.
            </summary>
        </member>
        <member name="P:Beyova.Cache.CacheContainerSummary.Capacity">
            <summary>
            The capacity
            </summary>
            <value>The capacity.</value>
        </member>
        <member name="P:Beyova.Cache.CacheContainerSummary.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Beyova.Cache.CacheContainerSummary.ExpirationInSecond">
            <summary>
            The expiration in second
            </summary>
            <value>The expiration in second.</value>
        </member>
        <member name="P:Beyova.Cache.CacheContainerSummary.FailureExpirationInSecond">
            <summary>
            Gets the failure expiration in second. If entity is failed to get, use this expiration if specified, otherwise use <see cref="P:Beyova.Cache.ICacheParameter.ExpirationInSecond" />.
            </summary>
            <value>The failure expiration in second.</value>
        </member>
        <member name="P:Beyova.Cache.CacheContainerSummary.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="M:Beyova.Cache.CacheContainerSummary.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="T:Beyova.Cache.CacheRealm">
            <summary>
            Class CacheRealm.
            </summary>
        </member>
        <member name="F:Beyova.Cache.CacheRealm.containers">
            <summary>
            The containers
            </summary>
        </member>
        <member name="M:Beyova.Cache.CacheRealm.RegisterCacheContainer``2(Beyova.Cache.CacheContainer{``0,``1})">
            <summary>
            Registers the cache container.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TEntity">The type of the t entity.</typeparam>
            <param name="cacheContainer">The cache container.</param>
        </member>
        <member name="M:Beyova.Cache.CacheRealm.GetContainers``1">
            <summary>
            Gets the containers.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>List&lt;ICacheContainer&gt;.</returns>
        </member>
        <member name="M:Beyova.Cache.CacheRealm.GetContainers(System.Type)">
            <summary>
            Gets the containers.
            </summary>
            <param name="type">The type.</param>
            <returns>List&lt;ICacheContainer&gt;.</returns>
        </member>
        <member name="M:Beyova.Cache.CacheRealm.ClearAll">
            <summary>
            Clears all.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Beyova.Cache.CacheRealm.ClearCache``1">
            <summary>
            Clears the cache.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Beyova.Cache.CacheRealm.ClearCache(System.Type)">
            <summary>
            Clears the cache.
            </summary>
            <param name="type">The type.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Beyova.Cache.CacheRealm.GetSummary">
            <summary>
            Gets the summary.
            </summary>
            <returns>MatrixList&lt;CacheContainerSummary&gt;.</returns>
        </member>
        <member name="M:Beyova.Cache.CacheRealm.GetSummary``1">
            <summary>
            Gets the summary.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>System.Collections.Generic.List&lt;Beyova.Cache.CacheContainerSummary&gt;.</returns>
        </member>
        <member name="M:Beyova.Cache.CacheRealm.ToCacheContainerSummary(System.Collections.Generic.IList{Beyova.Cache.ICacheContainer})">
            <summary>
            To the cache container summary.
            </summary>
            <param name="containers">The containers.</param>
            <returns>System.Collections.Generic.List&lt;Beyova.Cache.CacheContainerSummary&gt;.</returns>
        </member>
        <member name="M:Beyova.Cache.CacheRealm.ToCacheContainerSummary(Beyova.Cache.ICacheContainer)">
            <summary>
            To the cache container summary.
            </summary>
            <param name="container">The container.</param>
            <returns>CacheContainerSummary.</returns>
        </member>
        <member name="T:Beyova.Cache.CacheContainer`2">
            <summary>
            Class CacheContainer.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TEntity">The type of the t entity.</typeparam>
        </member>
        <member name="T:Beyova.Cache.CacheContainer`2.CacheItem`1">
            <summary>
            Class CacheItem.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Beyova.Cache.CacheContainer`2.CacheItem`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Beyova.Cache.CacheContainer`2.CacheItem`1.ExpiredStamp">
            <summary>
            Gets or sets the expired stamp.
            </summary>
            <value>The expired stamp.</value>
        </member>
        <member name="P:Beyova.Cache.CacheContainer`2.CacheItem`1.IsExpired">
            <summary>
            Gets a value indicating whether this instance is expired.
            </summary>
            <value><c>true</c> if this instance is expired; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Beyova.Cache.CacheContainer`2.container">
            <summary>
            The container
            </summary>
        </member>
        <member name="F:Beyova.Cache.CacheContainer`2.itemChangeLocker">
            <summary>
            The item change locker
            </summary>
        </member>
        <member name="P:Beyova.Cache.CacheContainer`2.Capacity">
            <summary>
            The capacity
            </summary>
        </member>
        <member name="P:Beyova.Cache.CacheContainer`2.ExpirationInSecond">
            <summary>
            The expiration in second
            </summary>
        </member>
        <member name="P:Beyova.Cache.CacheContainer`2.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="F:Beyova.Cache.CacheContainer`2.retrieveEntity">
            <summary>
            The retrieve entity
            </summary>
        </member>
        <member name="F:Beyova.Cache.CacheContainer`2.handleException">
            <summary>
            The handle exception. Return  bool value indicating whether needs to throw it.
            </summary>
        </member>
        <member name="P:Beyova.Cache.CacheContainer`2.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.Cache.CacheContainer`2.FailureExpirationInSecond">
            <summary>
            Gets the failure expiration in second. If entity is failed to get, use this expiration if specified, otherwise use <see cref="P:Beyova.Cache.ICacheParameter.ExpirationInSecond" />.
            </summary>
            <value>The failure expiration in second.</value>
        </member>
        <member name="M:Beyova.Cache.CacheContainer`2.#ctor(System.String,System.Func{`0,`1},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.IEqualityComparer{`0},System.Func{Beyova.ExceptionSystem.BaseException,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Cache.CacheContainer`2" /> class.
            </summary>
            <param name="name">The name.</param>
            <param name="retrieveEntity">The retrieve entity.</param>
            <param name="capacity">The capacity.</param>
            <param name="expirationInSecond">The expiration in second.</param>
            <param name="failureExpirationInSecond">The failure expiration in second.</param>
            <param name="equalityComparer">The equality comparer.</param>
            <param name="handleException">The handle exception. Bool value indicating whether needs to throw it.</param>
        </member>
        <member name="M:Beyova.Cache.CacheContainer`2.#ctor(System.String,System.Func{`0,`1},Beyova.Cache.ICacheParameter,System.Nullable{System.Int32},System.Collections.Generic.IEqualityComparer{`0},System.Func{Beyova.ExceptionSystem.BaseException,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Cache.CacheContainer`2"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="retrieveEntity">The retrieve entity.</param>
            <param name="cacheParameter">The cache parameter.</param>
            <param name="capacity">The capacity.</param>
            <param name="equalityComparer">The equality comparer.</param>
            <param name="handleException">The handle exception.</param>
        </member>
        <member name="M:Beyova.Cache.CacheContainer`2.InternalMaintainCapacity">
            <summary>
            Internals the maintain capacity.
            </summary>
        </member>
        <member name="M:Beyova.Cache.CacheContainer`2.InternalUpdate(`0,`1,System.Boolean)">
            <summary>
            Internals the update.
            </summary>
            <param name="key">The key.</param>
            <param name="entity">The entity.</param>
            <param name="ifNotExistsThenInsert">if set to <c>true</c> [if not exists then insert].</param>
            <returns>System.Nullable&lt;DateTime&gt;.</returns>
        </member>
        <member name="M:Beyova.Cache.CacheContainer`2.Update(`0,`1)">
            <summary>
            Updates the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="entity">The entity.</param>
            <returns>System.Nullable&lt;DateTime&gt;.</returns>
        </member>
        <member name="M:Beyova.Cache.CacheContainer`2.Get(`0)">
            <summary>
            Gets the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>TEntity.</returns>
        </member>
        <member name="M:Beyova.Cache.CacheContainer`2.GetExpiredStamp(`0,`1@)">
            <summary>
            Gets the expired stamp.
            </summary>
            <param name="key">The key.</param>
            <param name="entity">The entity.</param>
            <returns>System.Nullable&lt;System.DateTime&gt;.</returns>
        </member>
        <member name="M:Beyova.Cache.CacheContainer`2.InternalGet(`0,`1@)">
            <summary>
            Internals the get.
            </summary>
            <param name="key">The key.</param>
            <param name="entity">The entity.</param>
            <returns>TEntity.</returns>
        </member>
        <member name="M:Beyova.Cache.CacheContainer`2.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="T:Beyova.Cache.ICacheContainer`2">
            <summary>
            Interface ICacheContainer
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TEntity">The type of the t entity.</typeparam>
        </member>
        <member name="M:Beyova.Cache.ICacheContainer`2.Get(`0)">
            <summary>
            Gets the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>TEntity.</returns>
        </member>
        <member name="M:Beyova.Cache.ICacheContainer`2.GetExpiredStamp(`0,`1@)">
            <summary>
            Gets the expired stamp.
            </summary>
            <param name="key">The key.</param>
            <param name="entity">The entity.</param>
            <returns>System.Nullable&lt;DateTime&gt;.</returns>
        </member>
        <member name="T:Beyova.Cache.ICacheContainer">
            <summary>
            Interface ICacheContainer
            </summary>
        </member>
        <member name="P:Beyova.Cache.ICacheContainer.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:Beyova.Cache.ICacheContainer.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="P:Beyova.Cache.ICacheContainer.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.Cache.ICacheContainer.Capacity">
            <summary>
            Gets the capacity.
            </summary>
            <value>The capacity.</value>
        </member>
        <member name="T:Beyova.RestApi.EntitySynchronizationModeAttribute">
            <summary>
            Class EntitySynchronizationModeAttribute. Limitation: Method output must is <see cref="T:Beyova.ISimpleBaseObject"/>.
            </summary>
        </member>
        <member name="P:Beyova.RestApi.EntitySynchronizationModeAttribute.IfModifiedSinceKey">
            <summary>
            Gets or sets if modified since key.
            </summary>
            <value>If modified since key.</value>
        </member>
        <member name="P:Beyova.RestApi.EntitySynchronizationModeAttribute.LastModifiedKey">
            <summary>
            Gets or sets the last modified key.
            </summary>
            <value>The last modified key.</value>
        </member>
        <member name="P:Beyova.RestApi.EntitySynchronizationModeAttribute.StampOutputFunction">
            <summary>
            Gets or sets the stamp output function.
            </summary>
            <value>The stamp output function.</value>
        </member>
        <member name="P:Beyova.RestApi.EntitySynchronizationModeAttribute.StampInputFunction">
            <summary>
            Gets or sets the stamp input function.
            </summary>
            <value>The stamp input function.</value>
        </member>
        <member name="M:Beyova.RestApi.EntitySynchronizationModeAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.EntitySynchronizationModeAttribute" /> class.
            </summary>
            <param name="stampFormat">The stamp format.</param>
            <param name="ifModifiedSinceKey">If modified since key.</param>
            <param name="lastModifiedKey">The last modified key.</param>
        </member>
        <member name="M:Beyova.RestApi.EntitySynchronizationModeAttribute.#ctor(System.String,System.String,System.Func{System.Nullable{System.DateTime},System.String},System.Func{System.String,System.Nullable{System.DateTime}})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.EntitySynchronizationModeAttribute" /> class.
            </summary>
            <param name="ifModifiedSinceKey">If modified since key.</param>
            <param name="lastModifiedKey">The last modified key.</param>
            <param name="stampOutputFunc">The stamp output function.</param>
            <param name="stampInputFunc">The stamp input function.</param>
        </member>
        <member name="M:Beyova.RestApi.EntitySynchronizationModeAttribute.RebuildOutputObject(System.Nullable{System.DateTime},System.Object,System.Int32@,System.Boolean@,System.Nullable{System.DateTime}@)">
            <summary>
            Rebuilds the output object.
            </summary>
            <param name="lastModifiedSinceStamp">The last modified since stamp.</param>
            <param name="data">The data.</param>
            <param name="httpStatusCode">The HTTP status code.</param>
            <param name="noBody">if set to <c>true</c> [no body].</param>
            <param name="lastModifiedStamp">The last modified stamp.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.RestApi.EntitySynchronizationModeAttribute.InternalRebuildOutputObject``1(System.Nullable{System.DateTime},``0,System.Int32@,System.Boolean@,System.Nullable{System.DateTime}@)">
            <summary>
            Rebuilds the output object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="lastModifiedSinceStamp">The last modified since stamp.</param>
            <param name="data">The data.</param>
            <param name="httpStatusCode">The HTTP status code.</param>
            <param name="noBody">if set to <c>true</c> [no body].</param>
            <param name="lastModifiedStamp">The last modified stamp.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.RestApi.EntitySynchronizationModeAttribute.IsReturnTypeMatched(System.Type)">
            <summary>
            Determines whether [is return type matched] [the specified type].
            </summary>
            <param name="type">The type.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:Beyova.RestApi.EntitySynchronizationModeAttribute.DefaultStampInputFunc(System.String)">
            <summary>
            Defaults the stamp input function.
            </summary>
            <param name="stamp">The stamp.</param>
            <returns>System.Nullable&lt;System.DateTime&gt;.</returns>
        </member>
        <member name="M:Beyova.RestApi.EntitySynchronizationModeAttribute.DefaultStampOutputFunc(System.Nullable{System.DateTime})">
            <summary>
            Defaults the stamp output function.
            </summary>
            <param name="stamp">The stamp.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Beyova.RestApi.RuntimeApiOperationParameters">
            <summary>
            Class RuntimeApiOperationParameters.
            </summary>
        </member>
        <member name="P:Beyova.RestApi.RuntimeApiOperationParameters.IsTokenRequired">
            <summary>
            Gets or sets a value indicating whether this instance is token required.
            </summary>
            <value><c>true</c> if this instance is token required; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeApiOperationParameters.ModuleName">
            <summary>
            Gets or sets the name of the module.
            </summary>
            <value>The name of the module.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeApiOperationParameters.IsDataSensitive">
            <summary>
            Gets or sets a value indicating whether this instance is data sensitive.
            </summary>
            <value><c>true</c> if this instance is data sensitive; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeApiOperationParameters.Permissions">
            <summary>
            Gets or sets the permissions.
            </summary>
            <value>The permissions.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeApiOperationParameters.CustomizedHeaderKeys">
            <summary>
            Gets or sets the header keys.
            </summary>
            <value>The header keys.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeApiOperationParameters.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeApiOperationParameters.EntitySynchronizationMode">
            <summary>
            Gets or sets the entity synchronization mode.
            </summary>
            <value>The entity synchronization mode.</value>
        </member>
        <member name="M:Beyova.RestApi.RuntimeApiOperationParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.RuntimeRoute" /> class.
            </summary>
        </member>
        <member name="T:Beyova.RestApi.ApiHeaderAttribute">
            <summary>
            Class ApiHeaderAttribute.
            </summary>
        </member>
        <member name="P:Beyova.RestApi.ApiHeaderAttribute.HeaderKey">
            <summary>
            Gets or sets the header key.
            </summary>
            <value>The header key.</value>
        </member>
        <member name="M:Beyova.RestApi.ApiHeaderAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.ApiHeaderAttribute"/> class.
            </summary>
            <param name="headerKey">The header key.</param>
        </member>
        <member name="T:Beyova.RestApi.StrickContractOutputAttribute">
            <summary>
            Class StrickContractOutputAttribute.
            </summary>
        </member>
        <member name="M:Beyova.RestApi.StrickContractOutputAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.StrickContractOutputAttribute"/> class.
            </summary>
        </member>
        <member name="T:Beyova.RestApi.RuntimeContext">
            <summary>
            Class RuntimeContext.
            </summary>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.ApiMethod">
            <summary>
            Gets or sets the API method.
            </summary>
            <value>The API method.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.ApiInstance">
            <summary>
            Gets or sets the API instance.
            </summary>
            <value>The API instance.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.ApiServiceName">
            <summary>
            Gets or sets the name of the API service.
            </summary>
            <value>The name of the API service.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.ResourceName">
            <summary>
            Gets or sets the name of the resource.
            </summary>
            <value>The name of the resource.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.Realm">
            <summary>
            Gets or sets the realm.
            </summary>
            <value>The realm.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.Parameter1">
            <summary>
            Gets or sets the parameter1.
            </summary>
            <value>The parameter1.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.Parameter2">
            <summary>
            Gets or sets the parameter2.
            </summary>
            <value>The parameter2.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.IsActionUsed">
            <summary>
            Gets or sets a value indicating whether this instance is action used.
            </summary>
            <value><c>true</c> if this instance is action used; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.Settings">
            <summary>
            Gets or sets the settings.
            </summary>
            <value>The settings.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.IsVoid">
            <summary>
            Gets or sets a value indicating whether this instance is void.
            </summary>
            <value><c>true</c> if this instance is void; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.Exception">
            <summary>
            Gets or sets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.EntityKey">
            <summary>
            Gets the entity key.
            </summary>
            <value>The entity key.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>The name of the action.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.CustomizedHeaderKeys">
            <summary>
            Gets or sets the customized header keys.
            </summary>
            <value>The customized header keys.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.OperationParameters">
            <summary>
            Gets the operation parameters.
            </summary>
            <value>The operation parameters.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.ApiCacheStatus">
            <summary>
            Gets or sets the API cache status.
            </summary>
            <value>
            The API cache status.
            </value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.ApiCacheIdentity">
            <summary>
            Gets or sets the API cache identity.
            </summary>
            <value>
            The API cache identity.
            </value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.ApiCacheContainer">
            <summary>
            Gets or sets the API cache container.
            </summary>
            <value>
            The API cache container.
            </value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeContext.CachedResponseBody">
            <summary>
            Gets or sets the cached response body.
            </summary>
            <value>
            The cached response body.
            </value>
        </member>
        <member name="T:Beyova.RestApi.ApiContext">
            <summary>
            Class ApiContext.
            </summary>
        </member>
        <member name="P:Beyova.RestApi.ApiContext.LastSynchronizedStamp">
            <summary>
            Gets or sets the last synchronized stamp.
            </summary>
            <value>The last synchronized stamp.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiContext.UserAgent">
            <summary>
            Gets or sets the user agent.
            </summary>
            <value>The user agent.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiContext.IpAddress">
            <summary>
            Gets or sets the ip address.
            </summary>
            <value>The ip address.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiContext.CurrentUri">
            <summary>
            Gets the current URI.
            </summary>
            <value>The current URI.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiContext.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiContext.CurrentCredential">
            <summary>
            Gets or sets the current credential.
            </summary>
            <value>The current credential.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiContext.CurrentPermissionIdentifiers">
            <summary>
            Gets the current permission identifiers.
            </summary>
            <value>The current permission identifiers.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiContext.CurrentUserInfo">
            <summary>
            Gets or sets the current user information.
            </summary>
            <value>The current user information.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiContext.PermissionIdentifiers">
            <summary>
            Gets or sets the permission identifiers.
            </summary>
            <value>The permission identifiers.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiContext.CultureCode">
            <summary>
            Gets or sets the culture code.
            </summary>
            <value>The culture code.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiContext.CustomizedHeaders">
            <summary>
            Gets or sets the customized headers.
            </summary>
            <value>The customized headers.</value>
        </member>
        <member name="M:Beyova.RestApi.ApiContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.ApiContext"/> class.
            </summary>
        </member>
        <member name="M:Beyova.RestApi.ApiContext.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Beyova.RestApi.RestApiEventHandlers">
            <summary>
            Class RestApiEventHandlers. This class is to save sensitive event handlers for <see cref="T:Beyova.RestApi.ApiHandlerBase"/> or <see cref="T:Beyova.RestApi.RestApiRouter"/>. Such as initialize thread user info by token.
            </summary>
        </member>
        <member name="M:Beyova.RestApi.RestApiEventHandlers.GetCredentialByToken(System.String)">
            <summary>
            Gets the credential by token.
            </summary>
            <param name="token">The token.</param>
            <returns>ICredential.</returns>
        </member>
        <member name="T:Beyova.RestApi.RestApiSettings">
            <summary>
            Class RestApiSettings.
            </summary>
        </member>
        <member name="P:Beyova.RestApi.RestApiSettings.EnableContentCompression">
            <summary>
            Gets or sets a value indicating whether [enable content compression].
            </summary>
            <value><c>true</c> if [enable content compression]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.RestApi.RestApiSettings.JsonConverters">
            <summary>
            Gets or sets the json converters.
            </summary>
            <value>The json converters.</value>
        </member>
        <member name="P:Beyova.RestApi.RestApiSettings.EventHandlers">
            <summary>
            Gets or sets the event handlers.
            </summary>
            <value>The event handlers.</value>
        </member>
        <member name="P:Beyova.RestApi.RestApiSettings.OmitExceptionDetail">
            <summary>
            Gets or sets a value indicating whether [omit exception detail].
            </summary>
            <value><c>true</c> if [omit exception detail]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.RestApi.RestApiSettings.OriginalIpAddressHeaderKey">
            <summary>
            Gets or sets the original ip address header key. If not specified, use <see cref="F:Beyova.HttpConstants.HttpHeader.ORIGINAL"/>.
            </summary>
            <value>The original ip address header key.</value>
        </member>
        <member name="P:Beyova.RestApi.RestApiSettings.OriginalUserAgentHeaderKey">
            <summary>
            Gets or sets the original user agent header key.
            </summary>
            <value>The original user agent header key.</value>
        </member>
        <member name="P:Beyova.RestApi.RestApiSettings.CacheHeaderKey">
            <summary>
            Gets or sets the cache header key. If specific value is later than returned object's stamp, return 304. It is effected when return type is <see cref="T:Beyova.ISimpleBaseObject"/>
            </summary>
            <value>The cache header key.</value>
        </member>
        <member name="P:Beyova.RestApi.RestApiSettings.VersionMatchKey">
            <summary>
            Gets or sets the version match key. If specific value is equals snapshot key,return 304. It is effected when return type is <see cref="T:Beyova.ISnapshotable"/>
            </summary>
            <value>The version match key.</value>
        </member>
        <member name="T:Beyova.RestApi.ApiHandlerBase">
            <summary>
            Class ApiHandlerBase.
            </summary>
        </member>
        <member name="F:Beyova.RestApi.ApiHandlerBase.BuiltInFeatureVersionKeyword">
            <summary>
            The built-in feature version keyword
            </summary>
        </member>
        <member name="F:Beyova.RestApi.ApiHandlerBase.defaultSettingName">
            <summary>
            The default setting name
            </summary>
        </member>
        <member name="F:Beyova.RestApi.ApiHandlerBase.jsonConverters">
            <summary>
            The json converters
            </summary>
        </member>
        <member name="F:Beyova.RestApi.ApiHandlerBase.JsonConverters">
            <summary>
            The json converters
            </summary>
        </member>
        <member name="F:Beyova.RestApi.ApiHandlerBase.settingsContainer">
            <summary>
            The settings container
            </summary>
        </member>
        <member name="F:Beyova.RestApi.ApiHandlerBase.defaultRestApiSettings">
            <summary>
            The default rest API settings
            </summary>
        </member>
        <member name="P:Beyova.RestApi.ApiHandlerBase.DefaultRestApiSettings">
            <summary>
            Gets the default rest API settings.
            </summary>
            <value>The default rest API settings.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiHandlerBase.DefaultSettings">
            <summary>
            Gets or sets the default settings.
            </summary>
            <value>The default rest settings.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiHandlerBase.AllowOptions">
            <summary>
            Gets or sets a value indicating whether [allow options].
            </summary>
            <value><c>true</c> if [allow options]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.SpecifyGlobalJsonSerializationConverters(Newtonsoft.Json.JsonConverter[])">
            <summary>
            Specifies the global json serialization converters.
            </summary>
            <param name="converters">The converters.</param>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Beyova.RestApi.ApiHandlerBase"/> class.
            </summary>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.#ctor(Beyova.RestApi.RestApiSettings,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.ApiHandlerBase" /> class.
            </summary>
            <param name="defaultApiSettings">The default API settings.</param>
            <param name="allowOptions">if set to <c>true</c> [allow options].</param>
        </member>
        <member name="P:Beyova.RestApi.ApiHandlerBase.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler" /> instance.
            </summary>
            <value><c>true</c> if this instance is reusable; otherwise, <c>false</c>.</value>
            <returns>true if the <see cref="T:System.Web.IHttpHandler" /> instance is reusable; otherwise, false.</returns>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the <see cref="T:System.Web.IHttpHandler" /> interface.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.</param>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.ProcessBuiltInFeature(System.Web.HttpRequest,Beyova.RestApi.RuntimeContext,System.Boolean,System.String@)">
            <summary>
            Processes the built in feature.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="runtimeContext">The runtime context.</param>
            <param name="isLocalhost">The is localhost.</param>
            <param name="contentType">Type of the content.</param>
            <returns>
            System.Object.
            </returns>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.Prepare(System.Web.HttpRequest)">
            <summary>
            Prepares the specified request.
            <remarks>
            This method would be called before <c>ProcessRoute</c>. It can be used to help you to do some preparation, such as get something from headers or cookie for later actions.
            ou can save them in Thread data so that you can get them later in <c>ProcessRoute</c>, <c>Invoke</c>, <c>PackageOutput</c> ,etc.
            If any exception is throw from this method, the process flow would be interrupted.
            </remarks></summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.InitializeContext(System.Web.HttpRequest,Beyova.RestApi.RuntimeContext)">
            <summary>
            Initializes the context.
            <remarks>
            This method would be called after <c>ProcessRoute</c> and before <c>Invoke</c>. It can be used to help you to do some context initialization, such as get something from database for later actions.
            ou can save them in Thread data so that you can get them later in <c>Invoke</c>, <c>PackageOutput</c> ,etc.
            If any exception is throw from this method, the process flow would be interrupted.
            </remarks>
            </summary>
            <param name="request">The request.</param>
            <param name="runtimeContext">The runtime context.</param>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.Invoke(System.Object,System.Reflection.MethodInfo,System.Web.HttpRequest,System.String,System.String@)">
            <summary>
            Invokes the specified method information.
            <remarks>
            Invoke action would regard to method parameter to use difference logic. Following steps show the IF-ELSE case. When it is hit, other would not go through.
            <list type="number"><item>
            If input parameter count is 0, invoke without parameter object.
            </item><item>
            If input parameter count is 1 and key is not empty or null, invoke using key.
            </item><item>
            If input parameter count is 1 and key is empty or null, invoke using key, try to get JSON object from request body and convert to object for invoke.
            </item><item>
            If input parameter count more than 1, try read JSON data to match parameters by name (ignore case) in root level, then invoke.
            </item></list></remarks></summary>
            <param name="instance">The instance.</param>
            <param name="methodInfo">The method information.</param>
            <param name="httpRequest">The HTTP request.</param>
            <param name="key">The key.</param>
            <param name="jsonBody">The json body.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.InternalInvoke(System.Object,System.Reflection.MethodInfo,System.Byte[],System.Uri,System.String,System.String@)">
            <summary>
            Internals the invoke.
            </summary>
            <param name="instance">The instance.</param>
            <param name="methodInfo">The method information.</param>
            <param name="bodyData">The body data.</param>
            <param name="uri">The URI.</param>
            <param name="key">The key.</param>
            <param name="jsonBody">The json body.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.ProcessRoute(System.Web.HttpRequest)">
            <summary>
            Processes the route. More than 1 parameters, from either query string or body json.
            </summary>
            <param name="request">The request.</param>
            <returns>Exception.</returns>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.PackageOutput(System.Web.HttpResponse,System.Object,Beyova.RestApi.RuntimeApiOperationParameters,Beyova.ExceptionSystem.BaseException,System.String,System.Boolean,Beyova.RestApi.RestApiSettings)">
            <summary>
            Packages the output.
            </summary>
            <param name="response">The response.</param>
            <param name="data">The data.</param>
            <param name="operationParameters">The operation parameters.</param>
            <param name="baseException">The base exception.</param>
            <param name="acceptEncoding">Name of the compress.</param>
            <param name="noBody">if set to <c>true</c> [no body].</param>
            <param name="settings">The settings.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.PackageResponse(System.Web.HttpResponse,System.Object,Beyova.ExceptionSystem.BaseException,System.String,System.Boolean,System.String,Beyova.RestApi.RestApiSettings)">
            <summary>
            Packages the response.
            </summary>
            <param name="response">The response.</param>
            <param name="data">The data.</param>
            <param name="ex">The ex.</param>
            <param name="acceptEncoding">Name of the compression.</param>
            <param name="noBody">if set to <c>true</c> [no body].</param>
            <param name="contentType">Type of the content.</param>
            <param name="settings">The settings.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.PackageResponse(System.Web.HttpResponseBase,System.Object,Beyova.ExceptionSystem.BaseException,System.String,System.Boolean,System.String,Beyova.RestApi.RestApiSettings)">
            <summary>
            Packages the response.
            </summary>
            <param name="response">The response.</param>
            <param name="data">The data.</param>
            <param name="ex">The ex.</param>
            <param name="acceptEncoding">The accept encoding.</param>
            <param name="noBody">The no body.</param>
            <param name="contentType">Type of the content.</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.PackageResponse(System.Web.HttpResponseBase,System.Object,Beyova.RestApi.RuntimeApiOperationParameters,Beyova.ExceptionSystem.BaseException,System.String,System.Boolean,Beyova.RestApi.RestApiSettings)">
            <summary>
            Packages the response.
            </summary>
            <param name="response">The response.</param>
            <param name="data">The data.</param>
            <param name="operationParameters">The operation parameters.</param>
            <param name="ex">The ex.</param>
            <param name="acceptEncoding">The accept encoding.</param>
            <param name="noBody">if set to <c>true</c> [no body].</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.AddSetting(System.String,Beyova.RestApi.RestApiSettings,System.Boolean)">
            <summary>
            Adds the setting.
            </summary>
            <param name="name">The name.</param>
            <param name="setting">The setting.</param>
            <param name="overrideIfExists">The override if exists.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.DeserializeJsonObject(System.String,System.Type)">
            <summary>
            Deserializes the json object.
            </summary>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.RestApi.ApiHandlerBase.GetRestApiSettingByName(System.String,System.Boolean)">
            <summary>
            Gets the name of the rest API setting by.
            </summary>
            <param name="name">The name.</param>
            <param name="useDefaultIfNotFound">The use default if not found.</param>
            <returns>Beyova.RestApi.RestApiSettings.</returns>
        </member>
        <member name="T:Beyova.RestApi.RestApiRouter">
            <summary>
            Class RestApiRouter, which deeply integrated with <see cref="T:Beyova.ContextHelper"/> for common usage.
            </summary>
        </member>
        <member name="F:Beyova.RestApi.RestApiRouter.routeOperationLocker">
            <summary>
            The route operation locker
            </summary>
        </member>
        <member name="F:Beyova.RestApi.RestApiRouter.routes">
            <summary>
            The routes
            </summary>
        </member>
        <member name="P:Beyova.RestApi.RestApiRouter.RuntimeRoutes">
            <summary>
            Gets the runtime routes.
            </summary>
            <value>
            The runtime routes.
            </value>
        </member>
        <member name="F:Beyova.RestApi.RestApiRouter.initializedTypes">
            <summary>
            The initialized types
            </summary>
        </member>
        <member name="F:Beyova.RestApi.RestApiRouter._firstInstance">
            <summary>
            The _first instance
            </summary>
        </member>
        <member name="P:Beyova.RestApi.RestApiRouter.FirstInstance">
            <summary>
            Gets the first instance.
            </summary>
            <value>The first instance.</value>
        </member>
        <member name="M:Beyova.RestApi.RestApiRouter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.RestApiRouter"/> class.
            </summary>
        </member>
        <member name="M:Beyova.RestApi.RestApiRouter.#ctor(Beyova.RestApi.RestApiSettings,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.RestApiRouter" /> class.
            </summary>
            <param name="defaultApiSettings">The default API settings.</param>
            <param name="allowOptions">if set to <c>true</c> [allow options].</param>
        </member>
        <member name="M:Beyova.RestApi.RestApiRouter.Add(System.Object,Beyova.RestApi.RestApiSettings)">
            <summary>
            Adds the handler (instance and settings) into route.
            </summary>
            <param name="instance">The instance.</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Beyova.RestApi.RestApiRouter.InitializeRoute(System.Object,Beyova.RestApi.RestApiSettings)">
            <summary>
            Initializes the routes.
            </summary>
            <param name="instance">The instance.</param>
            <param name="settings">The settings.</param>
            <exception cref="T:Beyova.ExceptionSystem.DataConflictException">Route</exception>
        </member>
        <member name="M:Beyova.RestApi.RestApiRouter.InitializeApiType(System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{Beyova.Api.ApiRouteIdentifier,Beyova.RestApi.RuntimeRoute},System.Type,System.Object,Beyova.RestApi.RestApiSettings,Beyova.RestApi.ApiContractAttribute,Beyova.Api.ApiModuleAttribute)">
            <summary>
            Initializes the type of the API.
            </summary>
            <param name="doneInterfaceTypes">The done interface types.</param>
            <param name="routes">The routes.</param>
            <param name="interfaceType">Type of the interface.</param>
            <param name="instance">The instance.</param>
            <param name="settings">The settings.</param>
            <param name="parentApiContractAttribute">The parent API class attribute.</param>
            <param name="parentApiModuleAttribute">The parent API module attribute.</param>
        </member>
        <member name="M:Beyova.RestApi.RestApiRouter.ProcessRoute(System.Web.HttpRequest)">
            <summary>
            Processes the route.
            </summary>
            <param name="request">The request.</param>
            <returns>Exception.</returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiRouter.ProcessRequestToRuntimeContext(System.String,System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)">
            <summary>
            Processes the request to runtime context.
            </summary>
            <param name="httpMethod">The HTTP method.</param>
            <param name="uri">The URI.</param>
            <param name="headers">The headers.</param>
            <param name="doAuthentication">The do authentication.</param>
            <returns>Beyova.RestApi.RuntimeContext.</returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiRouter.ProcessBuiltInFeature(System.Web.HttpRequest,Beyova.RestApi.RuntimeContext,System.Boolean,System.String@)">
            <summary>
            Processes the build in feature.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="runtimeContext">The runtime context.</param>
            <param name="isLocalhost">The is localhost.</param>
            <param name="contentType">Type of the content.</param>
            <returns>
            System.Object.
            </returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiRouter.Authenticate(Beyova.RestApi.RuntimeRoute,System.String,System.String@)">
            <summary>
            Authenticates the specified service type.
            </summary>
            <param name="runtimeRoute">The runtime route.</param>
            <param name="token">The token.</param>
            <param name="userIdentifier">The user identifier.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiRouter.ToWebRoute">
            <summary>
            To the web route.
            </summary>
            <returns>Route.</returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiRouter.GetHttpHandler(System.Web.Routing.RequestContext)">
            <summary>
            Provides the object that processes the request.
            </summary>
            <param name="requestContext">An object that encapsulates information about the request.</param>
            <returns>An object that processes the request.</returns>
        </member>
        <member name="T:Beyova.RestApi.RuntimeRoute">
            <summary>
            Class RuntimeRoute.
            </summary>
        </member>
        <member name="P:Beyova.RestApi.RuntimeRoute.MethodInfo">
            <summary>
            Gets or sets the method information.
            </summary>
            <value>The method information.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeRoute.InstanceType">
            <summary>
            Gets or sets the type of the instance.
            </summary>
            <value>The type of the instance.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeRoute.Instance">
            <summary>
            Gets or sets the instance.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeRoute.IsActionUsed">
            <summary>
            Gets or sets a value indicating whether this instance is action used.
            </summary>
            <value><c>true</c> if this instance is action used; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeRoute.Setting">
            <summary>
            Gets or sets the setting.
            </summary>
            <value>The setting.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeRoute.OperationParameters">
            <summary>
            Gets or sets the operation parameters.
            </summary>
            <value>The operation parameters.</value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeRoute.ApiRouteIdentifier">
            <summary>
            Gets the API route identifier.
            </summary>
            <value>
            The API route identifier.
            </value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeRoute.ApiCacheAttribute">
            <summary>
            Gets the API cache attribute.
            </summary>
            <value>
            The API cache attribute.
            </value>
        </member>
        <member name="P:Beyova.RestApi.RuntimeRoute.ApiCacheContainer">
            <summary>
            Gets or sets the API cache container.
            </summary>
            <value>
            The API cache container.
            </value>
        </member>
        <member name="M:Beyova.RestApi.RuntimeRoute.#ctor(Beyova.Api.ApiRouteIdentifier,System.Reflection.MethodInfo,System.Type,System.Object,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,Beyova.RestApi.RestApiSettings,Beyova.Cache.ApiCacheAttribute,System.Collections.Generic.IDictionary{System.String,Beyova.Api.ApiPermission},System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.RuntimeRoute" /> class.
            </summary>
            <param name="routeIdentifier">The route key.</param>
            <param name="methodInfo">The method information.</param>
            <param name="instanceType">Type of the instance.</param>
            <param name="instance">The instance.</param>
            <param name="isActionUsed">if set to <c>true</c> [is action used].</param>
            <param name="isTokenRequired">if set to <c>true</c> [is token required].</param>
            <param name="moduleName">Name of the module.</param>
            <param name="contentType">Type of the content.</param>
            <param name="isDataSensitive">if set to <c>true</c> [is data sensitive].</param>
            <param name="setting">The setting.</param>
            <param name="apiCacheAttribute">The API cache attribute.</param>
            <param name="permissions">The permissions.</param>
            <param name="headerKeys">The header keys.</param>
        </member>
        <member name="M:Beyova.RestApi.RuntimeRoute.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Beyova.RestApi.RestApiClient">
            <summary>
            Class RestApiClient.
            </summary>
        </member>
        <member name="P:Beyova.RestApi.RestApiClient.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.RestApi.RestApiClient.AcceptGZip">
            <summary>
            Gets or sets a value indicating whether [accept GZIP].
            </summary>
            <value><c>true</c> if [accept g zip]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.RestApi.RestApiClient.Endpoint">
            <summary>
            Gets or sets the host.
            </summary>
            <value>The host.</value>
        </member>
        <member name="P:Beyova.RestApi.RestApiClient.Timeout">
            <summary>
            Gets or sets the timeout.
            </summary>
            <value>
            The timeout.
            </value>
        </member>
        <member name="F:Beyova.RestApi.RestApiClient.BaseClientVersion">
            <summary>
            The base client version
            </summary>
        </member>
        <member name="P:Beyova.RestApi.RestApiClient.ClientGeneratedVersion">
            <summary>
            The client generated version
            </summary>
        </member>
        <member name="M:Beyova.RestApi.RestApiClient.#ctor(Beyova.Api.ApiEndpoint,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.RestApiClient" /> class.
            </summary>
            <param name="endpoint">The endpoint.</param>
            <param name="acceptGZip">if set to <c>true</c> [accept g zip].</param>
            <param name="timeout">The timeout.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Beyova.RestApi.RestApiClient.#ctor(Beyova.Api.ApiEndpoint,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.RestApiClient" /> class.
            </summary>
            <param name="endpoint">The endpoint.</param>
            <param name="token">The token.</param>
            <param name="acceptGZip">The accept g zip.</param>
        </member>
        <member name="M:Beyova.RestApi.RestApiClient.InvokeAsVoid(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Invokes as void.
            </summary>
            <param name="realm">The realm.</param>
            <param name="version">The version.</param>
            <param name="httpMethod">The HTTP method.</param>
            <param name="resourceName">Name of the resource.</param>
            <param name="resourceAction">The resource action.</param>
            <param name="key">The key.</param>
            <param name="queryString">The query string.</param>
            <param name="bodyJson">The body json.</param>
            <param name="methodNameForTrace">The method name for trace.</param>
        </member>
        <member name="M:Beyova.RestApi.RestApiClient.Invoke(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Invokes the specified HTTP method.
            </summary>
            <param name="realm">The realm.</param>
            <param name="version">The version.</param>
            <param name="httpMethod">The HTTP method.</param>
            <param name="resourceName">Name of the resource.</param>
            <param name="resourceAction">The resource action.</param>
            <param name="key">The key.</param>
            <param name="queryString">The query string.</param>
            <param name="bodyJson">The body json.</param>
            <param name="methodNameForTrace">The method name for trace.</param>
            <returns>JToken.</returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiClient.InvokeUsingQueryString(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Invokes the using query string.
            </summary>
            <param name="realm">The realm.</param>
            <param name="version">The version.</param>
            <param name="httpMethod">The HTTP method.</param>
            <param name="resourceName">Name of the resource.</param>
            <param name="resourceAction">The resource action.</param>
            <param name="parameter">The parameter.</param>
            <param name="methodNameForTrace">The method name for trace.</param>
            <returns>JToken.</returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiClient.InvokeUsingCombinedQueryString(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Invokes the using combined query string.
            </summary>
            <param name="realm">The realm.</param>
            <param name="version">The version.</param>
            <param name="httpMethod">The HTTP method.</param>
            <param name="resourceName">Name of the resource.</param>
            <param name="resourceAction">The resource action.</param>
            <param name="parameters">The parameters.</param>
            <param name="methodNameForTrace">The method name for trace.</param>
            <returns>JToken.</returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiClient.InvokeUsingBody(System.String,System.String,System.String,System.String,System.String,System.Object,System.String)">
            <summary>
            Invokes the using body.
            </summary>
            <param name="realm">The realm.</param>
            <param name="version">The version.</param>
            <param name="httpMethod">The HTTP method.</param>
            <param name="resourceName">Name of the resource.</param>
            <param name="resourceAction">The resource action.</param>
            <param name="parameter">The parameter.</param>
            <param name="methodNameForTrace">The method name for trace.</param>
            <returns>JToken.</returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiClient.InvokeAsJToken(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Invokes as j token.
            </summary>
            <param name="realm">The realm.</param>
            <param name="version">The version.</param>
            <param name="httpMethod">The HTTP method.</param>
            <param name="resourceName">Name of the resource.</param>
            <param name="resourceAction">The resource action.</param>
            <param name="key">The key.</param>
            <param name="queryString">The query string.</param>
            <param name="bodyJson">The body json.</param>
            <param name="timeout">The timeout.</param>
            <param name="methodNameForTrace">The method name for trace.</param>
            <returns>
            JToken.
            </returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiClient.GetRequestEndpoint(Beyova.Api.ApiEndpoint,System.String,System.String)">
            <summary>
            Gets the request endpoint.
            </summary>
            <param name="apiEndpoint">The API endpoint.</param>
            <param name="realm">The realm.</param>
            <param name="version">The version.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiClient.CreateHttpRequest(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates the HTTP request.
            </summary>
            <param name="realm">The realm.</param>
            <param name="version">The version.</param>
            <param name="httpMethod">The HTTP method.</param>
            <param name="resourceName">Name of the resource.</param>
            <param name="resourceAction">The resource action.</param>
            <param name="key">The key.</param>
            <param name="queryString">The query string.</param>
            <returns>System.Net.HttpWebRequest.</returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiClient.FillAdditionalData(System.Net.HttpWebRequest)">
            <summary>
            Fills the additional data.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
        </member>
        <member name="T:Beyova.RestApi.ApiContractAttribute">
            <summary>
            Class ApiContractAttribute. It is used to define interface which used as REST API.
            </summary>
        </member>
        <member name="P:Beyova.RestApi.ApiContractAttribute.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiContractAttribute.Name">
            <summary>
            Gets or sets the name.
            This name is used for as service identifier in <see cref="T:Beyova.ApiTracking.ApiEventLog"/> model.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiContractAttribute.Realm">
            <summary>
            Gets or sets the realm.
            </summary>
            <value>The realm.</value>
        </member>
        <member name="M:Beyova.RestApi.ApiContractAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.ApiContractAttribute" /> class.
            </summary>
            <param name="version">The version.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Beyova.RestApi.ApiContractAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.ApiContractAttribute" /> class.
            </summary>
            <param name="version">The version.</param>
            <param name="name">The name.</param>
            <param name="realm">The realm.</param>
        </member>
        <member name="T:Beyova.RestApi.ApiOperationAttribute">
            <summary>
            Class ApiUriAttribute.
            </summary>
        </member>
        <member name="P:Beyova.RestApi.ApiOperationAttribute.ResourceName">
            <summary>
            Gets or sets the name of the resource.
            </summary>
            <value>The name of the resource.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiOperationAttribute.HttpMethod">
            <summary>
            Gets or sets the HTTP method.
            </summary>
            <value>The HTTP method.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiOperationAttribute.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiOperationAttribute.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:Beyova.RestApi.ApiOperationAttribute.IsDataSensitive">
            <summary>
            Gets or sets a value indicating whether this instance is data sensitive. When it is set as true, EventLog would not log inbound/outbound body.
            </summary>
            <value><c>true</c> if this instance is data sensitive; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Beyova.RestApi.ApiOperationAttribute.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.ApiOperationAttribute" /> class.
            </summary>
            <param name="resourceName">The type.</param>
            <param name="httpMethod">The HTTP method.</param>
            <param name="action">The action.</param>
            <param name="contentType">Type of the content.</param>
            <param name="isDataSensitive">if set to <c>true</c> [is data sensitive].</param>
        </member>
        <member name="M:Beyova.RestApi.ApiOperationAttribute.#ctor(System.Type,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RestApi.ApiOperationAttribute" /> class.
            </summary>
            <param name="resourceType">Type of the resource.</param>
            <param name="httpMethod">The HTTP method.</param>
            <param name="action">The action.</param>
        </member>
        <member name="T:Beyova.RestApi.RestApiExtension">
            <summary>
            Class RestApiExtension.
            </summary>
        </member>
        <member name="M:Beyova.RestApi.RestApiExtension.ApiEventLogToString(Beyova.ApiTracking.ApiEventLog)">
            <summary>
            APIs the event log to string.
            </summary>
            <param name="log">The log.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiExtension.ApiTraceLogToString(System.Text.StringBuilder,Beyova.ApiTracking.ApiTraceLogPiece,System.Int32)">
            <summary>
            APIs the trace log to string.
            </summary>
            <param name="builder">The builder.</param>
            <param name="log">The log.</param>
            <param name="level">The level.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiExtension.ApiTraceLogToString(Beyova.ApiTracking.ApiTraceLog)">
            <summary>
            APIs the trace log to string.
            </summary>
            <param name="log">The log.</param>
            <returns>System.String.</returns>
        </member>
        <member name="F:Beyova.RestApi.RestApiExtension.apiUrlRegex">
            <summary>
            The API URL regex
            </summary>
        </member>
        <member name="F:Beyova.RestApi.RestApiExtension.methodMatch">
            <summary>
            The method match
            </summary>
        </member>
        <member name="M:Beyova.RestApi.RestApiExtension.FillRouteInfo(System.Uri,Beyova.RestApi.RuntimeContext)">
            <summary>
            Fills the route information.
            </summary>
            <param name="uri">The URI.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if succeed to match url format and fill route information, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiExtension.ToDictionary(System.Collections.Generic.IEnumerable{Beyova.Api.ApiPermissionAttribute})">
            <summary>
            To the dictionary.
            </summary>
            <param name="methodPermissionAttributes">The method permission attributes.</param>
            <returns>Dictionary&lt;System.String, ApiPermission&gt;.</returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiExtension.ValidateApiPermission(System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,Beyova.Api.ApiPermission})">
            <summary>
            Validates the API permission. Return the permission which cause validation failure.
            </summary>
            <param name="userPermissions">The user permissions.</param>
            <param name="methodPermissions">The method permissions.</param>
            <returns>System.Nullable&lt;KeyValuePair&lt;System.String, ApiPermission&gt;&gt;.</returns>
        </member>
        <member name="M:Beyova.RestApi.RestApiExtension.ValidateApiPermission(System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,Beyova.Api.ApiPermission},System.String,System.String)">
            <summary>
            Validates the API permission.
            </summary>
            <param name="userPermissions">The user permissions.</param>
            <param name="methodPermissions">The method permissions.</param>
            <param name="token">The token.</param>
            <param name="methodName">Name of the method.</param>
            <returns>BaseException.</returns>
        </member>
        <member name="T:Beyova.Api.IApiContractOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Beyova.Api.IApiContractOptions.Realm">
            <summary>
            Gets or sets the realm.
            </summary>
            <value>
            The realm.
            </value>
        </member>
        <member name="P:Beyova.Api.IApiContractOptions.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="T:Beyova.Api.ApiRouteIdentifier">
            <summary>
            Class ApiRouteIdentifier.
            </summary>
        </member>
        <member name="P:Beyova.Api.ApiRouteIdentifier.Realm">
            <summary>
            Gets or sets the realm.
            </summary>
            <value>
            The realm.
            </value>
        </member>
        <member name="P:Beyova.Api.ApiRouteIdentifier.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="P:Beyova.Api.ApiRouteIdentifier.Resource">
            <summary>
            Gets or sets the resource.
            </summary>
            <value>
            The resource.
            </value>
        </member>
        <member name="P:Beyova.Api.ApiRouteIdentifier.HttpMethod">
            <summary>
            Gets or sets the HTTP method.
            </summary>
            <value>
            The HTTP method.
            </value>
        </member>
        <member name="P:Beyova.Api.ApiRouteIdentifier.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>
            The action.
            </value>
        </member>
        <member name="P:Beyova.Api.ApiRouteIdentifier.ParameterizedIdentifiers">
            <summary>
            Gets or sets the parameterized identifiers.
            </summary>
            <value>
            The parameterized identifiers.
            </value>
        </member>
        <member name="M:Beyova.Api.ApiRouteIdentifier.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Api.ApiRouteIdentifier"/> class.
            </summary>
        </member>
        <member name="M:Beyova.Api.ApiRouteIdentifier.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Api.ApiRouteIdentifier"/> class.
            </summary>
            <param name="realm">The realm.</param>
            <param name="version">The version.</param>
            <param name="resource">The resource.</param>
            <param name="httpMethod">The HTTP method.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Beyova.Api.ApiRouteIdentifier.SetParameterizedIdentifier(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Sets the parameterized identifier.
            </summary>
            <param name="queryString">The query string.</param>
        </member>
        <member name="M:Beyova.Api.ApiRouteIdentifier.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Beyova.Api.ApiRouteIdentifier.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.Api.ApiRouteIdentifier.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Beyova.Api.ApiRouteIdentifier.FromApiObjects(Beyova.RestApi.ApiContractAttribute,Beyova.RestApi.ApiOperationAttribute)">
            <summary>
            Froms the API objects.
            </summary>
            <param name="apiContract">The API contract.</param>
            <param name="apiOperation">The API operation.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.Api.ApiRouteIdentifier.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="T:Beyova.Api.ApiTraceContext">
            <summary>
            Class ApiTraceContext.
            </summary>
        </member>
        <member name="F:Beyova.Api.ApiTraceContext._current">
            <summary>
            The _current
            </summary>
        </member>
        <member name="F:Beyova.Api.ApiTraceContext._root">
            <summary>
            The _root
            </summary>
        </member>
        <member name="F:Beyova.Api.ApiTraceContext.DebugEnabled">
            <summary>
            The debug enabled
            </summary>
        </member>
        <member name="P:Beyova.Api.ApiTraceContext.Root">
            <summary>
            Gets the root.
            </summary>
            <value>The root.</value>
        </member>
        <member name="P:Beyova.Api.ApiTraceContext.TraceId">
            <summary>
            Gets the trace identifier.
            </summary>
            <value>The trace identifier.</value>
        </member>
        <member name="P:Beyova.Api.ApiTraceContext.TraceSequence">
            <summary>
            Gets the trace sequence.
            </summary>
            <value>The trace sequence.</value>
        </member>
        <member name="M:Beyova.Api.ApiTraceContext.Initialize(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes the specified trace identifier.
            </summary>
            <param name="traceId">The trace identifier.</param>
            <param name="traceSequence">The trace sequence.</param>
            <param name="entryStamp">The entry stamp.</param>
            <param name="methodName">Name of the method.</param>
        </member>
        <member name="M:Beyova.Api.ApiTraceContext.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:Beyova.Api.ApiTraceContext.GetCurrentTraceLog(System.Boolean)">
            <summary>
            Gets the current trace log.
            </summary>
            <param name="dispose">if set to <c>true</c> [dispose].</param>
            <returns>ApiTraceLog.</returns>
        </member>
        <member name="M:Beyova.Api.ApiTraceContext.Enter(System.String,System.String,System.Boolean)">
            <summary>
            Enters the specified method.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="methodName">Name of the method.</param>
            <param name="setNameAsMajor">The set name as major.</param>
        </member>
        <member name="M:Beyova.Api.ApiTraceContext.Enter(Beyova.RestApi.RuntimeContext,System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Enters the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="entryStamp">The entry stamp.</param>
            <param name="setNameAsMajor">The set name as major.</param>
        </member>
        <member name="M:Beyova.Api.ApiTraceContext.Enter(System.Runtime.Remoting.Messaging.IMethodCallMessage,System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Enters the specified method call message.
            </summary>
            <param name="methodCallMessage">The method call message.</param>
            <param name="entryStamp">The entry stamp.</param>
            <param name="setNameAsMajor">The set name as major.</param>
        </member>
        <member name="M:Beyova.Api.ApiTraceContext.Enter(Beyova.AOP.MethodCallInfo,System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Enters the specified method call information.
            </summary>
            <param name="methodCallInfo">The method call information.</param>
            <param name="entryStamp">The entry stamp.</param>
            <param name="setNameAsMajor">if set to <c>true</c> [set name as major].</param>
        </member>
        <member name="M:Beyova.Api.ApiTraceContext.Enter(Beyova.ApiTracking.ApiTraceLogPiece,System.Boolean)">
            <summary>
            Enters the specified trace log.
            </summary>
            <param name="traceLog">The trace log.</param>
            <param name="setNameAsMajor">The set name as major.</param>
        </member>
        <member name="M:Beyova.Api.ApiTraceContext.SetMajorMethodName(System.String)">
            <summary>
            Sets the name of the major method.
            </summary>
            <param name="methodName">Name of the method.</param>
        </member>
        <member name="M:Beyova.Api.ApiTraceContext.Exit(System.Runtime.Remoting.Messaging.IMethodReturnMessage,System.Nullable{System.DateTime})">
            <summary>
            Exits the specified method message.
            </summary>
            <param name="methodMessage">The method message.</param>
            <param name="exitStamp">The exit stamp.</param>
        </member>
        <member name="M:Beyova.Api.ApiTraceContext.Exit(System.Nullable{System.Guid},System.Nullable{System.DateTime})">
            <summary>
            Exits the specified exception.
            </summary>
            <param name="exceptionKey">The exception key.</param>
            <param name="exitStamp">The exit stamp.</param>
        </member>
        <member name="M:Beyova.Api.ApiTraceContext.WriteLine(System.String,System.String[])">
            <summary>
            Writes the line.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Beyova.Api.ApiTraceContext.WriteHttpRequestRaw(System.Net.HttpWebRequest)">
            <summary>
            Writes the HTTP request raw.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
        </member>
        <member name="M:Beyova.Api.ApiTraceContext.WriteHttpResponseRaw(System.Net.WebHeaderCollection,System.String)">
            <summary>
            Writes the HTTP response raw.
            </summary>
            <param name="headers">The headers.</param>
            <param name="body">The body.</param>
        </member>
        <member name="M:Beyova.Api.ApiTraceContext.Exit(Beyova.ApiTracking.ApiTraceLogPiece,System.Nullable{System.Guid},System.Nullable{System.DateTime})">
            <summary>
            Fills the exit information.
            </summary>
            <param name="piece">The piece.</param>
            <param name="exceptionKey">The exception key.</param>
            <param name="exitStamp">The exit stamp.</param>
        </member>
        <member name="T:Beyova.Api.ApiDescriptionAttribute">
            <summary>
            Class ApiDescriptionAttribute. This attribute is used for generating API documentation only.
            </summary>
        </member>
        <member name="P:Beyova.Api.ApiDescriptionAttribute.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="M:Beyova.Api.ApiDescriptionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Api.ApiDescriptionAttribute" /> class.
            </summary>
            <param name="description">The description.</param>
        </member>
        <member name="T:Beyova.Api.ApiModuleAttribute">
            <summary>
            Class ApiModuleAttribute. This attribute is for indicating which module current interface are in, which is specified in Api Event.
            </summary>
        </member>
        <member name="P:Beyova.Api.ApiModuleAttribute.ModuleName">
            <summary>
            Gets or sets the name of the module.
            <remarks>
            This field is for tracking only.</remarks>
            </summary>
            <value>The name of the module.</value>
        </member>
        <member name="M:Beyova.Api.ApiModuleAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Api.ApiModuleAttribute" /> class.
            </summary>
            <param name="moduleName">Name of the module.</param>
        </member>
        <member name="M:Beyova.Api.ApiModuleAttribute.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Beyova.Api.ApiEndpoint">
            <summary>
            Class ApiEndpoint.
            </summary>
        </member>
        <member name="P:Beyova.Api.ApiEndpoint.Account">
            <summary>
            Gets or sets the account.
            </summary>
            <value>The account.</value>
        </member>
        <member name="P:Beyova.Api.ApiEndpoint.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.Api.ApiEndpoint.SecondaryToken">
            <summary>
            Gets or sets the secondary token.
            </summary>
            <value>The secondary token.</value>
        </member>
        <member name="M:Beyova.Api.ApiEndpoint.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.Api.ApiEndpoint.ToUri">
            <summary>
            To the URI.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Beyova.Api.ApiEndpoint.ToUri(System.Boolean)">
            <summary>
            To the URI.
            </summary>
            <param name="appendApiSuffix">if set to <c>true</c> [append API suffix].</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.Api.ApiSettings">
            <summary>
            Class ApiSettings.
            </summary>
        </member>
        <member name="P:Beyova.Api.ApiSettings.Name">
            <summary>
            Gets or sets the name. Name would not involve API feature, but would help <see cref="T:Beyova.ContextHelper"/> find token delegate for authentication.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.Api.ApiSettings.ApiTracking">
            <summary>
            Gets or sets the API tracking.
            </summary>
            <value>The API tracking.</value>
        </member>
        <member name="P:Beyova.Api.ApiSettings.TokenHeaderKey">
            <summary>
            Gets or sets the token header key.
            </summary>
            <value>The token header key.</value>
        </member>
        <member name="P:Beyova.Api.ApiSettings.ClientIdentifierHeaderKey">
            <summary>
            Gets or sets the client identifier header key.
            </summary>
            <value>The client identifier header key.</value>
        </member>
        <member name="P:Beyova.Api.ApiSettings.TrackingEvent">
            <summary>
            Gets or sets a value indicating whether [tracking event].
            </summary>
            <value><c>true</c> if [tracking event]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Beyova.Api.ApiTraceExtension">
            <summary>
            Class ApiTraceExtension.
            </summary>
        </member>
        <member name="M:Beyova.Api.ApiTraceExtension.ToTraceLog(Beyova.RestApi.RuntimeContext,Beyova.ApiTracking.ApiTraceLogPiece,System.Nullable{System.DateTime})">
            <summary>
            To the trace log.
            </summary>
            <param name="context">The context.</param>
            <param name="parent">The parent.</param>
            <param name="entryStamp">The entry stamp.</param>
            <returns>Beyova.ApiTracking.ApiTraceLogPiece.</returns>
        </member>
        <member name="M:Beyova.Api.ApiTraceExtension.ToTraceLog(System.Reflection.MethodInfo,Beyova.ApiTracking.ApiTraceLogPiece,System.Nullable{System.DateTime})">
            <summary>
            To the trace log.
            </summary>
            <param name="methodInfo">The method information.</param>
            <param name="parent">The parent.</param>
            <param name="entryStamp">The entry stamp.</param>
            <returns>Beyova.ApiTracking.ApiTraceLogPiece.</returns>
        </member>
        <member name="M:Beyova.Api.ApiTraceExtension.ToTraceLog(System.Runtime.Remoting.Messaging.IMethodCallMessage,Beyova.ApiTracking.ApiTraceLogPiece,System.Nullable{System.DateTime})">
            <summary>
            To the trace log.
            </summary>
            <param name="methodCallMessage">The method call message.</param>
            <param name="parent">The parent.</param>
            <param name="entryStamp">The entry stamp.</param>
            <returns>Beyova.ApiTracking.ApiTraceLogPiece.</returns>
        </member>
        <member name="M:Beyova.Api.ApiTraceExtension.ToTraceLog(Beyova.AOP.MethodCallInfo,Beyova.ApiTracking.ApiTraceLogPiece,System.Nullable{System.DateTime})">
            <summary>
            To the trace log.
            </summary>
            <param name="methodCallMessage">The method call message.</param>
            <param name="parent">The parent.</param>
            <param name="entryStamp">The entry stamp.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.Api.ApiTraceExtension.ToFlat(Beyova.ApiTracking.ApiTraceLog)">
            <summary>
            To the flat.
            </summary>
            <param name="log">The log.</param>
            <returns>List&lt;ApiTraceLogPiece&gt;.</returns>
        </member>
        <member name="M:Beyova.Api.ApiTraceExtension.FillInnerTraceLog(System.Collections.Generic.List{Beyova.ApiTracking.ApiTraceLogPiece},Beyova.ApiTracking.ApiTraceLogPiece)">
            <summary>
            Fills the inner trace log.
            </summary>
            <param name="container">The container.</param>
            <param name="log">The log.</param>
        </member>
        <member name="T:Beyova.Api.ApiPermissionAttribute">
            <summary>
            Class ApiPermissionAttribute.
            </summary>
        </member>
        <member name="P:Beyova.Api.ApiPermissionAttribute.PermissionIdentifier">
            <summary>
            Gets or sets the permission identifier.
            </summary>
            <value>The permission identifier.</value>
        </member>
        <member name="P:Beyova.Api.ApiPermissionAttribute.Permission">
            <summary>
            Gets or sets the permission.
            </summary>
            <value>The permission.</value>
        </member>
        <member name="M:Beyova.Api.ApiPermissionAttribute.#ctor(System.String,Beyova.Api.ApiPermission)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Api.ApiPermissionAttribute" /> class.
            </summary>
            <param name="permissionIdentifier">The permission identifier.</param>
            <param name="permission">The permission.</param>
        </member>
        <member name="T:Beyova.Api.ApiPermission">
            <summary>
            Enum ApiPermission
            </summary>
        </member>
        <member name="F:Beyova.Api.ApiPermission.Undefined">
            <summary>
            Value indicating it is undefined
            </summary>
        </member>
        <member name="F:Beyova.Api.ApiPermission.Required">
            <summary>
            Value indicating it is required
            </summary>
        </member>
        <member name="F:Beyova.Api.ApiPermission.Denied">
            <summary>
            Value indicating it is denied
            </summary>
        </member>
        <member name="T:Beyova.Api.TokenRequiredAttribute">
            <summary>
            Class TokenRequiredAttribute.
            </summary>
        </member>
        <member name="P:Beyova.Api.TokenRequiredAttribute.TokenRequired">
            <summary>
            Gets or sets a value indicating whether [token required].
            </summary>
            <value><c>true</c> if [token required]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Beyova.Api.TokenRequiredAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Api.TokenRequiredAttribute" /> class.
            </summary>
            <param name="tokenRequired">if set to <c>true</c> [token required].</param>
        </member>
        <member name="T:Beyova.UriEndpoint">
            <summary>
            Class UriEndpoint.
            </summary>
        </member>
        <member name="P:Beyova.UriEndpoint.Protocol">
            <summary>
            Gets or sets the protocol.
            </summary>
            <value>The protocol.</value>
        </member>
        <member name="P:Beyova.UriEndpoint.Path">
            <summary>
            Gets or sets the path or path prefix. Example: "/path", "/path1/path2"
            </summary>
            <value>
            The path prefix.
            </value>
        </member>
        <member name="P:Beyova.UriEndpoint.Host">
            <summary>
            Gets or sets the host.
            </summary>
            <value>The host.</value>
        </member>
        <member name="P:Beyova.UriEndpoint.Port">
            <summary>
            Gets or sets the port.
            </summary>
            <value>The port.</value>
        </member>
        <member name="M:Beyova.UriEndpoint.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance. Format: {Protocol}://{Host}:{Port?}{PathPrefix}/
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.UriEndpoint.GetBaseUri">
            <summary>
            Gets the base URI.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.UriEndpoint.ToUri">
            <summary>
            To the URI.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Beyova.UriEndpoint.FillEndpointByUri(System.Uri,Beyova.UriEndpoint)">
            <summary>
            Fills the endpoint by URI.
            </summary>
            <param name="uri">The URI.</param>
            <param name="endpoint">The endpoint.</param>
        </member>
        <member name="T:Beyova.CommonServiceInterface.IAppVersionService`1">
             <summary>
            
             </summary>
             <typeparam name="TAppVersion">The type of the application version.</typeparam>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IAppVersionService`1.GetAppVersion(System.Nullable{System.Guid})">
            <summary>
            Gets the application version.
            </summary>
            <param name="platformKey">The platform key.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IAppVersionService`1.GetAppVersionSnapshot(System.Nullable{System.Guid})">
            <summary>
            Gets the application version snapshot.
            </summary>
            <param name="snapshotKey">The snapshot key.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IAppVersionService`1.QueryAppVersion(Beyova.AppVersionCriteria)">
            <summary>
            Queries the application version.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IAppVersionService`1.QueryAppVersionSnapshots(Beyova.AppVersionCriteria)">
            <summary>
            Queries the application version snapshots.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IAppVersionService`1.CreateOrUpdateAppVersion(Beyova.AppVersionBase)">
            <summary>
            Creates the or update application version.
            </summary>
            <param name="appVersion">The application version.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.CommonServiceInterface.IAppPlatformService`1">
             <summary>
            
             </summary>
             <typeparam name="TAppPlatform">The type of the application platform.</typeparam>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IAppPlatformService`1.CreateAppPlatform(`0)">
            <summary>
            Creates the application platform.
            </summary>
            <param name="appPlatform">The application platform.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IAppPlatformService`1.GetAppPlatforms(System.String)">
            <summary>
            Gets the application platforms.
            </summary>
            <param name="bundleId">The bundle identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.CommonServiceInterface.ISSOAuthorizationService`3">
            <summary>
            Interface ISSOAuthorizationService
            </summary>
            <typeparam name="TUserInfo">The type of the t user information.</typeparam>
            <typeparam name="TFunctionalRole">The type of the t functional role.</typeparam>
            <typeparam name="TAuthenticationResult">The type of the t authentication result.</typeparam>
        </member>
        <member name="T:Beyova.CommonServiceInterface.ISSOAuthorizationService`7">
            <summary>
            Interface IAuthenticationProfileService
            </summary>
            <typeparam name="TUserInfo">The type of the t user information.</typeparam>
            <typeparam name="TFunctionalRole">The type of the t functional role.</typeparam>
            <typeparam name="TSSOAuthorizationPartner">The type of the SSO authorization partner.</typeparam>
            <typeparam name="TSSOAuthorizationPartnerCriteria">The type of the SSO authorization partner criteria.</typeparam>
            <typeparam name="TSSOAuthorization">The type of the SSO authorization.</typeparam>
            <typeparam name="TSSOAuthorizationCriteria">The type of the SSO authorization criteria.</typeparam>
            <typeparam name="TAuthenticationResult">The type of the t authentication result.</typeparam>
        </member>
        <member name="M:Beyova.CommonServiceInterface.ISSOAuthorizationService`7.CreateOrUpdateSSOAuthorizationPartner(`2)">
            <summary>
            Creates the or update sso authorization partner.
            </summary>
            <param name="partner">The partner.</param>
            <returns>System.Nullable&lt;System.Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.ISSOAuthorizationService`7.QuerySSOAuthorizationPartner(`3)">
            <summary>
            Queries the sso authorization partner.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>System.Collections.Generic.List&lt;TSSOAuthorizationPartner&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.ISSOAuthorizationService`7.RequestTokenExchange(Beyova.SSOAuthorizationRequest)">
            <summary>
            Requests the token exchange.
            </summary>
            <param name="request">The request.</param>
            <returns>TSSOAuthorization.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.ISSOAuthorizationService`7.ExchangeToken(Beyova.SSOAuthorizationBase)">
            <summary>
            Exchanges the token.
            </summary>
            <param name="authorization">The authorization.</param>
            <returns>SessionInfo.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.ISSOAuthorizationService`7.RequestOAuth(Beyova.SSOAuthorizationRequest)">
            <summary>
            Requests the o authentication.
            </summary>
            <param name="request">The request.</param>
            <returns>TSSOAuthorization.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.ISSOAuthorizationService`7.GrantOAuth(`4)">
            <summary>
            Grants the o authentication.
            </summary>
            <param name="authorization">The authorization.</param>
            <returns>TSSOAuthorization.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.ISSOAuthorizationService`7.VerifyOAuth(`4)">
            <summary>
            Verifies the o authentication.
            </summary>
            <param name="authorization">The authorization.</param>
            <returns>TSSOAuthorization.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.ISSOAuthorizationService`7.QuerySSOAuthorization(`5)">
            <summary>
            Queries the sso authorization.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>TSSOAuthorization.</returns>
        </member>
        <member name="T:Beyova.CommonServiceInterface.IUserPreferenceService">
            <summary>
            Interface IUserPreferenceService
            </summary>
        </member>
        <member name="T:Beyova.CommonServiceInterface.IUserPreferenceService`2">
            <summary>
            Interface IUserPreferenceService
            </summary>
            <typeparam name="TUserPreference">The type of the t user preference.</typeparam>
            <typeparam name="TUserPreferenceCriteria">The type of the t user preference criteria.</typeparam>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IUserPreferenceService`2.CreateOrUpdateDefaultPreference(`0)">
            <summary>
            Creates or updates default preference.
            </summary>
            <param name="preference">The preference.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IUserPreferenceService`2.QueryDefaultPreference(`1)">
            <summary>
            Queries the default preference.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;TUserPreference&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IUserPreferenceService`2.CreateOrUpdateUserPreference(`0)">
            <summary>
            Creates the or update user preference.
            </summary>
            <param name="preference">The preference.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IUserPreferenceService`2.QueryUserPreference(`1)">
            <summary>
            Queries the default preference.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;TUserPreference&gt;.</returns>
        </member>
        <member name="T:Beyova.CommonServiceInterface.ITransactionService">
            <summary>
            Interface ITransactionService
            </summary>
            <seealso cref="T:Beyova.CommonServiceInterface.ITransactionService`3" />
        </member>
        <member name="T:Beyova.CommonServiceInterface.ITransactionService`3">
            <summary>
            Interface ITransactionService
            </summary>
            <typeparam name="TTransactionRequest">The type of the t transaction request.</typeparam>
            <typeparam name="TTransactionAudit">The type of the t transaction audit.</typeparam>
            <typeparam name="TTransactionCriteria">The type of the t transaction criteria.</typeparam>
        </member>
        <member name="M:Beyova.CommonServiceInterface.ITransactionService`3.CreateTransaction(`0)">
            <summary>
            Creates the transaction.
            </summary>
            <param name="transactionRequest">The transaction request.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.ITransactionService`3.CommitTransaction(System.Nullable{System.Guid})">
            <summary>
            Commits the transaction.
            </summary>
            <param name="transactionKey">The transaction key.</param>
            <returns>TTransactionAudit.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.ITransactionService`3.QueryTransactionAudit(`2)">
            <summary>
            Queries the transaction audit.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;TTransactionAudit&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.ITransactionService`3.CancelTransaction(System.Nullable{System.Guid})">
            <summary>
            Cancels the transaction.
            </summary>
            <param name="transactionKey">The transaction key.</param>
            <returns>TTransactionAudit.</returns>
        </member>
        <member name="T:Beyova.CommonServiceInterface.IBinaryStorageService`2">
            <summary>
            Interface IBinaryStorageService
            </summary>
            <typeparam name="TBinaryStorageObject">The generic type of the binary storage object.</typeparam>
            <typeparam name="TBinaryStorageCriteria">The generic type of the binary storage criteria.</typeparam>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IBinaryStorageService`2.RequestBinaryUploadCredential(`0)">
            <summary>
            Requests the binary upload credential.
            </summary>
            <param name="meteData">The mete data.</param>
            <returns>BinaryStorageActionCredential.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IBinaryStorageService`2.RequestBinaryDownloadCredential(Beyova.BinaryStorageIdentifier)">
            <summary>
            Requests the binary download credential.
            </summary>
            <param name="identifier">The identifier.</param>
            <returns>BinaryStorageActionCredential.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IBinaryStorageService`2.QueryUserBinaryStorage(`1)">
            <summary>
            Queries the binary storage. (User based)
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;TBinaryStorageObject&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IBinaryStorageService`2.QueryBinaryStorage(`1)">
            <summary>
            Queries the binary storage.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;TBinaryStorageObject&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IBinaryStorageService`2.GetBinaryStorageByKey(System.String)">
            <summary>
            Gets the binary storage by key.
            </summary>
            <param name="key">The key.</param>
            <returns>TBinaryStorageObject.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IBinaryStorageService`2.GetBinaryStorageByKeys(System.Collections.Generic.List{System.String})">
            <summary>
            Gets the binary storage by keys.
            </summary>
            <param name="keys">The keys.</param>
            <returns>List&lt;TBinaryStorageObject&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IBinaryStorageService`2.CommitBinaryStorage(Beyova.BinaryStorageCommitRequest)">
            <summary>
            Commits the binary storage.
            </summary>
            <param name="request">The request.</param>
            <returns>BinaryStorageIdentifier.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IBinaryStorageService`2.DeleteBinaryStorage(System.String)">
            <summary>
            Deletes the binary storage.
            </summary>
            <param name="identifier">The identifier.</param>
        </member>
        <member name="T:Beyova.CommonServiceInterface.IAuthenticationProfileService`4">
            <summary>
            Interface IAuthenticationProfileService
            </summary>
            <typeparam name="TUserInfo">The type of the t user information.</typeparam>
            <typeparam name="TUserCriteria">The type of the t user criteria.</typeparam>
            <typeparam name="TAuthenticationResult">The type of the t authentication result.</typeparam>
            <typeparam name="TFunctionalRole">The type of the t functional role.</typeparam>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IAuthenticationProfileService`4.Authenticate(Beyova.AuthenticationRequest)">
            <summary>
            Authenticates the specified request.
            </summary>
            <param name="request">The request.</param>
            <returns>TAuthenticationResult.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IAuthenticationProfileService`4.Logout(System.String)">
            <summary>
            Log Out.
            </summary>
            <param name="token">The token.</param>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IAuthenticationProfileService`4.GetUserInfoByToken(System.String)">
            <summary>
            Gets the user information by token.
            </summary>
            <param name="token">The token.</param>
            <returns>TUserInfo.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IAuthenticationProfileService`4.RenewToken(System.String)">
            <summary>
            Renews the token.
            </summary>
            <param name="token">The token.</param>
            <returns>LoginResult.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IAuthenticationProfileService`4.GetSessionInfoByToken(System.String)">
            <summary>
            Gets the current session information.
            </summary>
            <param name="token">The token.</param>
            <returns>SessionInfo.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IAuthenticationProfileService`4.QuerySessionInfo(Beyova.SessionCriteria)">
            <summary>
            Queries the session information.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>SessionInfo.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IAuthenticationProfileService`4.QueryUserInfo(`1)">
            <summary>
            Queries the user information.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;UserInfo&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IAuthenticationProfileService`4.GetUserInfoByUserKey(System.Nullable{System.Guid})">
            <summary>
            Gets the current user profile.
            </summary>
            <param name="userKey">The user key.</param>
            <returns>UserLogin.</returns>
        </member>
        <member name="T:Beyova.CommonServiceInterface.IProvisioningService`1">
            <summary>
            Interface IProvisioningService
            </summary>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IProvisioningService`1.CreateOrUpdateConfiguration(Beyova.RemoteConfigurationObject)">
            <summary>
            Creates the or update configuration.
            </summary>
            <param name="configuration">The configuration.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IProvisioningService`1.QueryConfiguration(Beyova.RemoteConfigurationCriteria)">
            <summary>
            Queries the configuration.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;RemoteConfigurationObject&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IProvisioningService`1.QueryConfigurationSnapshot(Beyova.RemoteConfigurationCriteria)">
            <summary>
            Queries the configuration snapshot.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;RemoteConfigurationObject&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IProvisioningService`1.QueryAppProvisioning(Beyova.AppProvisioningCriteria)">
            <summary>
            Queries the application provisioning.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IProvisioningService`1.QueryAppProvisioningSnapshot(Beyova.AppProvisioningCriteria)">
            <summary>
            Queries the application provisioning snapshot.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IProvisioningService`1.CreateOrUpdateAppProvisioning(`0)">
            <summary>
            Creates the or update application provisioning.
            </summary>
            <param name="appProvisioning">The application provisioning.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IProvisioningService`1.DeleteAppProvisioning(System.Nullable{System.Guid})">
            <summary>
            Deletes the application provisioning.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Beyova.CommonServiceInterface.IProvisioningService`1.GetAppProvisioning(System.Nullable{System.Guid},System.String)">
            <summary>
            Gets the application provisioning.
            </summary>
            <param name="platformKey">The platform key.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.ConsoleLogger">
             <summary>
            
             </summary>
             <seealso cref="T:Beyova.IApiTracking" />
        </member>
        <member name="F:Beyova.ConsoleLogger.format">
            <summary>
            The format
            </summary>
        </member>
        <member name="M:Beyova.ConsoleLogger.LogApiEvent(Beyova.ApiTracking.ApiEventLog)">
            <summary>
            Logs the API event asynchronous.
            </summary>
            <param name="eventLog">The event log.</param>
        </member>
        <member name="M:Beyova.ConsoleLogger.LogApiTraceLog(Beyova.ApiTracking.ApiTraceLog)">
            <summary>
            Logs the API trace log asynchronous.
            </summary>
            <param name="traceLog">The trace log.</param>
        </member>
        <member name="M:Beyova.ConsoleLogger.LogException(Beyova.ExceptionSystem.ExceptionInfo)">
            <summary>
            Logs the exception asynchronous.
            </summary>
            <param name="exceptionInfo">The exception information.</param>
        </member>
        <member name="M:Beyova.ConsoleLogger.LogMessage(System.String)">
            <summary>
            Logs the message asynchronous.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Beyova.MathFunctions">
            <summary>
             Class MathFunctions
            </summary>
        </member>
        <member name="M:Beyova.MathFunctions.Sigmoid(System.Double)">
            <summary>
            Sigmoids the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.ISqlDataTransportationController`1">
            <summary>
            Interface ISqlDataImportController
            </summary>
        </member>
        <member name="M:Beyova.ISqlDataTransportationController`1.Import(System.Collections.Generic.IEnumerable{Beyova.SqlDataRow{`0}})">
            <summary>
            Imports the specified entities.
            </summary>
            <param name="entities">The entities.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ISqlDataTransportationController`1.Export(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Exports the specified from row identifier.
            </summary>
            <param name="fromRowId">From row identifier.</param>
            <param name="fromStamp">From stamp.</param>
            <param name="count">The count.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.ISearchTerm">
            <summary>
            Interface ISearchTerm
            </summary>
        </member>
        <member name="P:Beyova.ISearchTerm.SearchTerm">
            <summary>
            Gets or sets the search term. Full search term with alphabets only (English or Chinese Pinyin, etc.)
            </summary>
            <value>
            The search term.
            </value>
        </member>
        <member name="P:Beyova.ISearchTerm.ShortSearchTerm">
            <summary>
            Gets or sets the short search term. Short search term with alphabets only (First alphabets of English or Chinese Pinyin, etc.)
            </summary>
            <value>
            The short search term.
            </value>
        </member>
        <member name="T:Beyova.SqlDataRow`1">
            <summary>
            Class SqlDataRow.
            </summary>
        </member>
        <member name="P:Beyova.SqlDataRow`1.RowId">
            <summary>
            Gets or sets the row identifier.
            </summary>
            <value>
            The row identifier.
            </value>
        </member>
        <member name="P:Beyova.SqlDataRow`1.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="T:Beyova.SaasPlatform.IProductManagementService`2">
            <summary>
            Interface IProductManagementService
            </summary>
            <typeparam name="TProductInfo">The type of the product information.</typeparam>
            <typeparam name="TProductCriteria">The type of the product criteria.</typeparam>
        </member>
        <member name="M:Beyova.SaasPlatform.IProductManagementService`2.CreateOrUpdateProduct(`0)">
            <summary>
            Creates the or update product.
            </summary>
            <param name="product">The product.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.SaasPlatform.IProductManagementService`2.QueryProductInfo(`1)">
            <summary>
            Queries the product information.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;TProductInfo&gt;.</returns>
        </member>
        <member name="T:Beyova.SaasPlatform.ISimpleUserInfo">
            <summary>
            Interface ISimpleUserInfo
            </summary>
        </member>
        <member name="P:Beyova.SaasPlatform.ISimpleUserInfo.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>The email.</value>
        </member>
        <member name="P:Beyova.SaasPlatform.ISimpleUserInfo.CountryIso2Code">
            <summary>
            Gets or sets the country iso2 code.
            </summary>
            <value>
            The country iso2 code.
            </value>
        </member>
        <member name="P:Beyova.SaasPlatform.ISimpleUserInfo.Cellphone">
            <summary>
            Gets or sets the cellphone.
            </summary>
            <value>
            The cellphone.
            </value>
        </member>
        <member name="P:Beyova.SaasPlatform.ISimpleUserInfo.AvatarKey">
            <summary>
            Gets or sets the avatar key.
            </summary>
            <value>The avatar key.</value>
        </member>
        <member name="P:Beyova.SaasPlatform.ISimpleUserInfo.AvatarUrl">
            <summary>
            Gets or sets the avatar URL.
            </summary>
            <value>The avatar URL.</value>
        </member>
        <member name="P:Beyova.SaasPlatform.ISimpleUserInfo.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>The language.</value>
        </member>
        <member name="P:Beyova.SaasPlatform.ISimpleUserInfo.TimeZone">
            <summary>
            Gets or sets the time zone. Unit: minute
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="T:Beyova.SaasPlatform.ISimpleUserCriteria">
            <summary>
            Interface ISimpleUserCriteria
            </summary>
        </member>
        <member name="P:Beyova.SaasPlatform.ISimpleUserCriteria.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:Beyova.SaasPlatform.ISimpleUserCriteria.CountryIso2Code">
            <summary>
            Gets or sets the country iso2 code.
            </summary>
            <value>
            The country iso2 code.
            </value>
        </member>
        <member name="P:Beyova.SaasPlatform.ISimpleUserCriteria.Cellphone">
            <summary>
            Gets or sets the cellphone.
            </summary>
            <value>
            The cellphone.
            </value>
        </member>
        <member name="P:Beyova.SaasPlatform.ISimpleUserCriteria.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Beyova.SaasPlatform.IUserCriteria`1">
            <summary>
            Interface IUserCriteria
            </summary>
        </member>
        <member name="P:Beyova.SaasPlatform.IUserCriteria`1.FunctionalRole">
            <summary>
            Gets or sets the functional role.
            </summary>
            <value>The functional role.</value>
        </member>
        <member name="T:Beyova.SaasPlatform.IUserInfo`1">
            <summary>
            Interface IUserInfo
            </summary>
        </member>
        <member name="P:Beyova.SaasPlatform.IUserInfo`1.FunctionalRole">
            <summary>
            Gets or sets the functional role.
            </summary>
            <value>The functional role.</value>
        </member>
        <member name="P:Beyova.SaasPlatform.IUserInfo`1.Gender">
            <summary>
            Gets or sets the gender.
            </summary>
            <value>The gender.</value>
        </member>
        <member name="T:Beyova.SaasPlatform.BusinessPartition">
            <summary>
            Class BusinessPartition
            </summary>
            <seealso cref="T:Beyova.IIdentifier" />
            <seealso cref="T:Beyova.IOwnerIdentifiable" />
        </member>
        <member name="P:Beyova.SaasPlatform.BusinessPartition.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Beyova.SaasPlatform.BusinessPartition.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Beyova.SaasPlatform.BusinessPartition.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>
            The owner key.
            </value>
        </member>
        <member name="T:Beyova.SaasPlatform.BusinessPartitionCriteria">
            <summary>
            Class BusinessPartitionCriteria.
            </summary>
        </member>
        <member name="T:Beyova.SaasPlatform.ProductBase">
            <summary>
            Class ProductBase.
            </summary>
        </member>
        <member name="P:Beyova.SaasPlatform.ProductBase.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.SaasPlatform.ProductBase.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.SaasPlatform.ProductBase.PublicKey">
            <summary>
            Gets or sets the public key.
            </summary>
            <value>The public key.</value>
        </member>
        <member name="P:Beyova.SaasPlatform.ProductBase.PrivateKey">
            <summary>
            Gets or sets the private key.
            </summary>
            <value>The private key.</value>
        </member>
        <member name="P:Beyova.SaasPlatform.ProductBase.ExpiredStamp">
            <summary>
            Gets or sets the expired stamp.
            </summary>
            <value>The expired stamp.</value>
        </member>
        <member name="T:Beyova.SaasPlatform.ProductCriteria">
            <summary>
            Class ProductCriteria.
            </summary>
        </member>
        <member name="P:Beyova.SaasPlatform.ProductCriteria.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Beyova.SaasPlatform.ProductCriteria.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.SaasPlatform.ProductCriteria.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.SaasPlatform.ProductCriteria.PublicKey">
            <summary>
            Gets or sets the public key.
            </summary>
            <value>The public key.</value>
        </member>
        <member name="T:Beyova.ExceptionSystem.ServiceUnavailableException">
            <summary>
            Class ServiceUnavailableException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.ServiceUnavailableException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.ServiceUnavailableException"/> class.
            </summary>
            <param name="serviceId">The service identifier.</param>
            <param name="minorReason">The minor reason.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.ServiceUnavailableException.#ctor(System.Guid,System.DateTime,System.String,Beyova.ExceptionSystem.ExceptionScene,Beyova.ExceptionSystem.ExceptionCode,System.Exception,Beyova.BaseCredential,Newtonsoft.Json.Linq.JToken,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.ServiceUnavailableException" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="createdStamp">The created stamp.</param>
            <param name="message">The message.</param>
            <param name="scene">The scene.</param>
            <param name="code">The code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="operatorCredential">The operator credential.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.ExceptionScene">
            <summary>
            Class ExceptionScene.
            </summary>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionScene.MethodName">
            <summary>
            Gets or sets the name of the method.
            </summary>
            <value>The name of the method.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionScene.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionScene.LineNumber">
            <summary>
            Gets or sets the line number.
            </summary>
            <value>The line number.</value>
        </member>
        <member name="T:Beyova.ExceptionSystem.InvalidExpressiontException">
            <summary>
            Class InvalidExpressiontException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.InvalidExpressiontException.#ctor(System.String,System.Exception,System.String,System.Nullable{System.Int32},Beyova.ExceptionSystem.FriendlyHint,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.InvalidExpressiontException"/> class.
            </summary>
            <param name="expectObject">The expect object.</param>
            <param name="innerException">The inner exception.</param>
            <param name="data">The data.</param>
            <param name="position">The position.</param>
            <param name="hint">The hint.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.UnsupportedException">
            <summary>
            Class UnsupportedException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.UnsupportedException.#ctor(System.String,System.Exception,System.String,System.Object,Beyova.ExceptionSystem.FriendlyHint,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.UnsupportedException" /> class.
            </summary>
            <param name="objectIdentifier">The object identifier.</param>
            <param name="innerException">The inner exception.</param>
            <param name="reason">The reason.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.UnsupportedException.#ctor(System.Guid,System.DateTime,System.String,Beyova.ExceptionSystem.ExceptionScene,Beyova.ExceptionSystem.ExceptionCode,System.Exception,Beyova.BaseCredential,Newtonsoft.Json.Linq.JToken,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.BaseException" /> class. This is used internally for restoring exception instance from ExceptionInfo.
            </summary>
            <param name="key">The key.</param>
            <param name="createdStamp">The created stamp.</param>
            <param name="message">The message.</param>
            <param name="scene">The scene.</param>
            <param name="code">The code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="operatorCredential">The operator credential.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.InvalidLicenseException">
            <summary>
            Class InvalidLicenseException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.InvalidLicenseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.InvalidLicenseException" /> class.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.InvalidLicenseException.#ctor(System.Guid,System.DateTime,System.String,Beyova.ExceptionSystem.ExceptionScene,Beyova.ExceptionSystem.ExceptionCode,System.Exception,Beyova.BaseCredential,Newtonsoft.Json.Linq.JToken,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.InvalidLicenseException" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="createdStamp">The created stamp.</param>
            <param name="message">The message.</param>
            <param name="scene">The scene.</param>
            <param name="code">The code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="operatorCredential">The operator credential.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.DynamicCompileException">
            <summary>
            Class DynamicCompileException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.DynamicCompileException.#ctor(System.CodeDom.Compiler.CompilerErrorCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.DynamicCompileException"/> class.
            </summary>
            <param name="errorCollection">The error collection.</param>
            <param name="sourceCode">The source code.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.DynamicCompileException.#ctor(System.CodeDom.Compiler.CompilerErrorCollection,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.DynamicCompileException" /> class.
            </summary>
            <param name="errorCollection">The error collection.</param>
            <param name="sourceCodes">The source code.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.DynamicCompileException.ErrorCollectionToStringArray(System.CodeDom.Compiler.CompilerErrorCollection)">
            <summary>
            Errors the collection to string array.
            </summary>
            <param name="errorCollection">The error collection.</param>
            <returns>List&lt;System.String&gt;.</returns>
        </member>
        <member name="T:Beyova.ExceptionSystem.WorkflowOperationException">
            <summary>
            Class WorkflowOperationException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.WorkflowOperationException.#ctor(System.String,System.String,System.Exception,System.Object,Beyova.ExceptionSystem.FriendlyHint,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.WorkflowOperationException" /> class.
            </summary>
            <param name="workflowName">Name of the workflow.</param>
            <param name="state">The state.</param>
            <param name="innerException">The inner exception.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.WorkflowOperationException.#ctor(System.Guid,System.DateTime,System.String,Beyova.ExceptionSystem.ExceptionScene,Beyova.ExceptionSystem.ExceptionCode,System.Exception,Beyova.BaseCredential,Newtonsoft.Json.Linq.JToken,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.OperationForbiddenException" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="createdStamp">The created stamp.</param>
            <param name="message">The message.</param>
            <param name="scene">The scene.</param>
            <param name="code">The code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="operatorCredential">The operator credential.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.SqlStoredProcedureException">
            <summary>
            Class SqlStoredProcedureException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.SqlStoredProcedureException.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.SqlStoredProcedureException"/> class.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="message">The message.</param>
            <param name="errorCode">The error code.</param>
            <param name="reason">The reason.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.SqlStoredProcedureException.#ctor(System.String,Beyova.ExceptionSystem.ExceptionCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.SqlStoredProcedureException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="exceptionCode">The exception code.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.HttpOperationException">
            <summary>
            Class HttpOperationException.
            </summary>
        </member>
        <member name="T:Beyova.ExceptionSystem.HttpOperationException.HttpExceptionReference">
            <summary>
            Class HttpExceptionReference.
            </summary>
        </member>
        <member name="P:Beyova.ExceptionSystem.HttpOperationException.HttpExceptionReference.DestinationUrl">
            <summary>
            Gets or sets the destination URL.
            </summary>
            <value>The destination URL.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.HttpOperationException.HttpExceptionReference.HttpMethod">
            <summary>
            Gets or sets the HTTP method.
            </summary>
            <value>The HTTP method.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.HttpOperationException.HttpExceptionReference.BodyLength">
            <summary>
            Gets or sets the length of the body.
            </summary>
            <value>The length of the body.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.HttpOperationException.HttpExceptionReference.WebExceptionStatus">
            <summary>
            Gets or sets the web exception status.
            </summary>
            <value>The web exception status.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.HttpOperationException.HttpExceptionReference.ResponseText">
            <summary>
            Gets or sets the response text.
            </summary>
            <value>The response text.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.HttpOperationException.HttpExceptionReference.HttpStatusCode">
            <summary>
            Gets or sets the HTTP status code.
            </summary>
            <value>The HTTP status code.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.HttpOperationException.ExceptionReference">
            <summary>
            Gets the exception reference.
            </summary>
            <value>The exception reference.</value>
        </member>
        <member name="M:Beyova.ExceptionSystem.HttpOperationException.#ctor(System.String,System.String,System.String,System.Nullable{System.Int64},System.String,System.Net.HttpStatusCode,System.Net.WebExceptionStatus,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.HttpOperationException" /> class. For broken requests.
            </summary>
            <param name="destinationUrl">The destination URL.</param>
            <param name="httpMethod">The HTTP method.</param>
            <param name="message">The message.</param>
            <param name="bodyLength">Length of the body.</param>
            <param name="responseText">The response text.</param>
            <param name="httpStatusCode">The HTTP status code.</param>
            <param name="webExceptionStatus">The web exception status.</param>
            <param name="serverIdentifier">The server identifier.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.HttpOperationException.#ctor(System.String,System.String,System.Nullable{System.Int64},System.Net.HttpStatusCode,Beyova.ExceptionSystem.BaseException,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.HttpOperationException" /> class.
            </summary>
            <param name="destinationUrl">The destination URL.</param>
            <param name="httpMethod">The HTTP method.</param>
            <param name="bodyLength">Length of the body.</param>
            <param name="httpStatusCode">The HTTP status code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="serverIdentifier">The server identifier.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.HttpOperationException.#ctor(System.Guid,System.DateTime,System.String,Beyova.ExceptionSystem.ExceptionScene,Beyova.ExceptionSystem.ExceptionCode,System.Exception,Beyova.BaseCredential,Newtonsoft.Json.Linq.JToken,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.HttpOperationException" /> class. For restore from <c>ExceptionInfo</c>.
            </summary>
            <param name="key">The key.</param>
            <param name="createdStamp">The created stamp.</param>
            <param name="message">The message.</param>
            <param name="scene">The scene.</param>
            <param name="code">The code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="operatorCredential">The operator credential.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.FriendlyHint">
            <summary>
            Class FriendlyHint.
            </summary>
        </member>
        <member name="P:Beyova.ExceptionSystem.FriendlyHint.CauseObjects">
            <summary>
            Gets or sets the cause objects.
            </summary>
            <value>The cause objects.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.FriendlyHint.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.FriendlyHint.HintCode">
            <summary>
            Gets or sets the hint code.
            </summary>
            <value>The hint code.</value>
        </member>
        <member name="T:Beyova.ExceptionSystem.UnimplementedException">
            <summary>
            Class UnimplementedException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.UnimplementedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.UnimplementedException" /> class.
            </summary>
            <param name="objectIdentity">The object identity.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.UnimplementedException.#ctor(System.Guid,System.DateTime,System.String,Beyova.ExceptionSystem.ExceptionScene,Beyova.ExceptionSystem.ExceptionCode,System.Exception,Beyova.BaseCredential,Newtonsoft.Json.Linq.JToken,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.UnimplementedException"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="createdStamp">The created stamp.</param>
            <param name="message">The message.</param>
            <param name="scene">The scene.</param>
            <param name="code">The code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="operatorCredential">The operator credential.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.ExceptionBase">
            <summary>
            Class ExceptionBase.
            </summary>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionBase.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionBase.TargetSite">
            <summary>
            Gets or sets the target site.
            </summary>
            <value>The target site.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionBase.StackTrace">
            <summary>
            Gets or sets the stack trace.
            </summary>
            <value>The stack trace.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionBase.ExceptionType">
            <summary>
            Gets or sets the type of the exception.
            </summary>
            <value>The type of the exception.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionBase.Level">
            <summary>
            Gets or sets the level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionBase.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionBase.OperatorCredential">
            <summary>
            Gets or sets the operator credential.
            </summary>
            <value>The operator credential.</value>
        </member>
        <member name="M:Beyova.ExceptionSystem.ExceptionBase.#ctor(Beyova.ExceptionSystem.ExceptionBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.ExceptionBase" /> class.
            </summary>
            <param name="exceptionBase">The exception base.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.BaseException">
            <summary>
            Class BaseException.
            </summary>
        </member>
        <member name="P:Beyova.ExceptionSystem.BaseException.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
            <value>The hint.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.BaseException.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.BaseException.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.BaseException.ReferenceData">
            <summary>
            Gets or sets the reference data.
            </summary>
            <value>The reference data.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.BaseException.CreatedStamp">
            <summary>
            Gets or sets the created stamp.
            </summary>
            <value>The created stamp.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.BaseException.OperatorCredential">
            <summary>
            Gets or sets the operator credential.
            </summary>
            <value>The operator credential.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.BaseException.Scene">
            <summary>
            Gets or sets the scene.
            </summary>
            <value>The scene.</value>
        </member>
        <member name="M:Beyova.ExceptionSystem.BaseException.#ctor(System.String,Beyova.ExceptionSystem.ExceptionCode,System.Exception,System.Object,Beyova.ExceptionSystem.FriendlyHint,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.BaseException" /> class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="code">The exception code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.BaseException.#ctor(System.Guid,System.DateTime,System.String,Beyova.ExceptionSystem.ExceptionScene,Beyova.ExceptionSystem.ExceptionCode,System.Exception,Beyova.BaseCredential,Newtonsoft.Json.Linq.JToken,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.BaseException" /> class. This is used internally for restoring exception instance from ExceptionInfo.
            </summary>
            <param name="key">The key.</param>
            <param name="createdStamp">The created stamp.</param>
            <param name="message">The message.</param>
            <param name="scene">The scene.</param>
            <param name="code">The code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="operatorCredential">The operator credential.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.CreditNotAffordException">
            <summary>
            Class CreditNotAffordException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.CreditNotAffordException.#ctor(System.String,System.String,System.Exception,System.String,System.Object,Beyova.ExceptionSystem.FriendlyHint,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.CreditNotAffordException" /> class.
            </summary>
            <param name="resourceName">Name of the resource.</param>
            <param name="resourceIdentifier">The resource identifier.</param>
            <param name="innerException">The inner exception.</param>
            <param name="minor">The minor.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.CreditNotAffordException.#ctor(System.Guid,System.DateTime,System.String,Beyova.ExceptionSystem.ExceptionScene,Beyova.ExceptionSystem.ExceptionCode,System.Exception,Beyova.BaseCredential,Newtonsoft.Json.Linq.JToken,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.CreditNotAffordException" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="createdStamp">The created stamp.</param>
            <param name="message">The message.</param>
            <param name="scene">The scene.</param>
            <param name="code">The code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="operatorCredential">The operator credential.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.DataConflictException">
            <summary>
            Exception class for data conflicts
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.DataConflictException.#ctor(System.String,System.String,System.Exception,System.Object,Beyova.ExceptionSystem.FriendlyHint,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.DataConflictException" /> class.
            </summary>
            <param name="entityName">Name of the entity.</param>
            <param name="objectIdentity">The object identity.</param>
            <param name="innerException">The inner exception.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.DataConflictException.#ctor(System.Guid,System.DateTime,System.String,Beyova.ExceptionSystem.ExceptionScene,Beyova.ExceptionSystem.ExceptionCode,System.Exception,Beyova.BaseCredential,Newtonsoft.Json.Linq.JToken,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.DataConflictException" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="createdStamp">The created stamp.</param>
            <param name="message">The message.</param>
            <param name="scene">The scene.</param>
            <param name="code">The code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="operatorCredential">The operator credential.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.ExceptionCode">
            <summary>
            Struct ExceptionCode
            </summary>
        </member>
        <member name="T:Beyova.ExceptionSystem.ExceptionCode.MajorCode">
            <summary>
            Enum MajorCode
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionCode.MajorCode.Undefined">
            <summary>
            Value indicating it is undefined
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionCode.MajorCode.NullOrInvalidValue">
            <summary>
            Value indicating it is null or invalid value
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionCode.MajorCode.UnauthorizedOperation">
            <summary>
            Value indicating it is unauthorized operation
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionCode.MajorCode.CreditNotAfford">
            <summary>
            Value indicating it is credit not afford
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionCode.MajorCode.OperationForbidden">
            <summary>
            Value indicating it is operation forbidden
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionCode.MajorCode.ResourceNotFound">
            <summary>
            Value indicating it is resource not found
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionCode.MajorCode.DataConflict">
            <summary>
            Value indicating it is data conflict
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionCode.MajorCode.OperationFailure">
            <summary>
            Value indicating it is operation failure
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionCode.MajorCode.NotImplemented">
            <summary>
            Value indicating it is not implemented
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionCode.MajorCode.ServiceUnavailable">
            <summary>
            Value indicating it is service unavailable
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionCode.MajorCode.HttpBlockError">
            <summary>
            Value indicating it is HTTP block error
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionCode.MajorCode.Unsupported">
            <summary>
            Value indicating it is Unsupported
            </summary>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionCode.Major">
            <summary>
            Gets or sets the major.
            </summary>
            <value>The major.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionCode.Minor">
            <summary>
            Gets or sets the minor.
            <remarks>
            This value is to indicate the specific case for the major code.
            For instance, when <c>Major</c> is set as <c>UnauthorizedOperation</c>, this value can be set as <c>Token</c>, <c>User</c>, <c>Password</c> or <c>Expired</c> for describing case in simple.
            It is strongly recommended to set one word/term only.
            </remarks>
            </summary>
            <value>The minor.</value>
        </member>
        <member name="M:Beyova.ExceptionSystem.ExceptionCode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.ExceptionCode"/> class.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.ExceptionCode.#ctor(Beyova.ExceptionSystem.ExceptionCode.MajorCode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.ExceptionCode"/> struct.
            </summary>
            <param name="major">The major.</param>
            <param name="minor">The minor.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.ExceptionCode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.ExceptionCode"/> struct.
            </summary>
            <param name="stringValue">The string value.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.ExceptionCode.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.ExceptionSystem.ExceptionCode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.ExceptionSystem.ExceptionCode.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Beyova.ExceptionSystem.ExceptionCode.ToEventLogEntryType">
            <summary>
            To the type of the event log entry.
            </summary>
            <returns>EventLogEntryType.</returns>
        </member>
        <member name="M:Beyova.ExceptionSystem.ExceptionCode.ToHttpStatusCode">
            <summary>
            To the HTTP status code.
            </summary>
            <returns>HttpStatusCode.</returns>
        </member>
        <member name="M:Beyova.ExceptionSystem.ExceptionCode.op_Explicit(System.Int32)~Beyova.ExceptionSystem.ExceptionCode">
            <summary>
            Performs an explicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Beyova.ExceptionSystem.ExceptionCode"/>.
            </summary>
            <param name="exceptionMajorCode">The exception major code.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Beyova.ExceptionSystem.ExceptionCode.op_Explicit(Beyova.ExceptionSystem.ExceptionCode)~System.Int32">
            <summary>
            Performs an explicit conversion from <see cref="T:Beyova.ExceptionSystem.ExceptionCode"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="exceptionCode">The exception code.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:Beyova.ExceptionSystem.ExceptionInfo">
            <summary>
            Class ExceptionInfo.
            </summary>
        </member>
        <member name="T:Beyova.ExceptionSystem.ExceptionInfo.ExceptionCriticality">
            <summary>
            Enum ExceptionCriticality
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionInfo.ExceptionCriticality.Fetal">
            <summary>
            The fetal.
            Commonly, it is used by forgotten to set, or errors might make system crash.
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionInfo.ExceptionCriticality.Error">
            <summary>
            The error
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionInfo.ExceptionCriticality.Warning">
            <summary>
            The warning
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionInfo.ExceptionCriticality.Information">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:Beyova.ExceptionSystem.ExceptionInfo.ExceptionCriticality.Debug">
            <summary>
            The debug
            </summary>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionInfo.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionInfo.InnerException">
            <summary>
            Gets or sets the inner exception.
            </summary>
            <value>The inner exception.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionInfo.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionInfo.CreatedStamp">
            <summary>
            Gets or sets the created stamp.
            </summary>
            <value>The created stamp.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionInfo.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionInfo.Scene">
            <summary>
            Gets or sets the scene.
            </summary>
            <value>The scene.</value>
        </member>
        <member name="P:Beyova.ExceptionSystem.ExceptionInfo.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
            <value>The hint.</value>
        </member>
        <member name="M:Beyova.ExceptionSystem.ExceptionInfo.#ctor(Beyova.ExceptionSystem.ExceptionBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.ExceptionInfo"/> class.
            </summary>
        </member>
        <member name="T:Beyova.ExceptionSystem.InitializationFailureException">
            <summary>
            Class InitializationFailureException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.InitializationFailureException.#ctor(System.String,System.Exception,System.String,System.Object,Beyova.ExceptionSystem.FriendlyHint,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.InitializationFailureException" /> class.
            </summary>
            <param name="target">The object identity.</param>
            <param name="innerException">The inner exception.</param>
            <param name="minor">The minor.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.InitializationFailureException.#ctor(System.Guid,System.DateTime,System.String,Beyova.ExceptionSystem.ExceptionScene,Beyova.ExceptionSystem.ExceptionCode,System.Exception,Beyova.BaseCredential,Newtonsoft.Json.Linq.JToken,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.InitializationFailureException" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="createdStamp">The created stamp.</param>
            <param name="message">The message.</param>
            <param name="scene">The scene.</param>
            <param name="code">The code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="operatorCredential">The operator credential.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.InvalidObjectException">
            <summary>
            Class InvalidObjectException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.InvalidObjectException.#ctor(System.String,System.Exception,System.Object,System.String,Beyova.ExceptionSystem.FriendlyHint,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.InvalidObjectException" /> class.
            </summary>
            <param name="objectIdentity">The object identity.</param>
            <param name="innerException">The inner exception.</param>
            <param name="data">The data.</param>
            <param name="reason">The reason.</param>
            <param name="hint">The hint.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.InvalidObjectException.#ctor(System.Exception,System.Object,System.String,Beyova.ExceptionSystem.FriendlyHint,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.InvalidObjectException" /> class.
            </summary>
            <param name="innerException">The inner exception.</param>
            <param name="data">The data.</param>
            <param name="reason">The reason.</param>
            <param name="hint">The hint.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.InvalidObjectException.#ctor(System.Guid,System.DateTime,System.String,Beyova.ExceptionSystem.ExceptionScene,Beyova.ExceptionSystem.ExceptionCode,System.Exception,Beyova.BaseCredential,Newtonsoft.Json.Linq.JToken,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.InvalidObjectException" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="createdStamp">The created stamp.</param>
            <param name="message">The message.</param>
            <param name="scene">The scene.</param>
            <param name="code">The code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="operatorCredential">The operator credential.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.NullObjectException">
            <summary>
            Class NullObjectException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.NullObjectException.#ctor(System.String,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.NullObjectException" /> class.
            </summary>
            <param name="objectIdentity">The object identity.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.OperationFailureException">
            <summary>
            Class OperationFailureException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.OperationFailureException.#ctor(System.Exception,System.Object,System.String,Beyova.ExceptionSystem.FriendlyHint,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.OperationFailureException" /> class.
            </summary>
            <param name="innerException">The inner exception.</param>
            <param name="data">The data.</param>
            <param name="minor">The minor.</param>
            <param name="hint">The hint.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.OperationFailureException.#ctor(System.Guid,System.DateTime,System.String,Beyova.ExceptionSystem.ExceptionScene,Beyova.ExceptionSystem.ExceptionCode,System.Exception,Beyova.BaseCredential,Newtonsoft.Json.Linq.JToken,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.OperationFailureException" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="createdStamp">The created stamp.</param>
            <param name="message">The message.</param>
            <param name="scene">The scene.</param>
            <param name="code">The code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="operatorCredential">The operator credential.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.OperationForbiddenException">
            <summary>
            Class OperationForbiddenException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.OperationForbiddenException.#ctor(System.String,System.String,System.Exception,System.Object,Beyova.ExceptionSystem.FriendlyHint,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.OperationForbiddenException" /> class.
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="reason">The reason.</param>
            <param name="innerException">The inner exception.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.OperationForbiddenException.#ctor(System.String,System.Exception,System.Object,Beyova.ExceptionSystem.FriendlyHint,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.OperationForbiddenException"/> class.
            </summary>
            <param name="reason">The reason.</param>
            <param name="innerException">The inner exception.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.OperationForbiddenException.#ctor(System.Guid,System.DateTime,System.String,Beyova.ExceptionSystem.ExceptionScene,Beyova.ExceptionSystem.ExceptionCode,System.Exception,Beyova.BaseCredential,Newtonsoft.Json.Linq.JToken,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.OperationForbiddenException" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="createdStamp">The created stamp.</param>
            <param name="message">The message.</param>
            <param name="scene">The scene.</param>
            <param name="code">The code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="operatorCredential">The operator credential.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.ResourceNotFoundException">
            <summary>
            Class ResourceNotFoundException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.ResourceNotFoundException.#ctor(System.String,System.String,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.ResourceNotFoundException" /> class.
            </summary>
            <param name="resourceName">Name of the resource.</param>
            <param name="resourceIdentifier">The resource identifier.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.ResourceNotFoundException" /> class.
            </summary>
            <param name="resourceName">Name of the resource.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.ResourceNotFoundException.#ctor(System.Guid,System.DateTime,System.String,Beyova.ExceptionSystem.ExceptionScene,Beyova.ExceptionSystem.ExceptionCode,System.Exception,Beyova.BaseCredential,Newtonsoft.Json.Linq.JToken,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.ResourceNotFoundException" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="createdStamp">The created stamp.</param>
            <param name="message">The message.</param>
            <param name="scene">The scene.</param>
            <param name="code">The code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="operatorCredential">The operator credential.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.UnauthorizedOperationException">
            <summary>
            Class for unauthorized operation exception
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.UnauthorizedOperationException.#ctor(System.Exception,System.String,System.Object,Beyova.ExceptionSystem.FriendlyHint,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.UnauthorizedOperationException" /> class.
            </summary>
            <param name="innerException">The inner exception.</param>
            <param name="reason">The minor code.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.UnauthorizedOperationException.#ctor(System.String,System.Object,Beyova.ExceptionSystem.FriendlyHint,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.UnauthorizedOperationException" /> class.
            </summary>
            <param name="reason">The reason.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
            <param name="operationName">Name of the operation.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.UnauthorizedOperationException.#ctor(System.String,System.String,Beyova.Api.ApiPermission,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.UnauthorizedOperationException" /> class.
            </summary>
            <param name="destinationMethod">The destination method.</param>
            <param name="permissionIdentifier">The permission identifier.</param>
            <param name="permission">The permission.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="M:Beyova.ExceptionSystem.UnauthorizedOperationException.#ctor(System.Guid,System.DateTime,System.String,Beyova.ExceptionSystem.ExceptionScene,Beyova.ExceptionSystem.ExceptionCode,System.Exception,Beyova.BaseCredential,Newtonsoft.Json.Linq.JToken,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.UnauthorizedOperationException" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="createdStamp">The created stamp.</param>
            <param name="message">The message.</param>
            <param name="scene">The scene.</param>
            <param name="code">The code.</param>
            <param name="innerException">The inner exception.</param>
            <param name="operatorCredential">The operator credential.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.UnauthorizedTokenException">
            <summary>
            Class UnauthorizedTokenException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.UnauthorizedTokenException.#ctor(System.Object,Beyova.ExceptionSystem.FriendlyHint,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.UnauthorizedTokenException" /> class.
            </summary>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="T:Beyova.ExceptionSystem.UnauthorizedAccountException">
            <summary>
            Class UnauthorizedAccountException.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionSystem.UnauthorizedAccountException.#ctor(System.String,System.Object,Beyova.ExceptionSystem.FriendlyHint,Beyova.ExceptionSystem.ExceptionScene)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExceptionSystem.UnauthorizedOperationException" /> class.
            </summary>
            <param name="reason">The reason.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
            <param name="scene">The scene.</param>
        </member>
        <member name="T:Beyova.CultureExtension">
             <summary>
            
             </summary>
        </member>
        <member name="F:Beyova.CultureExtension.cultureCodeRegex">
            <summary>
            The culture code regex
            </summary>
        </member>
        <member name="M:Beyova.CultureExtension.ToCultureInfo(System.String,System.Globalization.CultureInfo)">
            <summary>
            To the culture info.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="defaultCultureInfo">The default culture information.</param>
            <returns>CultureInfo.</returns>
        </member>
        <member name="M:Beyova.CultureExtension.EnsureCultureCode(System.String,System.String)">
            <summary>
            Ensures the culture code.
            </summary>
            <param name="cultureCode">The culture code.</param>
            <param name="defaultCultureCode">The default culture code.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.FeatureModuleSwitchObject">
            <summary>
            Class FeatureModuleSwitchObject.
            </summary>
        </member>
        <member name="P:Beyova.FeatureModuleSwitchObject.ModuleName">
            <summary>
            Gets or sets the name of the module.
            </summary>
            <value>The name of the module.</value>
        </member>
        <member name="P:Beyova.FeatureModuleSwitchObject.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is enabled.
            </summary>
            <value><c>true</c> if this instance is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.FeatureModuleSwitchObject.KeepStatusUntilStamp">
            <summary>
            Gets or sets the keep status until stamp.
            </summary>
            <value>The keep status until stamp.</value>
        </member>
        <member name="F:Beyova.FeatureModuleSwitchObject._locker">
            <summary>
            The _locker
            </summary>
        </member>
        <member name="M:Beyova.FeatureModuleSwitchObject.EnsureStatus">
            <summary>
            Ensures the status.
            </summary>
        </member>
        <member name="M:Beyova.FeatureModuleSwitchObject.SetStatus(System.Boolean,System.Nullable{System.DateTime})">
            <summary>
            Sets the status.
            </summary>
            <param name="isEnabled">if set to <c>true</c> [is enabled].</param>
            <param name="until">The until.</param>
        </member>
        <member name="F:Beyova.FeatureModuleSwitch.switchObjects">
            <summary>
            The switch objects
            </summary>
        </member>
        <member name="F:Beyova.FeatureModuleSwitch.locker">
            <summary>
            The locker
            </summary>
        </member>
        <member name="M:Beyova.FeatureModuleSwitch.RegisterModule(System.String)">
            <summary>
            Registers the module.
            </summary>
        </member>
        <member name="M:Beyova.FeatureModuleSwitch.ChangeStatus(System.String,System.Boolean,System.Nullable{System.DateTime})">
            <summary>
            Changes the status.
            </summary>
            <param name="moduleName">Name of the module.</param>
            <param name="isEnabled">The is enabled.</param>
            <param name="until">The until.</param>
        </member>
        <member name="M:Beyova.FeatureModuleSwitch.ChangeStatus(Beyova.FeatureModuleSwitchObject)">
            <summary>
            Changes the status.
            </summary>
            <param name="switchObject">The switch object.</param>
        </member>
        <member name="M:Beyova.FeatureModuleSwitch.ChangeStatus(System.String,System.Boolean,System.Int64)">
            <summary>
            Changes the status.
            </summary>
            <param name="moduleName">Name of the module.</param>
            <param name="isEnabled">if set to <c>true</c> [is enabled].</param>
            <param name="durationInSecond">The duration in second.</param>
        </member>
        <member name="M:Beyova.FeatureModuleSwitch.CheckModuleAvailability(System.String)">
            <summary>
            Checks the module availability.
            </summary>
            <param name="moduleName">Name of the module.</param>
            <exception cref="T:Beyova.ExceptionSystem.ServiceUnavailableException">FeatureSwitch</exception>
        </member>
        <member name="M:Beyova.FeatureModuleSwitch.GetModuleWorkStatus">
            <summary>
            Gets the module work status.
            </summary>
            <returns>Dictionary&lt;System.String, System.Boolean&gt;.</returns>
        </member>
        <member name="T:Beyova.ExtensibleDataAccessController`1">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
        </member>
        <member name="M:Beyova.ExtensibleDataAccessController`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ExtensibleDataAccessController`1"/> class.
            </summary>
        </member>
        <member name="M:Beyova.ExtensibleDataAccessController`1.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BaseDataAccessController`1" /> class.
            </summary>
            <param name="primarySqlConnectionString">The primary SQL connection string.</param>
            <param name="readOnlySqlConnectionString">The read only SQL connection string.</param>
        </member>
        <member name="M:Beyova.ExtensibleDataAccessController`1.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SqlDataAccessController`1" /> class.
            </summary>
            <param name="primarySqlConnection">The SQL connection.</param>
            <param name="readOnlySqlConnection">The read only SQL connection.</param>
        </member>
        <member name="T:Beyova.CloudBinaryStorageOperator`2">
            <summary>
            Class CloudBinaryStorageOperator.
            </summary>
            <typeparam name="TCloudContainer">The type of the T cloud container.</typeparam>
            <typeparam name="TCloudBlobObject">The type of the T cloud BLOB object.</typeparam>
        </member>
        <member name="M:Beyova.CloudBinaryStorageOperator`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.CloudBinaryStorageOperator`2"/> class.
            </summary>
        </member>
        <member name="M:Beyova.CloudBinaryStorageOperator`2.CreateBlobUploadCredential(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Creates the BLOB upload credential.
            </summary>
            <param name="containerName">Name of the container.</param>
            <param name="blobIdentifier">The BLOB identifier.</param>
            <param name="expireOffsetInMinute">The expire offset in minute.</param>
            <param name="hash">The hash. This value is used only when blob service provider needs to set hash (MD5) when creating credential of upload action.</param>
            <param name="contentType">Type of the content. This value is used only when blob service provider needs to set content type (MIME) when creating credential of upload action.</param>
            <returns>BinaryStorageActionCredential.</returns>
        </member>
        <member name="M:Beyova.CloudBinaryStorageOperator`2.CreateBlobDownloadCredential(System.String,System.String,System.Int32)">
            <summary>
            Creates the BLOB download credential.
            </summary>
            <param name="containerName">Name of the container.</param>
            <param name="blobIdentifier">The BLOB identifier.</param>
            <param name="expireOffsetInMinute">The expire offset in minute.</param>
            <returns>BinaryStorageActionCredential.</returns>
        </member>
        <member name="M:Beyova.CloudBinaryStorageOperator`2.DeleteBlob(Beyova.BinaryStorageIdentifier)">
            <summary>
            Deletes the BLOB.
            </summary>
            <param name="storageIdentifier">The storage identifier.</param>
        </member>
        <member name="M:Beyova.CloudBinaryStorageOperator`2.DownloadBinaryBytesByCredentialUri(System.String)">
            <summary>
            Downloads the binary bytes by credential.
            </summary>
            <param name="blobUri">The BLOB URI.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.CloudBinaryStorageOperator`2.DownloadBinaryStreamByCredentialUri(System.String)">
            <summary>
            Downloads the binary stream by credential.
            </summary>
            <param name="blobUri">The BLOB URI.</param>
            <returns>Stream.</returns>
        </member>
        <member name="M:Beyova.CloudBinaryStorageOperator`2.UploadBinaryBytesByCredentialUri(System.String,System.Byte[],System.String,System.String)">
            <summary>
            Uploads the binary bytes by credential.
            </summary>
            <param name="blobUri">The BLOB URI.</param>
            <param name="dataBytes">The data bytes.</param>
            <param name="contentType">Type of the content.</param>
            <param name="fileName">Name of the file.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CloudBinaryStorageOperator`2.UploadBinaryStreamByCredentialUri(System.String,System.IO.Stream,System.String,System.String)">
            <summary>
            Uploads the binary stream by credential URI.
            </summary>
            <param name="blobUri">The BLOB URI.</param>
            <param name="stream">The stream.</param>
            <param name="contentType">Type of the content.</param>
            <param name="fileName">Name of the file.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CloudBinaryStorageOperator`2.FetchCloudMeta(Beyova.BinaryStorageIdentifier)">
            <summary>
            Fetches the cloud meta. Returned object would only includes (md5, length, name, content type).
            </summary>
            <param name="identifier">The identifier.</param>
            <returns>BinaryStorageMetaBase.</returns>
        </member>
        <member name="M:Beyova.CloudBinaryStorageOperator`2.GetContainers">
            <summary>
            Gets the containers.
            </summary>
            <returns>List&lt;System.String&gt;.</returns>
        </member>
        <member name="M:Beyova.CloudBinaryStorageOperator`2.QueryBlob(`0,System.String,System.String,System.Nullable{System.Int64},System.Int32)">
            <summary>
            Queries the BLOB.
            </summary>
            <param name="container">The container.</param>
            <param name="contentType">Type of the content.</param>
            <param name="md5">The MD5.</param>
            <param name="length">The length.</param>
            <param name="limitCount">The limit count.</param>
            <returns>IEnumerable&lt;TCloudBlobObject&gt;.</returns>
        </member>
        <member name="M:Beyova.CloudBinaryStorageOperator`2.QueryBlob(System.String,System.String,System.String,System.Nullable{System.Int64},System.Int32)">
            <summary>
            Queries the BLOB.
            </summary>
            <param name="container">The container.</param>
            <param name="contentType">Type of the content.</param>
            <param name="md5">The MD5.</param>
            <param name="length">The length.</param>
            <param name="limitCount">The limit count.</param>
            <returns>IEnumerable&lt;TCloudBlobObject&gt;.</returns>
        </member>
        <member name="M:Beyova.CloudBinaryStorageOperator`2.QueryBinaryBlobByContainer(System.String,System.String,System.String,System.Nullable{System.Int64},System.Int32)">
            <summary>
            Queries the binary BLOB by container.
            </summary>
            <param name="containerName">Name of the container.</param>
            <param name="contentType">Type of the content.</param>
            <param name="md5">The MD5.</param>
            <param name="length">The length.</param>
            <param name="limitCount">The limit count.</param>
            <returns>List&lt;BinaryStorageMeta&gt;.</returns>
        </member>
        <member name="M:Beyova.CloudBinaryStorageOperator`2.Exists(Beyova.BinaryStorageIdentifier)">
            <summary>
            Check Existence of the specified identifier.
            </summary>
            <param name="identifier">The identifier.</param>
            <returns><c>true</c> if existed, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Beyova.ICloudBinaryStorageOperator">
            <summary>
            Interface ICloudBinaryStorageOperator
            </summary>
        </member>
        <member name="M:Beyova.ICloudBinaryStorageOperator.DownloadBinaryBytesByCredentialUri(System.String)">
            <summary>
            Downloads the binary bytes by credential.
            </summary>
            <param name="blobUri">The BLOB URI.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.ICloudBinaryStorageOperator.DownloadBinaryStreamByCredentialUri(System.String)">
            <summary>
            Downloads the binary stream by credential.
            </summary>
            <param name="blobUri">The BLOB URI.</param>
            <returns>Stream.</returns>
        </member>
        <member name="M:Beyova.ICloudBinaryStorageOperator.UploadBinaryBytesByCredentialUri(System.String,System.Byte[],System.String,System.String)">
            <summary>
            Uploads the binary bytes by credential.
            </summary>
            <param name="blobUri">The BLOB URI.</param>
            <param name="dataBytes">The data bytes.</param>
            <param name="contentType">Type of the content.</param>
            <param name="fileName">Name of the file.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.ICloudBinaryStorageOperator.UploadBinaryStreamByCredentialUri(System.String,System.IO.Stream,System.String,System.String)">
            <summary>
            Uploads the binary stream by credential URI.
            </summary>
            <param name="blobUri">The BLOB URI.</param>
            <param name="stream">The stream.</param>
            <param name="contentType">Type of the content.</param>
            <param name="fileName">Name of the file.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.ICloudBinaryStorageOperator.DeleteBlob(Beyova.BinaryStorageIdentifier)">
            <summary>
            Deletes the BLOB.
            </summary>
            <param name="storageIdentifier">The storage identifier.</param>
        </member>
        <member name="M:Beyova.ICloudBinaryStorageOperator.CreateBlobUploadCredential(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Creates the BLOB upload credential.
            </summary>
            <param name="containerName">Name of the container.</param>
            <param name="blobIdentifier">The BLOB identifier.</param>
            <param name="expireOffsetInMinute">The expire offset in minute.</param>
            <param name="hash">The hash.</param>
            <param name="contentType">Type of the content.</param>
            <returns>BinaryStorageActionCredential.</returns>
        </member>
        <member name="M:Beyova.ICloudBinaryStorageOperator.CreateBlobDownloadCredential(System.String,System.String,System.Int32)">
            <summary>
            Creates the BLOB download credential.
            </summary>
            <param name="containerName">Name of the container.</param>
            <param name="blobIdentifier">The BLOB identifier.</param>
            <param name="expireOffsetInMinute">The expire offset in minute.</param>
            <returns>BinaryStorageActionCredential.</returns>
        </member>
        <member name="M:Beyova.ICloudBinaryStorageOperator.GetContainers">
            <summary>
            Gets the containers.
            </summary>
            <returns>List&lt;System.String&gt;.</returns>
        </member>
        <member name="M:Beyova.ICloudBinaryStorageOperator.Exists(Beyova.BinaryStorageIdentifier)">
            <summary>
            Existses the specified identifier.
            </summary>
            <param name="identifier">The identifier.</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.ICloudBinaryStorageOperator.FetchCloudMeta(Beyova.BinaryStorageIdentifier)">
            <summary>
            Fetches the cloud meta.
            </summary>
            <param name="identifier">The identifier.</param>
            <returns>BinaryStorageMetaData.</returns>
        </member>
        <member name="T:Beyova.BeyovaPropertyConstants">
            <summary>
            Class BeyovaPropertyConstants
            </summary>
        </member>
        <member name="F:Beyova.BeyovaPropertyConstants.Copyright">
            <summary>
            The copyright
            </summary>
        </member>
        <member name="F:Beyova.BeyovaPropertyConstants.Company">
            <summary>
            The company
            </summary>
        </member>
        <member name="F:Beyova.BeyovaPropertyConstants.AssemblyDescription">
            <summary>
            The assembly description
            </summary>
        </member>
        <member name="F:Beyova.BeyovaPropertyConstants.AssemblyTrademark">
            <summary>
            The assembly trademark
            </summary>
        </member>
        <member name="T:Beyova.Fun.UnicodeConstants">
            <summary>
            Class UnicodeConstants.
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.Love">
            <summary>
            The smile face: ♥
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.Love2">
            <summary>
            The love2
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.SmileFace">
            <summary>
            The smile face: ☺
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.SmileFace2">
            <summary>
            The smile face: ☻
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.Heart">
            <summary>
            The heart: ♥
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.Diamond">
            <summary>
            The diamond:♦
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.Club">
            <summary>
            The club: ♣
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.Spade">
            <summary>
            The spade: ♠
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.Male">
            <summary>
            The male: ♂
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.DoubleMale">
            <summary>
            The double male: ⚣
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.Female">
            <summary>
            The female: ♀
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.DoubleFemale">
            <summary>
            The double female: ⚢
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.MaleAndFemale">
            <summary>
            The male and female: ⚤
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.Music">
            <summary>
            The music: ♫
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.Note">
            <summary>
            The note: ♪
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.Yes">
            <summary>
            The yes: ✓
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.No">
            <summary>
            The no: ✗
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.Pi">
            <summary>
            The pi: π
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.SubsetOf">
            <summary>
            The subset of: ⊂
            </summary>
        </member>
        <member name="F:Beyova.Fun.UnicodeConstants.SupersetOf">
            <summary>
            The superset of: ⊃
            </summary>
        </member>
        <member name="T:Beyova.StringConstants">
            <summary>
            Class StringConstants
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.EqualOperator">
            <summary>
            The equal operator
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.NotEqualOperator">
            <summary>
            The not equal operator
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.WhiteSpace">
            <summary>
            The white space
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.Comma">
            <summary>
            The comma
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.WhiteSpaceChar">
            <summary>
            The white space character
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.CommaChar">
            <summary>
            The comma character
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.NewLineChar">
            <summary>
            The new line character
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.DoubleQuoteChar">
            <summary>
            The double quote character
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.SingleQuoteChar">
            <summary>
            The single quote character
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.AsteriskChar">
            <summary>
            The asterisk character
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.PoundChar">
            <summary>
            The pound character
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.BackSlash">
            <summary>
            The backslash
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.Slash">
            <summary>
            The slash
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.Enter">
            <summary>
            The enter
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.Backspace">
            <summary>
            The backspace
            </summary>
        </member>
        <member name="F:Beyova.StringConstants.PathSignals">
            <summary>
            The path signals
            </summary>
        </member>
        <member name="T:Beyova.CommonServiceConstants">
            <summary>
            Class CommonServiceConstants
            </summary>
        </member>
        <member name="T:Beyova.CommonServiceConstants.Permission">
            <summary>
            Class Permission.
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.Permission.RemoteConfigurationAdministrator">
            <summary>
            The remote configuration administrator
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.Permission.BinaryStorageDataAdministrator">
            <summary>
            The binary storage data administrator
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.Permission.PreferenceAdministrator">
            <summary>
            The preference administrator
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.Permission.AuthenticationAdministrator">
            <summary>
            The authentication administrator
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.Permission.AdministrationOwner">
            <summary>
            The administration owner
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.Permission.Administrator">
            <summary>
            The administrator
            </summary>
        </member>
        <member name="T:Beyova.CommonServiceConstants.Permission.ProvisioningSystem">
            <summary>
            Class ProvisioningSystem.
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.Permission.ProvisioningSystem.AppVersionAdministration">
            <summary>
            The application version administration
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.Permission.ProvisioningSystem.AppPlatformAdministration">
            <summary>
            The application platform administration
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.Permission.ProvisioningSystem.AppProvisioningAdministration">
            <summary>
            The application provisioning administration
            </summary>
        </member>
        <member name="T:Beyova.CommonServiceConstants.Permission.AdminSystem">
            <summary>
            Class AdminSystem.
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.Permission.AdminSystem.AdminUserAdministration">
            <summary>
            The admin user administration. Used for operate user, user-role mapping.
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.Permission.AdminSystem.AdminRolePermissionAdministration">
            <summary>
            The admin role permission administration. Used for operate role &amp; permission, role-permission mapping.
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.Permission.AdminSystem.AdminUserRoleView">
            <summary>
            The admin user role view
            </summary>
        </member>
        <member name="T:Beyova.CommonServiceConstants.ActionName">
            <summary>
            Class ActionName.
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ActionName.Snapshot">
            <summary>
            The snapshot
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ActionName.Create">
            <summary>
            The create
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ActionName.Commit">
            <summary>
            The commit
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ActionName.Query">
            <summary>
            The query
            </summary>
        </member>
        <member name="T:Beyova.CommonServiceConstants.ResourceName">
            <summary>
            Class ResourceName.
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.Product">
            <summary>
            The product
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.UserInfo">
            <summary>
            The user information
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.Token">
            <summary>
            The token
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.SessionInfo">
            <summary>
            The session information
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.Preference">
            <summary>
            The preference
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.UserPreference">
            <summary>
            The user preference
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.AppProvisioning">
            <summary>
            The application provisioning
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.AppPlatform">
            <summary>
            The application platform
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.AppVersion">
            <summary>
            The application version
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.Transaction">
            <summary>
            The transaction
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.SSOTokenExchange">
            <summary>
            The sso token exchange
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.OAuth">
            <summary>
            The o authentication
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.SSOAuthorization">
            <summary>
            The sso authorization
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.BinaryStorageCredential">
            <summary>
            The binary storage credential
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.BinaryStorage">
            <summary>
            The binary storage
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.Configuration">
            <summary>
            The configuration
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.SSOAuthorizationPartner">
            <summary>
            The sso authorization partner
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.CentralAuthentication">
            <summary>
            The central authentication
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.AdminUserInfo">
            <summary>
            The admin user information
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.AdminRole">
            <summary>
            The admin role
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.AdminPermission">
            <summary>
            The admin permission
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.AdminPrivilege">
            <summary>
            The admin privilege
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.History">
            <summary>
            The history
            </summary>
        </member>
        <member name="F:Beyova.CommonServiceConstants.ResourceName.Snapshot">
            <summary>
            The snapshot
            </summary>
        </member>
        <member name="T:Beyova.XmlConstants">
            <summary>
            Class XmlConstants.
            </summary>
        </member>
        <member name="F:Beyova.XmlConstants.node_Dictionary">
            <summary>
            The node_ dictionary
            </summary>
        </member>
        <member name="F:Beyova.XmlConstants.node_List">
            <summary>
            The node_ list
            </summary>
        </member>
        <member name="F:Beyova.XmlConstants.node_Item">
            <summary>
            The node_ item
            </summary>
        </member>
        <member name="F:Beyova.XmlConstants.node_Matrix">
            <summary>
            The node_ matrix
            </summary>
        </member>
        <member name="F:Beyova.XmlConstants.attribute_Key">
            <summary>
            The attribute_ key
            </summary>
        </member>
        <member name="F:Beyova.XmlConstants.attribute_Value">
            <summary>
            The attribute_ value
            </summary>
        </member>
        <member name="T:Beyova.HttpConstants">
            <summary>
            Class HttpConstants.
            </summary>
        </member>
        <member name="T:Beyova.HttpConstants.HttpMethod">
            <summary>
            Class HttpMethod.
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpMethod.Get">
            <summary>
            The get
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpMethod.Post">
            <summary>
            The post
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpMethod.Put">
            <summary>
            The put
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpMethod.Delete">
            <summary>
            The delete
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpMethod.Head">
            <summary>
            The head
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpMethod.Options">
            <summary>
            The options
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpMethod.Trace">
            <summary>
            The trace
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpMethod.Patch">
            <summary>
            The patch
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpMethod.Lock">
            <summary>
            The lock
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpMethod.Unlock">
            <summary>
            The unlock
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpMethod.Fetch">
            <summary>
            The fetch
            </summary>
        </member>
        <member name="T:Beyova.HttpConstants.HttpHeader">
            <summary>
            Class HttpHeader.
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.TOKEN">
            <summary>
            The token
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.IfModifiedSince">
            <summary>
            If modified since
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.XIfModifiedSince">
            <summary>
            The x if modified since
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.LastModified">
            <summary>
            The last modified
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.XLastModified">
            <summary>
            The x last modified
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.CACHEVERSIONMATCH">
            <summary>
            The cache version match
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.ADMINTOKEN">
            <summary>
            The admin token
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.CLIENTIDENTIFIER">
            <summary>
            The client identifier
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.SERVEREXITTIME">
            <summary>
            The server exit time
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.SERVERENTRYTIME">
            <summary>
            The server entry time
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.SERVERNAME">
            <summary>
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.ORIGINAL">
            <summary>
            The original IP address
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.TRACEID">
            <summary>
            The trace ID
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.DEBUG">
            <summary>
            The debug ID
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.TRACESEQUENCE">
            <summary>
            The trace sequence
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.ContentEncoding">
            <summary>
            The content encoding
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.AcceptEncoding">
            <summary>
            The accept encoding
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.ContentDisposition">
            <summary>
            The content disposition
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.TransferEncoding">
            <summary>
            The transfer encoding
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.ContentLength">
            <summary>
            The content length
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.AccessControlAllowOrigin">
            <summary>
            The access control allow origin
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.AccessControlAllowHeaders">
            <summary>
            The access control allow headers
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.AccessControlAllowMethods">
            <summary>
            The access control allow methods
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.ContentType">
            <summary>
            The content type
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpHeader.Location">
            <summary>
            The location
            </summary>
        </member>
        <member name="T:Beyova.HttpConstants.HttpProtocols">
            <summary>
            Class HttpProtocols.
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpProtocols.Http">
            <summary>
            The HTTP
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpProtocols.HttpProtocol">
            <summary>
            The HTTP protocol
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpProtocols.Https">
            <summary>
            The HTTPS
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpProtocols.HttpsProtocol">
            <summary>
            The HTTPS protocol
            </summary>
        </member>
        <member name="T:Beyova.HttpConstants.HttpValues">
            <summary>
            Class HttpValues.
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpValues.GZip">
            <summary>
            The GZIP
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpValues.Deflate">
            <summary>
            The deflate
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpValues.Localhost">
            <summary>
            The localhost
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpValues.LocalhostIpV4">
            <summary>
            The localhost ip v4
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.HttpValues.LocalhostIpV6">
            <summary>
            The localhost ip v6
            </summary>
        </member>
        <member name="T:Beyova.HttpConstants.QueryString">
            <summary>
            Class QueryString.
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.QueryString.Language">
            <summary>
            The language
            </summary>
        </member>
        <member name="T:Beyova.HttpConstants.ContentType">
            <summary>
            Class ContentType.
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.Json">
            <summary>
            The language
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.Html">
            <summary>
            The HTML
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.BinaryDefault">
            <summary>
            The binary
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.ZipFile">
            <summary>
            The zip file
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.PngImage">
            <summary>
            The PNG image
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.JpegImage">
            <summary>
            The JPEG image
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.GifImage">
            <summary>
            The GIF image
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.Mp3Audio">
            <summary>
            The MP3 audio
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.Text">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.Xml">
            <summary>
            The XML
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.FormSubmit">
            <summary>
            The form submit
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.Apk">
            <summary>
            The apk
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.Ipa">
            <summary>
            The ipa
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.Excel">
            <summary>
            The excel
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.Pdf">
            <summary>
            The PDF
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.Css">
            <summary>
            The CSS
            </summary>
        </member>
        <member name="F:Beyova.HttpConstants.ContentType.JavaScript">
            <summary>
            The java script
            </summary>
        </member>
        <member name="T:Beyova.ExceptionFactory">
            <summary>
            Class ExceptionFactory.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionFactory.CheckEmptyString(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Checks empty string.
            </summary>
            <param name="anyString">Any string.</param>
            <param name="objectIdentity">The object identity.</param>
            <param name="memberName">Name of the member.</param>
            <param name="sourceFilePath">The source file path.</param>
            <param name="sourceLineNumber">The source line number.</param>
            <exception cref="T:Beyova.ExceptionSystem.NullObjectException"></exception>
        </member>
        <member name="M:Beyova.ExceptionFactory.CheckNullObject(System.Object,System.String,System.String,System.String,System.Int32)">
            <summary>
            Checks null object.
            </summary>
            <param name="anyObject">Any object.</param>
            <param name="objectIdentity">The object identity.</param>
            <param name="memberName">Name of the member.</param>
            <param name="sourceFilePath">The source file path.</param>
            <param name="sourceLineNumber">The source line number.</param>
            <exception cref="T:Beyova.ExceptionSystem.NullObjectException"></exception>
        </member>
        <member name="M:Beyova.ExceptionFactory.CheckNullResource(System.Object,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Checks the null resource.
            </summary>
            <param name="anyObject">Any object.</param>
            <param name="resourceName">Name of the resource.</param>
            <param name="resourceIdentity">The resource identity.</param>
            <param name="memberName">Name of the member.</param>
            <param name="sourceFilePath">The source file path.</param>
            <param name="sourceLineNumber">The source line number.</param>
            <exception cref="T:Beyova.ExceptionSystem.ResourceNotFoundException"></exception>
            <exception cref="T:Beyova.ExceptionSystem.ExceptionScene"></exception>
        </member>
        <member name="M:Beyova.ExceptionFactory.CheckNullOrEmptyCollection``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.String,System.Int32)">
            <summary>
            Checks the null or empty collection.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="objectIdentity">The object identity.</param>
            <param name="memberName">Name of the member.</param>
            <param name="sourceFilePath">The source file path.</param>
            <param name="sourceLineNumber">The source line number.</param>
            <exception cref="T:Beyova.ExceptionSystem.InvalidObjectException">Null or empty collection</exception>
            <exception cref="T:Beyova.ExceptionSystem.ExceptionScene"></exception>
        </member>
        <member name="M:Beyova.ExceptionFactory.CreateOperationException(System.Object,System.String,Beyova.ExceptionSystem.FriendlyHint,System.String,System.String,System.Int32)">
            <summary>
            Creates the operation exception.
            </summary>
            <param name="data">The data.</param>
            <param name="minor">The minor.</param>
            <param name="hint">The hint.</param>
            <param name="memberName">Name of the member.</param>
            <param name="sourceFilePath">The source file path.</param>
            <param name="sourceLineNumber">The source line number.</param>
            <returns>OperationFailureException.</returns>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException"></exception>
            <exception cref="T:Beyova.ExceptionSystem.ExceptionScene"></exception>
        </member>
        <member name="M:Beyova.ExceptionFactory.CreateInvalidObjectException(System.String,System.Object,System.String,Beyova.ExceptionSystem.FriendlyHint,System.String,System.String,System.Int32)">
            <summary>
            Creates the invalid object exception.
            </summary>
            <param name="objectIdentifier">The object identifier.</param>
            <param name="data">The data.</param>
            <param name="reason">The reason.</param>
            <param name="hint">The hint.</param>
            <param name="memberName">Name of the member.</param>
            <param name="sourceFilePath">The source file path.</param>
            <param name="sourceLineNumber">The source line number.</param>
            <returns>InvalidObjectException.</returns>
        </member>
        <member name="M:Beyova.ExceptionFactory.CreateOperationForbiddenException(System.String,System.Exception,System.Object,Beyova.ExceptionSystem.FriendlyHint,System.String,System.String,System.String,System.Int32)">
            <summary>
            Creates the operation forbidden exception.
            </summary>
            <param name="reason">The reason.</param>
            <param name="innerException">The inner exception.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
            <param name="actionName">Name of the action.</param>
            <param name="memberName">Name of the member.</param>
            <param name="sourceFilePath">The source file path.</param>
            <param name="sourceLineNumber">The source line number.</param>
            <returns>OperationForbiddenException.</returns>
        </member>
        <member name="M:Beyova.ExceptionFactory.CreateUnauthorizedTokenException(System.String,Beyova.ExceptionSystem.FriendlyHint,System.String,System.String,System.Int32)">
            <summary>
            Creates the unauthorized token exception.
            </summary>
            <param name="token">The token.</param>
            <param name="hint">The hint.</param>
            <param name="memberName">Name of the member.</param>
            <param name="sourceFilePath">The source file path.</param>
            <param name="sourceLineNumber">The source line number.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ExceptionFactory.CreateUnsupportedException(System.String,System.Object,System.String,System.Exception,Beyova.ExceptionSystem.FriendlyHint,System.String,System.String,System.Int32)">
            <summary>
            Creates the unsupported exception.
            </summary>
            <param name="objectIdentifier">The object identifier.</param>
            <param name="data">The data.</param>
            <param name="reason">The reason.</param>
            <param name="innerException">The inner exception.</param>
            <param name="hint">The hint.</param>
            <param name="memberName">Name of the member.</param>
            <param name="sourceFilePath">The source file path.</param>
            <param name="sourceLineNumber">The source line number.</param>
            <returns>UnsupportedException.</returns>
        </member>
        <member name="T:Beyova.BaseObjectExtension">
            <summary>
            Class BaseObjectExtension.
            </summary>
        </member>
        <member name="M:Beyova.BaseObjectExtension.IsRemoval(Beyova.SimpleBaseObject)">
            <summary>
            Determines whether the specified any object is removal.
            </summary>
            <param name="anyObject">Any object.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:Beyova.BaseObjectExtension.ToEntitySynchronizationResponse``1(System.Collections.Generic.IEnumerable{Beyova.SimpleBaseObject{``0}},System.Boolean)">
            <summary>
            To the entity synchronization response.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="baseObjects">The base objects.</param>
            <param name="upsertsOnly">if set to <c>true</c> [upserts only].</param>
            <returns>EntitySynchronizationResponse&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.BaseObjectExtension.ToEntitySynchronizationResponse``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            To the entity synchronization response.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="baseObjects">The base objects.</param>
            <param name="upsertsOnly">The upserts only.</param>
            <returns>Beyova.EntitySynchronizationResponse&lt;T&gt;.</returns>
        </member>
        <member name="T:Beyova.MathExtension">
            <summary>
            Class MathExtension.
            </summary>
        </member>
        <member name="M:Beyova.MathExtension.Max``1(``0,``0)">
            <summary>
            Internals the maximum.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item1">The item1.</param>
            <param name="item2">The item2.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.MathExtension.Max``2(``0,``0,System.Func{``0,System.Nullable{``1}},``0@)">
            <summary>
            Maximums the specified item2.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <typeparam name="TComparible">The type of the comparible.</typeparam>
            <param name="item1">The item1.</param>
            <param name="item2">The item2.</param>
            <param name="getComparer">The get comparer.</param>
            <param name="maxResult">The maximum result.</param>
            <returns><c>true</c> if item1 is Max, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.MathExtension.Max``1(``0,``0,``0@)">
            <summary>
            Maximums the specified item2.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item1">The item1.</param>
            <param name="item2">The item2.</param>
            <param name="maxResult">The maximum result.</param>
            <returns><c>true</c> if item1 is Max, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.MathExtension.Max``1(System.Nullable{``0},System.Nullable{``0})">
            <summary>
            Maximums the specified item1.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item1">The item1.</param>
            <param name="item2">The item2.</param>
            <returns>System.Nullable&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.MathExtension.Min``1(``0,``0)">
            <summary>
            Internals the maximum.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item1">The item1.</param>
            <param name="item2">The item2.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.MathExtension.Min``2(``0,``0,System.Func{``0,System.Nullable{``1}},``0@)">
            <summary>
            Minimums the specified item2.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <typeparam name="TComparible">The type of the comparible.</typeparam>
            <param name="item1">The item1.</param>
            <param name="item2">The item2.</param>
            <param name="getComparer">The get comparer.</param>
            <param name="minResult">The minimum result.</param>
            <returns>
              <c>true</c> if item1 is Min, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Beyova.MathExtension.Min``1(``0,``0,``0@)">
            <summary>
            Minimums the specified item2.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item1">The item1.</param>
            <param name="item2">The item2.</param>
            <param name="minResult">The minimum result.</param>
            <returns>
              <c>true</c> if item1 is Min, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Beyova.MathExtension.Min``1(System.Nullable{``0},System.Nullable{``0})">
            <summary>
            Minimums the specified item1.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item1">The item1.</param>
            <param name="item2">The item2.</param>
            <returns>System.Nullable&lt;T&gt;.</returns>
        </member>
        <member name="T:Beyova.WindowsProcessExtension">
            <summary>
            Extensions ProcessExtension
            </summary>
        </member>
        <member name="M:Beyova.WindowsProcessExtension.RunCommand(System.String,System.Action{System.String})">
            <summary>
            Runs the command. (*.cmd, *.bat, *.exe, etc.)
            </summary>
            <param name="commandFilePath">The command file path. (*.cmd, *.bat, *.exe, etc.)</param>
            <param name="outputDelegate">The output delegate.</param>
        </member>
        <member name="M:Beyova.WindowsProcessExtension.RunCommand(Beyova.WindowsProcessCommandParameter)">
            <summary>
            Runs the command. (*.cmd, *.bat, *.exe, etc.)
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="T:Beyova.LinqExtension">
            <summary>
            Class LinqExtension.
            </summary>
        </member>
        <member name="M:Beyova.LinqExtension.Where``3(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.Dictionary{``0,``2},System.Func{``0,``1,System.Boolean},System.Func{``1,``2})">
            <summary>
            Wheres the specified dictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TInputValue">The type of the input value.</typeparam>
            <typeparam name="TOutputValue">The type of the output value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="resultContainer">The result container.</param>
            <param name="whereClause">The where clause.</param>
            <param name="selector">The selector.</param>
        </member>
        <member name="M:Beyova.LinqExtension.Where``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.Dictionary{``0,``1},System.Func{``0,``1,System.Boolean})">
            <summary>
            Wheres the specified result container.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="resultContainer">The result container.</param>
            <param name="whereClause">The where clause.</param>
        </member>
        <member name="T:Beyova.DataExtension">
            <summary>
            Extension class for collection type object.
            </summary>
        </member>
        <member name="M:Beyova.DataExtension.WriteCsvRow(System.Text.StringBuilder,System.String[])">
            <summary>
            Writes the CSV row.
            </summary>
            <param name="stringBuilder">The string builder.</param>
            <param name="rowItems">The row items.</param>
        </member>
        <member name="T:Beyova.ContractModelExtension">
            <summary>
            Class ContractModelExtension.
            </summary>
        </member>
        <member name="M:Beyova.ContractModelExtension.BuildTreeHierarchy``1(System.Collections.Generic.List{``0},System.Guid,System.Boolean)">
            <summary>
            Builds the tree hierarchy.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="nodes">The nodes.</param>
            <param name="root">The root.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.ContractModelExtension.AddChildren``1(``0,System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.List{``0}},System.Collections.Generic.HashSet{System.Guid},System.Boolean)">
            <summary>
            Adds the children.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node">The node.</param>
            <param name="source">The source.</param>
            <param name="handledKeys">The handled keys.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <exception cref="T:Beyova.ExceptionSystem.DataConflictException"></exception>
        </member>
        <member name="M:Beyova.ContractModelExtension.Descendant``1(``0)">
            <summary>
            Descendant the specified root.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="root">The root.</param>
            <returns>IEnumerable&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.ContractModelExtension.ToList``1(Beyova.MatrixList{``0},System.Func{System.String,``0,System.Boolean})">
            <summary>
            To the list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="matrixList">The matrix list.</param>
            <param name="filter">The filter.</param>
            <returns>List&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.ContractModelExtension.ToMatrix``1(System.Collections.Generic.List{``0},System.Func{``0,System.String},System.Boolean)">
            <summary>
            To the matrix.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The list.</param>
            <param name="keyFunc">The key function.</param>
            <param name="keyCaseSensitive">if set to <c>true</c> [key case sensitive].</param>
            <returns>MatrixList&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.ContractModelExtension.AsMatrixList``1(System.Collections.Generic.List{``0},System.String,System.Boolean)">
            <summary>
            Ases the matrix list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The list.</param>
            <param name="key">The key.</param>
            <param name="keyCaseSensitive">if set to <c>true</c> [key case sensitive].</param>
            <returns>MatrixList&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.ContractModelExtension.MatrixToXml(Beyova.MatrixList{System.String})">
            <summary>
            Matrixes to XML.
            </summary>
            <param name="matrixList">The matrix list.</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.ContractModelExtension.MatrixToXml(Beyova.MatrixList{System.Guid})">
            <summary>
            To the XML.
            </summary>
            <param name="matrixList">The matrix list.</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.ContractModelExtension.MatrixToXml(Beyova.MatrixList{System.DateTime})">
            <summary>
            To the XML.
            </summary>
            <param name="matrixList">The matrix list.</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.ContractModelExtension.MatrixToXml``1(Beyova.MatrixList{``0},System.Func{``0,System.String})">
            <summary>
            To the XML.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="matrixList">The matrix list.</param>
            <param name="converter">The converter.</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.ContractModelExtension.XmlToMatrix(System.Xml.Linq.XElement)">
            <summary>
            XMLs to matrix.
            </summary>
            <param name="xml">The XML.</param>
            <returns>MatrixList&lt;System.String&gt;.</returns>
        </member>
        <member name="M:Beyova.ContractModelExtension.XmlToMatrixGuid(System.Xml.Linq.XElement)">
            <summary>
            XMLs to matrix unique identifier.
            </summary>
            <param name="xml">The XML.</param>
            <returns>MatrixList&lt;Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.ContractModelExtension.XmlToMatrixDateTime(System.Xml.Linq.XElement)">
            <summary>
            XMLs to matrix date time.
            </summary>
            <param name="xml">The XML.</param>
            <returns>MatrixList&lt;DateTime&gt;.</returns>
        </member>
        <member name="M:Beyova.ContractModelExtension.XmlToMatrix``1(System.Xml.Linq.XElement,System.Func{System.String,``0})">
            <summary>
            XMLs to matrix.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xml">The XML.</param>
            <param name="converter">The converter.</param>
            <returns>Beyova.MatrixList&lt;T&gt;.</returns>
        </member>
        <member name="T:Beyova.FinanceExtension">
            <summary>
            Extensions FinanceExtension
            </summary>
        </member>
        <member name="M:Beyova.FinanceExtension.CalculateVAT(System.Decimal,System.Decimal)">
            <summary>
            Calculates the VAT. Example: total price = 80, VAT=7%, then VAT = 7% * 80/(1+7%) = 5.23364486
            </summary>
            <param name="retailPrice">The retail price.</param>
            <param name="vatRate">The vat rate.</param>
            <returns>System.Decimal.</returns>
        </member>
        <member name="M:Beyova.FinanceExtension.GenerateFinanceItemDetail(System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String)">
            <summary>
            Generates the finance item detail.
            </summary>
            <param name="name">The name.</param>
            <param name="actualUnitRetailPrice">The unit retail price.</param>
            <param name="amount">The amount.</param>
            <param name="vatRate">The vat rate.</param>
            <param name="actualDiscount">The actual discount.</param>
            <param name="currency">The currency.</param>
            <returns>FinanceItemDetail.</returns>
        </member>
        <member name="M:Beyova.FinanceExtension.AsSummary(System.Collections.Generic.IEnumerable{Beyova.FinancialItemDetail},System.String)">
            <summary>
            Converts list of <see cref="T:Beyova.FinancialItemDetail" /> as <see cref="T:Beyova.FinancialItemSummary" />.
            </summary>
            <param name="details">The details.</param>
            <param name="summaryName">Name of the summary.</param>
            <returns>
            FinancialItemSummary.
            </returns>
        </member>
        <member name="T:Beyova.JsonDiffExtension">
            <summary>
            Class JsonDiffExtension.
            </summary>
        </member>
        <member name="M:Beyova.JsonDiffExtension.Diff(System.String,System.String,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Differences the specified identifier.
            </summary>
            <param name="path">The path.</param>
            <param name="identifier">The identifier.</param>
            <param name="content1">The content1.</param>
            <param name="content2">The content2.</param>
            <returns>System.Collections.Generic.List&lt;Beyova.ComparisonResult&gt;.</returns>
        </member>
        <member name="M:Beyova.JsonDiffExtension.Diff(System.String,System.String,Newtonsoft.Json.Linq.JArray,Newtonsoft.Json.Linq.JArray)">
            <summary>
            Differences the specified identifier.
            </summary>
            <param name="path">The path.</param>
            <param name="identifier">The identifier.</param>
            <param name="content1">The content1.</param>
            <param name="content2">The content2.</param>
            <returns>System.Collections.Generic.List&lt;Beyova.ComparisonResult&gt;.</returns>
        </member>
        <member name="M:Beyova.JsonDiffExtension.Diff(System.String,Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Differences the specified path.
            </summary>
            <param name="path">The path.</param>
            <param name="content1">The content1.</param>
            <param name="content2">The content2.</param>
            <returns>System.Collections.Generic.List&lt;Beyova.ComparisonResult&gt;.</returns>
        </member>
        <member name="M:Beyova.JsonDiffExtension.SimpleValueDiff``1(System.String,System.String,``0,``0)">
            <summary>
            Simples the value difference.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="path">The last identifier.</param>
            <param name="identifier">The identifier.</param>
            <param name="content1">The content1.</param>
            <param name="content2">The content2.</param>
            <returns>Beyova.ComparisonResult.</returns>
        </member>
        <member name="T:Beyova.GlobalizationExtension">
            <summary>
            Class GlobalizationExtension.
            </summary>
        </member>
        <member name="M:Beyova.GlobalizationExtension.AsCultureInfo(System.String)">
            <summary>
            As the culture information.
            </summary>
            <param name="code">The code.</param>
            <returns>CultureInfo.</returns>
        </member>
        <member name="M:Beyova.GlobalizationExtension.ToDictionary(System.Resources.ResourceManager,System.Boolean)">
            <summary>
            To the dictionary.
            </summary>
            <param name="resourceManager">The resource manager.</param>
            <param name="tryParent">if set to <c>true</c> [try parent].</param>
            <returns>Dictionary&lt;CultureInfo, Dictionary&lt;System.String, System.Object&gt;&gt;.</returns>
        </member>
        <member name="M:Beyova.GlobalizationExtension.ToDictionary(System.Resources.ResourceManager,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            To the dictionary.
            </summary>
            <param name="resourceManager">The resource manager.</param>
            <param name="cultureInfo">The culture information.</param>
            <param name="tryParent">if set to <c>true</c> [try parent].</param>
            <returns>Dictionary&lt;System.String, System.Object&gt;.</returns>
        </member>
        <member name="T:Beyova.LdapExtension">
            <summary>
            Class LdapExtension.
            </summary>
        </member>
        <member name="F:Beyova.LdapExtension.ldapProtocol">
            <summary>
            The LDAP protocol
            </summary>
        </member>
        <member name="F:Beyova.LdapExtension.cn">
            <summary>
            The cn
            </summary>
        </member>
        <member name="M:Beyova.LdapExtension.GetLdapPath(System.String)">
            <summary>
            Gets the LDAP path.
            </summary>
            <param name="ldapPath">The LDAP path.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.LdapExtension.GetDirectoryEntry(System.String,System.DirectoryServices.AuthenticationTypes)">
            <summary>
            Gets the directory entry.
            </summary>
            <param name="ldapPath">The LDAP path.Example: LDAP://yourdomain.com </param>
            <param name="authenticationType">Type of the authentication.</param>
            <returns>System.DirectoryServices.DirectoryEntry.</returns>
        </member>
        <member name="M:Beyova.LdapExtension.ValidateDirectoryEntry(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)">
            <summary>
            Validates the directory entry.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="ldapPath">The LDAP path.</param>
            <param name="authenticationType">Type of the authentication.</param>
            <returns>System.DirectoryServices.DirectoryEntry.</returns>
        </member>
        <member name="M:Beyova.LdapExtension.SearchUser(System.String,System.String)">
            <summary>
            Searches the user.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="ldapPath">The LDAP path.</param>
            <returns>System.DirectoryServices.DirectoryEntry.</returns>
        </member>
        <member name="M:Beyova.LdapExtension.GetMemberGroups(System.String,System.String,System.DirectoryServices.AuthenticationTypes)">
            <summary>
            Gets the member groups.
            </summary>
            <param name="userName">Name of the user. Example: Domain\Account</param>
            <param name="ldapPath">The LDAP path. Example: LDAP://yourdomain.com</param>
            <param name="authenticationType">Type of the authentication.</param>
            <returns>List&lt;DirectoryEntry&gt;.</returns>
        </member>
        <member name="M:Beyova.LdapExtension.GetMemberGroupNames(System.String,System.String,System.DirectoryServices.AuthenticationTypes)">
            <summary>
            Gets the member group names.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="ldapPath">The LDAP path.</param>
            <param name="authenticationType">Type of the authentication.</param>
            <returns>System.Collections.Generic.List&lt;System.String&gt;.</returns>
        </member>
        <member name="M:Beyova.LdapExtension.TryAuthenticate(System.String,System.String,System.String)">
            <summary>
            Tries the authenticate.
            </summary>
            <param name="ldapPath">The LDAP path. Example: LDAP://yourdomain.com </param>
            <param name="userName">Name of the user. Example: Domain\Account</param>
            <param name="password">The password.</param>
            <returns><c>true</c> if authentication is passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.LdapExtension.GetCNValue(System.DirectoryServices.DirectoryEntry)">
            <summary>
            Gets the cn value.
            </summary>
            <param name="entry">The entry.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.LdapExtension.InternalGetCNValue(System.String)">
            <summary>
            Gets the cn value.
            </summary>
            <param name="entryPath">The entry path.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.LdapExtension.GetDomainAccount(Beyova.AccessCredential,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Gets the domain account.
            </summary>
            <param name="accessCredential">The access credential.</param>
            <param name="defaultDomain">The default domain.</param>
            <param name="omitException">The omit exception.</param>
            <param name="domainMapping">The domain mapping.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.LdapExtension.UnifyAccountName(Beyova.AccessCredential,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Unifies the name of the account.
            </summary>
            <param name="accessCredential">The access credential.</param>
            <param name="defaultDomain">The default domain.</param>
            <param name="omitException">The omit exception.</param>
            <param name="domainMapping">The domain mapping.</param>
            <returns>Beyova.AccessCredential.</returns>
        </member>
        <member name="T:Beyova.SystemManagementExtension">
            <summary>
            Class SystemManagementExtension.
            </summary>
        </member>
        <member name="M:Beyova.SystemManagementExtension.FillHealthData(Beyova.IMachineHealth)">
            <summary>
            Fills the health data.
            </summary>
            <param name="healthObject">The health object.</param>
        </member>
        <member name="M:Beyova.SystemManagementExtension.GetMachineHealth">
            <summary>
            Gets the machine health.
            </summary>
            <returns>MachineHealth.</returns>
        </member>
        <member name="M:Beyova.SystemManagementExtension.GetProcessMemoryUsage">
            <summary>
            Gets the memory usage. (Unit: byte)
            </summary>
            <returns>System.Int64.</returns>
        </member>
        <member name="M:Beyova.SystemManagementExtension.GetPhysicalMemoryUsage">
            <summary>
            Gets the physical memory usage.
            </summary>
            <returns>System.Nullable&lt;System.Int64&gt;.</returns>
        </member>
        <member name="M:Beyova.SystemManagementExtension.GetPhysicalTotalMemory">
            <summary>
            Gets the physical total memory.
            </summary>
            <returns>System.Nullable&lt;System.Int64&gt;.</returns>
        </member>
        <member name="M:Beyova.SystemManagementExtension.GetDiskUsages">
            <summary>
            Gets the disk usages.
            </summary>
            <returns>List&lt;DiskDriveInfo&gt;.</returns>
        </member>
        <member name="M:Beyova.SystemManagementExtension.GetGCMemory(System.Boolean)">
            <summary>
            Gets the gc memory.
            </summary>
            <param name="forceFullCollection">if set to <c>true</c> [force full collection].</param>
            <returns>System.Nullable&lt;System.Int64&gt;.</returns>
        </member>
        <member name="M:Beyova.SystemManagementExtension.GetCpuUsage">
            <summary>
            Gets the cpu usage.
            </summary>
            <returns>System.Nullable&lt;System.Double&gt;.</returns>
        </member>
        <member name="T:Beyova.UiExtension">
            <summary>
            </summary>
        </member>
        <member name="M:Beyova.UiExtension.ToUiDateTime(System.Nullable{System.DateTime},System.Int32)">
            <summary>
            To the UI date time.
            </summary>
            <param name="utcDateTime">The UTC date time.</param>
            <param name="defaultTimeZoneInMinute">The default time zone in minute.</param>
            <returns>System.Nullable&lt;DateTime&gt;.</returns>
        </member>
        <member name="M:Beyova.UiExtension.ToUiDateTime(System.DateTime,System.Int32)">
            <summary>
            To the UI date time.
            </summary>
            <param name="utcDateTime">The UTC date time.</param>
            <param name="defaultTimeZoneInMinute">The default time zone in minute.</param>
            <returns>System.DateTime.</returns>
        </member>
        <member name="M:Beyova.UiExtension.ToFriendlyDateTimeDisplay(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            To the friendly date time display.
            </summary>
            <param name="minutes">The minutes.</param>
            <param name="minuteUnit">The minute unit.</param>
            <param name="hourUnit">The hour unit.</param>
            <param name="dayUnit">The day unit.</param>
            <param name="monthUnit">The month unit.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.Configuration.BaseJsonConfigurationReader">
            <summary>
            Class BaseJsonConfigurationReader.
            </summary>
            <seealso cref="T:Beyova.IConfigurationReader" />
        </member>
        <member name="T:Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationItem">
            <summary>
            Class ConfigurationItem.
            </summary>
        </member>
        <member name="P:Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationItem.Assembly">
            <summary>
            Gets or sets the assembly.
            </summary>
            <value>The assembly.</value>
        </member>
        <member name="P:Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationItem.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationItem.Environment">
            <summary>
            Gets or sets the environment.
            </summary>
            <value>The environment.</value>
        </member>
        <member name="P:Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationItem.Encrypted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationItem"/> is encrypted.
            </summary>
            <value><c>true</c> if encrypted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationItem.MinComponentVersionRequired">
            <summary>
            Gets or sets the minimum component version required.
            </summary>
            <value>The minimum component version required.</value>
        </member>
        <member name="P:Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationItem.MaxComponentVersionLimited">
            <summary>
            Gets or sets the maximum component version limited.
            </summary>
            <value>The maximum component version limited.</value>
        </member>
        <member name="P:Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationItem.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value><c>true</c> if this instance is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationKey_PrimarySqlConnection">
            <summary>
            The configuration key primary SQL connection
            </summary>
        </member>
        <member name="F:Beyova.Configuration.BaseJsonConfigurationReader.settings">
            <summary>
            The settings
            </summary>
        </member>
        <member name="P:Beyova.Configuration.BaseJsonConfigurationReader.SettingsCount">
            <summary>
            Gets the settings count.
            </summary>
            <value>The settings count.</value>
        </member>
        <member name="P:Beyova.Configuration.BaseJsonConfigurationReader.Hash">
            <summary>
            Gets the hash.
            </summary>
            <value>The hash.</value>
        </member>
        <member name="P:Beyova.Configuration.BaseJsonConfigurationReader.SqlConnection">
            <summary>
            Gets the SQL connection.
            </summary>
            <value>The SQL connection.</value>
        </member>
        <member name="P:Beyova.Configuration.BaseJsonConfigurationReader.PrimarySqlConnection">
            <summary>
            Gets the primary SQL connection.
            </summary>
            <value>
            The primary SQL connection.
            </value>
        </member>
        <member name="P:Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationBelongs">
            <summary>
            Gets the configuration belongs.
            </summary>
            <value>The configuration belongs.</value>
        </member>
        <member name="M:Beyova.Configuration.BaseJsonConfigurationReader.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Configuration.JsonConfigurationReader" /> class.
            </summary>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
        </member>
        <member name="M:Beyova.Configuration.BaseJsonConfigurationReader.GetConfiguration``1(System.String,``0)">
            <summary>
            Gets the configuration.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.Configuration.BaseJsonConfigurationReader.GetConfigurationAsObject(System.String,System.Object)">
            <summary>
            Gets the configuration as object.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:Beyova.Configuration.BaseJsonConfigurationReader.GetConfiguration(System.String,System.String)">
            <summary>
            Gets the configuration.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.Configuration.BaseJsonConfigurationReader.Initialize(System.Boolean)">
            <summary>
            Initializes the specified throw exception.
            </summary>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns>Dictionary&lt;System.String, ConfigurationItem&gt;.</returns>
        </member>
        <member name="M:Beyova.Configuration.BaseJsonConfigurationReader.FillObjectCollection(System.Collections.Generic.IDictionary{System.String,Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationItem},Beyova.ProgrammingIntelligence.BeyovaComponentAttribute,Newtonsoft.Json.Linq.JProperty,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Fills the object collection.
            </summary>
            <param name="container">The container.</param>
            <param name="componentAttribute">The component attribute.</param>
            <param name="itemNode">The XML node.</param>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="configurationSourceName">Name of the configuration source.</param>
            <param name="environment">The environment.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <exception cref="T:System.InvalidOperationException">Failed to FillObjectCollection, Data:  + xmlNode.ToString() + \n\r</exception>
        </member>
        <member name="M:Beyova.Configuration.BaseJsonConfigurationReader.InitializeSettings(System.Collections.Generic.IDictionary{System.String,Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationItem},Beyova.ProgrammingIntelligence.BeyovaComponentAttribute,Beyova.ConfigurationDetail,System.String,System.Boolean)">
            <summary>
            Initializes the settings.
            </summary>
            <param name="settingContainer">The setting container.</param>
            <param name="componentAttribute">The component attribute.</param>
            <param name="configurationDetail">The configuration detail.</param>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
        </member>
        <member name="M:Beyova.Configuration.BaseJsonConfigurationReader.DecryptObject(System.String)">
            <summary>
            Decrypts the object.
            </summary>
            <param name="jsonString">The json string.</param>
            <returns>Newtonsoft.Json.Linq.JToken.</returns>
        </member>
        <member name="M:Beyova.Configuration.BaseJsonConfigurationReader.EncryptObject(System.Object)">
            <summary>
            Encrypts the object.
            </summary>
            <param name="obj">The object.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.Configuration.BaseJsonConfigurationReader.IsActive(System.String,System.String,System.String)">
            <summary>
            Determines whether the specified version value is active.
            </summary>
            <param name="versionValue">The version value.</param>
            <param name="minRequired">The minimum required.</param>
            <param name="maxLimited">The maximum limited.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:Beyova.Configuration.BaseJsonConfigurationReader.RefreshSettings">
            <summary>
            Refreshes the settings.
            </summary>
        </member>
        <member name="M:Beyova.Configuration.BaseJsonConfigurationReader.GetValues">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Beyova.Configuration.RemoteConfigurationReader">
            <summary>
            Provides access to configuration files for client applications. Reader would try read AppConfig.JSON first, then read assembly name based JSON ({AssemblyName}.JSON) to override, based on dependency order.
            </summary>
        </member>
        <member name="F:Beyova.Configuration.RemoteConfigurationReader._gravityClient">
            <summary>
            The _gravity client
            </summary>
        </member>
        <member name="P:Beyova.Configuration.RemoteConfigurationReader.ConfigurationName">
            <summary>
            Gets or sets the name of the configuration.
            </summary>
            <value>The name of the configuration.</value>
        </member>
        <member name="M:Beyova.Configuration.RemoteConfigurationReader.#ctor(Beyova.Gravity.GravityClient,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Configuration.JsonConfigurationReader" /> class.
            </summary>
            <param name="gravityClient">The gravity client.</param>
            <param name="configurationName">Name of the configuration.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
        </member>
        <member name="M:Beyova.Configuration.RemoteConfigurationReader.Initialize(System.Boolean)">
            <summary>
            Initializes the specified throw exception.
            </summary>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns>Dictionary&lt;System.String, ConfigurationItem&gt;.</returns>
        </member>
        <member name="M:Beyova.Configuration.RemoteConfigurationReader.RefreshSettings">
            <summary>
            Refreshes the settings.
            </summary>
        </member>
        <member name="M:Beyova.Configuration.RemoteConfigurationReader.SaveConfigurationBackup(System.Collections.Generic.Dictionary{System.String,Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationItem})">
            <summary>
            Saves the configuration backup.
            </summary>
            <param name="configurations">The configurations.</param>
        </member>
        <member name="M:Beyova.Configuration.RemoteConfigurationReader.RestoreBackup">
            <summary>
            Restores the backup.
            </summary>
            <returns>System.Collections.Generic.Dictionary&lt;System.String, Beyova.Configuration.BaseJsonConfigurationReader.ConfigurationItem&gt;.</returns>
        </member>
        <member name="T:Beyova.Configuration.JsonConfigurationReader">
            <summary>
            Provides access to configuration files for client applications. Reader would try read AppConfig.JSON first, then read assembly name based JSON ({AssemblyName}.JSON) to override, based on dependency order.
            </summary>
        </member>
        <member name="F:Beyova.Configuration.JsonConfigurationReader.configurationFileExtension">
            <summary>
            The configuration file extension
            </summary>
        </member>
        <member name="M:Beyova.Configuration.JsonConfigurationReader.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Configuration.JsonConfigurationReader" /> class.
            </summary>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
        </member>
        <member name="M:Beyova.Configuration.JsonConfigurationReader.Initialize(System.Boolean)">
            <summary>
            Initializes the specified throw exception.
            </summary>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns>Dictionary&lt;System.String, ConfigurationItem&gt;.</returns>
        </member>
        <member name="M:Beyova.Configuration.JsonConfigurationReader.InitializeByAssembly(System.Reflection.Assembly,System.Boolean)">
            <summary>
            Initializes this instance.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns>Dictionary&lt;System.String, System.Object&gt;.</returns>
        </member>
        <member name="M:Beyova.Configuration.JsonConfigurationReader.RefreshSettings">
            <summary>
            Refreshes the settings.
            </summary>
        </member>
        <member name="M:Beyova.Configuration.JsonConfigurationReader.GetConfigurationFilePath(System.String)">
            <summary>
            Gets the default configuration file path.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:Beyova.Configuration.JsonConfigurationReader.Default">
            <summary>
            Gets the default.
            </summary>
            <value>The default.</value>
        </member>
        <member name="T:Beyova.GlobalCultureResource">
            <summary>
            Class GlobalCultureResource.
            </summary>
        </member>
        <member name="P:Beyova.GlobalCultureResource.Resource">
            <summary>
            Gets or sets the resource.
            </summary>
            <value>The resource.</value>
        </member>
        <member name="P:Beyova.GlobalCultureResource.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="T:Beyova.GlobalCultureResourceCollection">
            <summary>
            Class GlobalResourceCollection. Only resources defined via <see cref="T:Beyova.ProgrammingIntelligence.BeyovaCultureResourceAttribute"/> would be provided here.
            </summary>
        </member>
        <member name="F:Beyova.GlobalCultureResourceCollection.singleton">
            <summary>
            The singleton
            </summary>
        </member>
        <member name="P:Beyova.GlobalCultureResourceCollection.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="F:Beyova.GlobalCultureResourceCollection.cultureBasedResources">
            <summary>
            The culture based resources
            </summary>
        </member>
        <member name="P:Beyova.GlobalCultureResourceCollection.DefaultCultureInfo">
            <summary>
            Gets or sets the default culture information.
            </summary>
            <value>The default culture information.</value>
        </member>
        <member name="M:Beyova.GlobalCultureResourceCollection.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Beyova.GlobalCultureResourceCollection"/> class from being created.
            </summary>
        </member>
        <member name="M:Beyova.GlobalCultureResourceCollection.Initialize(System.Globalization.CultureInfo@)">
            <summary>
            Initializes this instance.
            </summary>
            <returns>Dictionary&lt;CultureInfo, Dictionary&lt;System.String, System.Object&gt;&gt;.</returns>
        </member>
        <member name="M:Beyova.GlobalCultureResourceCollection.HasCultureResource(System.Globalization.CultureInfo)">
            <summary>
            Determines whether [has culture resource] [the specified culture information].
            </summary>
            <param name="cultureInfo">The culture information.</param>
            <returns><c>true</c> if [has culture resource] [the specified culture information]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.GlobalCultureResourceCollection.GetResourceString(System.String,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Gets the resource.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <param name="cultureInfo">The culture information.</param>
            <param name="languageCompatibility">The language compatibility.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="P:Beyova.GlobalCultureResourceCollection.AvailableCultureInfo">
            <summary>
            Gets the available culture information.
            </summary>
            <value>The available culture information.</value>
        </member>
        <member name="M:Beyova.GlobalCultureResourceCollection.CreateCultureResourceFile(System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Creates the culture resource file.
            </summary>
            <param name="targetDirectory">The target directory.</param>
            <param name="baseName">Name of the base.</param>
            <param name="cultureInfo">The culture information.</param>
        </member>
        <member name="T:Beyova.Gravity.CentralManagementContext">
            <summary>
            Class CentralManagementContext.
            </summary>
        </member>
        <member name="F:Beyova.Gravity.CentralManagementContext._parameterProductKey">
            <summary>
            </summary>
        </member>
        <member name="P:Beyova.Gravity.CentralManagementContext.ParameterProductKey">
            <summary>
            Gets the parameter product key.
            </summary>
            <value>The parameter product key.</value>
        </member>
        <member name="P:Beyova.Gravity.CentralManagementContext.ProductKey">
            <summary>
            Gets the product key.
            </summary>
            <value>The product key.</value>
        </member>
        <member name="M:Beyova.Gravity.CentralManagementContext.EnsureProductScope(Beyova.IProductIdentifier)">
            <summary>
            Ensures the product scope.
            </summary>
            <param name="productBasedObject">The product based object.</param>
            <exception cref="T:Beyova.ExceptionSystem.UnauthorizedOperationException">ProductOwnership</exception>
        </member>
        <member name="M:Beyova.Gravity.CentralManagementContext.EnsureProductScope``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            Ensures the product scope.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="productBasedObjects">The product based objects.</param>
            <param name="forceApplyUrlParameterProductKey">if set to <c>true</c> [force apply URL parameter product key].</param>
        </member>
        <member name="M:Beyova.Gravity.CentralManagementContext.ValidateProductScope(Beyova.IProductIdentifier)">
            <summary>
            Validates the product scope.
            </summary>
            <param name="productBasedObject">The product based object.</param>
            <returns>Return true if validation passed.</returns>
        </member>
        <member name="M:Beyova.Gravity.CentralManagementContext.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="T:Beyova.Gravity.GravityEventHookAttribute">
            <summary>
            Class GravityEventHookAttribute.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.GravityEventHookAttribute.Hook">
            <summary>
            Gets or sets the hook.
            </summary>
            <value>The hook.</value>
        </member>
        <member name="M:Beyova.Gravity.GravityEventHookAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Gravity.GravityEventHookAttribute"/> class.
            </summary>
            <param name="type">The type. Type should inherited from <see cref="T:Beyova.Gravity.GravityEventHook"/> and have constructor with no parameter.</param>
        </member>
        <member name="T:Beyova.Gravity.GravityCommandActionAttribute">
            <summary>
            Class GravityCommandActionAttribute.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.GravityCommandActionAttribute.Invokers">
            <summary>
            Gets or sets the invoker.
            </summary>
            <value>The invoker.</value>
        </member>
        <member name="M:Beyova.Gravity.GravityCommandActionAttribute.#ctor(Beyova.Gravity.IGravityCommandInvoker[])">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Gravity.GravityCommandActionAttribute"/> class.
            </summary>
            <param name="invokers">The invokers.</param>
        </member>
        <member name="T:Beyova.Gravity.GravityAgent">
            <summary>
            Class GravityAgent.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.GravityAgent.Entry">
            <summary>
            Gets or sets the entry.
            </summary>
            <value>The entry.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityAgent.EventHook">
            <summary>
            Gets or sets the event hook.
            </summary>
            <value>The event hook.</value>
        </member>
        <member name="M:Beyova.Gravity.GravityAgent.#ctor(Beyova.Gravity.GravityEntryObject,Beyova.Gravity.GravityEventHook)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Gravity.GravityAgent" /> class.
            </summary>
            <param name="entry">The entry.</param>
            <param name="hook">The hook.</param>
        </member>
        <member name="M:Beyova.Gravity.GravityAgent.Invoke``2(System.String,System.String,``0)">
            <summary>
            Invokes the specified feature.
            </summary>
            <typeparam name="TIn">The type of the t in.</typeparam>
            <typeparam name="TOut">The type of the t out.</typeparam>
            <param name="module">The module.</param>
            <param name="feature">The feature.</param>
            <param name="parameter">The parameter.</param>
            <returns>TOut.</returns>
        </member>
        <member name="M:Beyova.Gravity.GravityAgent.GetInvokeUri(System.String,System.String)">
            <summary>
            Gets the invoke URI.
            </summary>
            <param name="module">The module.</param>
            <param name="feature">The feature.</param>
            <returns>Uri.</returns>
        </member>
        <member name="T:Beyova.Gravity.FeatureModuleSwitchCommandInvoker">
            <summary>
            Class FeatureModuleSwitchCommandInvoker.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.FeatureModuleSwitchCommandInvoker.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="M:Beyova.Gravity.FeatureModuleSwitchCommandInvoker.Invoke(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Invokes this instance.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>JToken.</returns>
        </member>
        <member name="T:Beyova.Gravity.ProcessCommandParameter">
            <summary>
            Class ProcessCommandParameter.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.ProcessCommandParameter.OutputCommandResult">
            <summary>
            Gets or sets a value indicating whether [output command result].
            </summary>
            <value><c>true</c> if [output command result]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Beyova.Gravity.ProcessCommandParameter.ToWindowsProcessCommandParameter(System.Text.StringBuilder)">
            <summary>
            To the windows process command parameter.
            </summary>
            <returns>WindowsProcessCommandParameter.</returns>
        </member>
        <member name="T:Beyova.Gravity.GravityContext">
            <summary>
            Class GravityContext.
            </summary>
        </member>
        <member name="F:Beyova.Gravity.GravityContext._productKey">
            <summary>
            The product key
            </summary>
        </member>
        <member name="P:Beyova.Gravity.GravityContext.ProductKey">
            <summary>
            Gets or sets the product key.
            </summary>
            <value>The product key.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityContext.ProductInfo">
            <summary>
            Gets the product information.
            </summary>
            <value>The product information.</value>
        </member>
        <member name="M:Beyova.Gravity.GravityContext.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="T:Beyova.Gravity.GravityExtension">
            <summary>
            Class GravityExtension.
            </summary>
        </member>
        <member name="M:Beyova.Gravity.GravityExtension.ConvertToSecuredMessagePackage``1(Beyova.Gravity.SecuredMessageRequest{``0},System.String)">
            <summary>
            Converts to secured message package.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="messageObject">The message object.</param>
            <param name="publicKey">The public key.</param>
            <returns>SecuredMessagePackage.</returns>
        </member>
        <member name="M:Beyova.Gravity.GravityExtension.SecureHttpInvoke``2(System.Uri,``0,System.String,System.String)">
            <summary>
            Secures HTTP invoke.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
            <param name="uri">The URI.</param>
            <param name="data">The data.</param>
            <param name="rsaPublicKey">The RSA public key.</param>
            <param name="token">The token.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.Gravity.GravityExtension.ConvertToSecuredMessageObject``1(System.Byte[],System.Byte[])">
            <summary>
            Converts to secured message object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bytes">The bytes.</param>
            <param name="encryptionKey">The encryption key.</param>
            <returns>SecuredMessageObject&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.Gravity.GravityExtension.ToBytes``1(Beyova.Gravity.SecuredMessageObject{``0},System.Byte[])">
            <summary>
            To bytes.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="messageObject">The message object.</param>
            <param name="encryptionKey">The encryption key.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.Gravity.GravityExtension.ConvertToSecuredMessageRequest``1(Beyova.Gravity.SecuredMessagePackage,System.String)">
            <summary>
            Converts to secured message request.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="package">The package.</param>
            <param name="privateKey">The private key.</param>
            <returns>SecuredMessageRequest&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.Gravity.GravityExtension.GetSecuredMessageRequest``1(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the secured message request.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="httpRequest">The HTTP request.</param>
            <param name="privateKey">The private key.</param>
            <returns>SecuredMessageRequest&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.Gravity.GravityExtension.ResponseSecureCommunicationPackage``1(System.Web.HttpResponse,``0,System.Byte[])">
            <summary>
            Responses the secure communication package.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="response">The response.</param>
            <param name="responseObject">The response object.</param>
            <param name="encryptionKey">The encryption key.</param>
        </member>
        <member name="M:Beyova.Gravity.GravityExtension.ProcessSecureHttpInvoke``3(System.Web.HttpContext,System.Func{System.Web.HttpRequest,System.String},System.Func{``0,``1},System.Func{System.String,``2},System.Boolean)">
            <summary>
            Processes the secure HTTP invoke.
            </summary>
            <typeparam name="TInput">The type of the t input.</typeparam>
            <typeparam name="TOutput">The type of the t output.</typeparam>
            <typeparam name="TGravityClientObject">The type of the t gravity client object.</typeparam>
            <param name="httpContext">The HTTP context.</param>
            <param name="getToken">The get token.</param>
            <param name="processFunc">The process function.</param>
            <param name="getClientObjectByToken">The get client object by token.</param>
            <param name="omitStampValidation">The omit stamp validation.</param>
            <returns>Beyova.ExceptionSystem.BaseException.</returns>
        </member>
        <member name="T:Beyova.Gravity.ICentralAuthenticationManagementService">
            <summary>
            Interface ICentralAuthenticationManagementService
            </summary>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.QueryAdminUser(Beyova.AdminUserCriteria)">
            <summary>
            Queries the admin user.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;AdminUserInfo&gt;.</returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.CreateOrUpdateAdminUser(Beyova.AdminUserInfo)">
            <summary>
            Creates the or update admin user.
            </summary>
            <param name="userInfo">The user information.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.DeleteAdminUser(System.Nullable{System.Guid})">
            <summary>
            Deletes the admin user.
            </summary>
            <param name="userKey">The user key.</param>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.BindRoleOnUser(Beyova.AdminRoleBinding)">
            <summary>
            Binds the role on user.
            </summary>
            <param name="binding">The binding.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.GetUserRoleBindings(System.Nullable{System.Guid})">
            <summary>
            Gets the user role bindings.
            </summary>
            <param name="userKey">The user key.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.UnbindRoleOnUser(Beyova.AdminRoleBinding)">
            <summary>
            Unbinds the role on user.
            </summary>
            <param name="binding">The binding.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.RequestAdminPasswordReset(System.Nullable{System.Guid})">
            <summary>
            Requests the admin password reset.
            </summary>
            <param name="userKey">The user key.</param>
            <returns>
            System.String.
            </returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.QueryAdminRole(Beyova.AdminRoleCriteria)">
            <summary>
            Queries the admin role.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;AdminRole&gt;.</returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.CreateOrUpdateAdminRole(Beyova.AdminRole)">
            <summary>
            Creates the or update admin role.
            </summary>
            <param name="role">The role.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.BindPermissionOnRole(Beyova.AdminPermissionBinding)">
            <summary>
            Binds the permission on role.
            </summary>
            <param name="binding">The binding.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.UnbindPermissionOnRole(Beyova.AdminPermissionBinding)">
            <summary>
            Unbinds the permission on role.
            </summary>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.DeleteAdminRole(System.Nullable{System.Guid})">
            <summary>
            Deletes the admin role.
            </summary>
            <param name="roleKey">The role key.</param>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.GetRolePermissionBindings(System.Nullable{System.Guid})">
            <summary>
            Gets the role permission bindings.
            </summary>
            <param name="roleKey">The role key.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.GetAdminPermissionByKey(System.Nullable{System.Guid})">
            <summary>
            Gets the admin permission by key.
            </summary>
            <param name="key">The key.</param>
            <returns>AdminPermission.</returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.QueryAdminPermission(Beyova.AdminPermissionCriteria)">
            <summary>
            Queries the admin permission.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;AdminPermission&gt;.</returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.CreateOrUpdateAdminPermission(Beyova.AdminPermission)">
            <summary>
            Creates the or update admin permission.
            </summary>
            <param name="permission">The permission.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationManagementService.DeleteAdminPermission(System.Nullable{System.Guid})">
            <summary>
            Deletes the admin permission.
            </summary>
            <param name="permissionKey">The permission key.</param>
        </member>
        <member name="T:Beyova.Gravity.ICentralAuthenticationProtocol">
            <summary>
            Interface ICentralAuthenticationProtocol
            </summary>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationProtocol.Authenticate(Beyova.AuthenticationRequest)">
            <summary>
            Authenticates the specified request.
            </summary>
            <param name="request">The request.</param>
            <returns>AdminAuthenticationResult.</returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationProtocol.GetUserByToken(System.String)">
            <summary>
            Gets the user by token.
            </summary>
            <param name="token">The token.</param>
            <returns>AdminUserInfoBase.</returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationProtocol.DisposeSession(System.String)">
            <summary>
            Disposes the session.
            </summary>
            <param name="token">The token.</param>
            <returns>System.Nullable&lt;DateTime&gt;.</returns>
        </member>
        <member name="M:Beyova.Gravity.ICentralAuthenticationProtocol.GetSessionList(System.String)">
            <summary>
            Gets the session list.
            </summary>
            <param name="token">The token.</param>
            <returns>List&lt;AdminSession&gt;.</returns>
        </member>
        <member name="T:Beyova.Gravity.SecuredMessageRequest`1">
            <summary>
            Class SecuredMessageRequest.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Beyova.Gravity.SecuredMessageRequest`1.EncryptionKey">
            <summary>
            Gets or sets the encryption key.
            </summary>
            <value>The encryption key.</value>
        </member>
        <member name="P:Beyova.Gravity.SecuredMessageRequest`1.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="T:Beyova.Gravity.SecuredMessagePackage">
            <summary>
            Class SecuredMessagePackage.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.SecuredMessagePackage.Security">
            <summary>
            Gets or sets the public key.
            </summary>
            <value>The public key.</value>
        </member>
        <member name="P:Beyova.Gravity.SecuredMessagePackage.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="M:Beyova.Gravity.SecuredMessagePackage.ToBytes">
            <summary>
            To the bytes.
            </summary>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.Gravity.SecuredMessagePackage.FromBytes(System.Byte[])">
            <summary>
            Froms the bytes.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>Beyova.Gravity.SecuredMessagePackage.</returns>
        </member>
        <member name="T:Beyova.Gravity.GravityEventHook">
            <summary>
            Class GravityEventHook.
            </summary>
        </member>
        <member name="M:Beyova.Gravity.GravityEventHook.OnSecuredMessageProcessedCompleted(System.String,System.Object,Beyova.ExceptionSystem.BaseException)">
            <summary>
            Called when [secured message processed completed].
            </summary>
            <param name="feature">The feature.</param>
            <param name="parameter">The parameter.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Beyova.Gravity.GravityEventHook.OnProcessingCommand(Beyova.Gravity.IGravityCommandInvoker,Beyova.Gravity.GravityCommandRequest)">
            <summary>
            Called when [processing command].
            </summary>
            <param name="invoker">The invoker.</param>
            <param name="command">The command.</param>
        </member>
        <member name="T:Beyova.Gravity.HeartbeatEcho">
            <summary>
            Class HeartbeatEcho.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.HeartbeatEcho.CommandRequests">
            <summary>
            Gets or sets the command requests.
            </summary>
            <value>The command requests.</value>
        </member>
        <member name="P:Beyova.Gravity.HeartbeatEcho.ClientKey">
            <summary>
            Gets or sets the client key.
            </summary>
            <value>The client key.</value>
        </member>
        <member name="T:Beyova.Gravity.ProductCriteria">
            <summary>
            Class ProductCriteria.
            </summary>
        </member>
        <member name="T:Beyova.Gravity.ProductInfo">
            <summary>
            Class ProductInfo.
            </summary>
        </member>
        <member name="T:Beyova.Gravity.ProcessCommandInvoker">
            <summary>
            Class ProcessCommandInvoker.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.ProcessCommandInvoker.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="M:Beyova.Gravity.ProcessCommandInvoker.Invoke(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Invokes this instance.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>JToken.</returns>
        </member>
        <member name="T:Beyova.Gravity.UpdateConfigurationCommandInvoker">
            <summary>
            Class UpdateConfigurationCommandInvoker.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.UpdateConfigurationCommandInvoker.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="M:Beyova.Gravity.UpdateConfigurationCommandInvoker.Invoke(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Invokes this instance.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>JToken.</returns>
        </member>
        <member name="T:Beyova.Gravity.GravityShell">
            <summary>
            Class GravityShell.
            </summary>
        </member>
        <member name="F:Beyova.Gravity.GravityShell._clientKey">
            <summary>
            The _client key
            </summary>
        </member>
        <member name="P:Beyova.Gravity.GravityShell.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>The client.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityShell.Entry">
            <summary>
            Gets or sets the entry.
            </summary>
            <value>The entry.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityShell.CommandInvokers">
            <summary>
            Gets or sets the command invokers.
            </summary>
            <value>The command invokers.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityShell.ConfigurationReader">
            <summary>
            Gets or sets the configuration reader.
            </summary>
            <value>The configuration reader.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityShell.ComponentAttribute">
            <summary>
            Gets or sets the component attribute.
            </summary>
            <value>The component attribute.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityShell.WatcherThread">
            <summary>
            Gets or sets the watcher thread.
            </summary>
            <value>The watcher thread.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityShell.EventHook">
            <summary>
            Gets or sets the event hook.
            </summary>
            <value>The event hook.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityShell.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="M:Beyova.Gravity.GravityShell.#ctor(Beyova.ProgrammingIntelligence.BeyovaComponentAttribute,Beyova.Gravity.GravityEntryObject,System.Collections.Generic.IEnumerable{Beyova.Gravity.IGravityCommandInvoker},Beyova.Gravity.GravityEventHook)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Gravity.GravityShell" /> class.
            </summary>
            <param name="componentAttribute">The component attribute.</param>
            <param name="entry">The entry.</param>
            <param name="commandInvokers">The command invokers.</param>
            <param name="eventHook">The event hook.</param>
        </member>
        <member name="M:Beyova.Gravity.GravityShell.InvokeCommand(Beyova.Gravity.IGravityCommandInvoker,Beyova.Gravity.GravityCommandRequest)">
            <summary>
            Invokes the command.
            </summary>
            <param name="invoker">The invoker.</param>
            <param name="command">The command.</param>
            <returns>GravityCommandResult.</returns>
        </member>
        <member name="M:Beyova.Gravity.GravityShell.ProcessCommands(System.Collections.Generic.List{Beyova.Gravity.GravityCommandRequest})">
            <summary>
            Processes the commands.
            </summary>
            <param name="commands">The commands.</param>
        </member>
        <member name="M:Beyova.Gravity.GravityShell.Watch">
            <summary>
            Watches this instance.
            </summary>
        </member>
        <member name="F:Beyova.Gravity.GravityShell.host">
            <summary>
            The host
            </summary>
        </member>
        <member name="P:Beyova.Gravity.GravityShell.Host">
            <summary>
            Gets the host.
            </summary>
            <value>The host.</value>
        </member>
        <member name="M:Beyova.Gravity.GravityShell.InitializeGravityHost">
            <summary>
            Initializes the gravity host.
            </summary>
            <returns>Beyova.Gravity.GravityHost.</returns>
        </member>
        <member name="T:Beyova.Gravity.GravityConstants">
            <summary>
            Class GravityConstants.
            </summary>
        </member>
        <member name="T:Beyova.Gravity.GravityConstants.BuiltInAction">
            <summary>
            Class BuiltInAction.
            </summary>
        </member>
        <member name="F:Beyova.Gravity.GravityConstants.BuiltInAction.UpdateConfiguration">
            <summary>
            The update configuration
            </summary>
        </member>
        <member name="F:Beyova.Gravity.GravityConstants.BuiltInAction.RunProcess">
            <summary>
            The run process
            </summary>
        </member>
        <member name="F:Beyova.Gravity.GravityConstants.BuiltInAction.Upgrade">
            <summary>
            The upgrade
            </summary>
        </member>
        <member name="F:Beyova.Gravity.GravityConstants.BuiltInAction.SwitchFeature">
            <summary>
            The switch feature
            </summary>
        </member>
        <member name="T:Beyova.Gravity.GravityCommandRequestBase">
            <summary>
            Class GravityCommandRequestBase.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.GravityCommandRequestBase.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityCommandRequestBase.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityCommandRequestBase.ProductKey">
            <summary>
            Gets or sets the product key.
            </summary>
            <value>The product key.</value>
        </member>
        <member name="T:Beyova.Gravity.GravityCommandRequestCriteria">
            <summary>
            Class GravityCommandRequestCriteria.
            </summary>
        </member>
        <member name="T:Beyova.Gravity.GravityCommandRequest">
            <summary>
            Class GravityCommandRequest.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.GravityCommandRequest.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityCommandRequest.ExpiredStamp">
            <summary>
            Gets or sets the expired stamp.
            </summary>
            <value>The expired stamp.</value>
        </member>
        <member name="T:Beyova.Gravity.GravityCommandResultBase">
            <summary>
            Class GravityCommandResultBase.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.GravityCommandResultBase.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityCommandResultBase.RequestKey">
            <summary>
            Gets or sets the request key.
            </summary>
            <value>The request key.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityCommandResultBase.ClientKey">
            <summary>
            Gets or sets the client key.
            </summary>
            <value>The client key.</value>
        </member>
        <member name="T:Beyova.Gravity.GravityCommandResultCriteria">
            <summary>
            Class GravityCommandResultCriteria.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.GravityCommandResultCriteria.ProductKey">
            <summary>
            Gets or sets the product key.
            </summary>
            <value>The product key.</value>
        </member>
        <member name="T:Beyova.Gravity.GravityCommandResult">
            <summary>
            Class GravityCommandResult.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.GravityCommandResult.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="T:Beyova.Gravity.IGravityCommandInvoker">
            <summary>
            Interface IGravityCommandInvoker
            </summary>
        </member>
        <member name="P:Beyova.Gravity.IGravityCommandInvoker.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="M:Beyova.Gravity.IGravityCommandInvoker.Invoke(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Invokes this instance.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>JToken.</returns>
        </member>
        <member name="T:Beyova.Gravity.GravityClient">
            <summary>
            Class GravityClient.
            </summary>
        </member>
        <member name="M:Beyova.Gravity.GravityClient.#ctor(Beyova.Gravity.GravityEntryObject,Beyova.Gravity.GravityEventHook)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Gravity.GravityClient" /> class.
            </summary>
            <param name="entry">The entry.</param>
            <param name="hook">The hook.</param>
        </member>
        <member name="M:Beyova.Gravity.GravityClient.Heartbeat(Beyova.Gravity.Heartbeat)">
            <summary>
            Heartbeats the specified heartbeat.
            </summary>
            <param name="heartbeat">The heartbeat.</param>
        </member>
        <member name="M:Beyova.Gravity.GravityClient.CommitCommandResult(Beyova.Gravity.GravityCommandResult)">
            <summary>
            Commits the command result.
            </summary>
            <param name="result">The result.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.Gravity.GravityClient.RetrieveConfiguration(System.String)">
            <summary>
            Retrieves the configuration.
            </summary>
            <param name="name">The name.</param>
            <returns>RemoteConfigurationObject.</returns>
        </member>
        <member name="M:Beyova.Gravity.GravityClient.Invoke``2(System.String,``0)">
            <summary>
            Invokes the specified feature.
            </summary>
            <typeparam name="TIn">The type of the t in.</typeparam>
            <typeparam name="TOut">The type of the t out.</typeparam>
            <param name="feature">The feature.</param>
            <param name="parameter">The parameter.</param>
            <returns>TOut.</returns>
        </member>
        <member name="T:Beyova.Gravity.GravityCommand">
            <summary>
            Class GravityCommand.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.GravityCommand.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityCommand.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="T:Beyova.Gravity.GravityEntryObject">
            <summary>
            Class GravityEntryObject.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.GravityEntryObject.MemberIdentifiableKey">
            <summary>
            Gets or sets the member identifiable key. (Token)
            </summary>
            <value>The member identifiable key.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityEntryObject.PublicKey">
            <summary>
            Gets or sets the public key.
            </summary>
            <value>The public key.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityEntryObject.GravityServiceUri">
            <summary>
            Gets or sets the gravity service URI. E.g.: https://localhost/gravity/
            </summary>
            <value>The gravity service URI.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityEntryObject.ConfigurationName">
            <summary>
            Gets or sets the name of the configuration.
            </summary>
            <value>The name of the configuration.</value>
        </member>
        <member name="T:Beyova.Gravity.Heartbeat">
            <summary>
            Class Heartbeat.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.Heartbeat.ConfigurationName">
            <summary>
            Gets or sets the name of the configuration.
            </summary>
            <value>The name of the configuration.</value>
        </member>
        <member name="T:Beyova.Gravity.IGravityServiceProtocol">
            <summary>
            Interface IGravityServiceProtocol
            </summary>
        </member>
        <member name="M:Beyova.Gravity.IGravityServiceProtocol.Heartbeat(Beyova.Gravity.Heartbeat)">
            <summary>
            Heartbeats the specified heartbeat.
            </summary>
            <param name="heartbeat">The heartbeat.</param>
            <returns>HeartbeatEcho.</returns>
        </member>
        <member name="M:Beyova.Gravity.IGravityServiceProtocol.RetrieveConfiguration(System.String)">
            <summary>
            Retrieves the configuration.
            </summary>
            <param name="name">The name.</param>
            <returns>RemoteConfigurationObject.</returns>
        </member>
        <member name="M:Beyova.Gravity.IGravityServiceProtocol.CommitCommandResult(Beyova.Gravity.GravityCommandResult)">
            <summary>
            Commits the command result.
            </summary>
            <param name="result">The result.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="T:Beyova.Gravity.GravityProtocolAttribute">
            <summary>
            Class GravityProtocolAttribute.
            </summary>
        </member>
        <member name="P:Beyova.Gravity.GravityProtocolAttribute.Entry">
            <summary>
            Gets or sets the entry.
            </summary>
            <value>The entry.</value>
        </member>
        <member name="P:Beyova.Gravity.GravityProtocolAttribute.IsSealed">
            <summary>
            Gets or sets a value indicating whether this instance is sealed.
            </summary>
            <value><c>true</c> if this instance is sealed; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Beyova.Gravity.GravityProtocolAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Gravity.GravityProtocolAttribute" /> class.
            </summary>
            <param name="configurationPath">The configuration path.</param>
            <param name="isSealed">if set to <c>true</c> [is sealed].</param>
        </member>
        <member name="M:Beyova.Gravity.GravityProtocolAttribute.#ctor(System.Uri,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Gravity.GravityProtocolAttribute" /> class.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="memberIdentifiableKey">The member identifiable key.</param>
            <param name="isSealed">if set to <c>true</c> [is sealed].</param>
        </member>
        <member name="M:Beyova.Gravity.GravityProtocolAttribute.#ctor(Beyova.Gravity.GravityEntryObject,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Gravity.GravityProtocolAttribute"/> class.
            </summary>
            <param name="entryObject">The entry object.</param>
            <param name="isSealed">if set to <c>true</c> [is sealed].</param>
        </member>
        <member name="T:Beyova.Gravity.SecuredMessageObject`1">
            <summary>
            Class SecuredMessageObject.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Beyova.Gravity.SecuredMessageObject`1.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Beyova.Gravity.SecuredMessageObject`1.Stamp">
            <summary>
            Gets or sets the stamp.
            </summary>
            <value>The stamp.</value>
        </member>
        <member name="M:Beyova.Gravity.SecuredMessageObject`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Gravity.SecuredMessageObject`1"/> class.
            </summary>
        </member>
        <member name="M:Beyova.Gravity.SecuredMessageObject`1.ValidateStamp">
            <summary>
            Validates the stamp.
            </summary>
            <returns><c>true</c> if Validation passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Beyova.RemoteConfigurationReceipt">
            <summary>
            Class RemoteConfigurationReceipt.
            </summary>
        </member>
        <member name="P:Beyova.RemoteConfigurationReceipt.Stamp">
            <summary>
            Gets or sets the stamp.
            </summary>
            <value>The stamp.</value>
        </member>
        <member name="P:Beyova.RemoteConfigurationReceipt.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.RemoteConfigurationReceipt.SnapshotKey">
            <summary>
            Gets or sets the snapshot key.
            </summary>
            <value>The snapshot key.</value>
        </member>
        <member name="T:Beyova.IDeepEquality`1">
            <summary>
            Interface IDeepEquality
            </summary>
        </member>
        <member name="M:Beyova.IDeepEquality`1.DeepEquals(`0,`0,System.StringComparison)">
            <summary>
            Deeps the equals.
            </summary>
            <param name="obj1">The obj1.</param>
            <param name="obj2">The obj2.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.IExpirable">
            <summary>
            Interface IExpirable
            </summary>
        </member>
        <member name="P:Beyova.IExpirable.ExpiredStamp">
            <summary>
            Gets or sets the expired stamp.
            </summary>
            <value>
            The expired stamp.
            </value>
        </member>
        <member name="T:Beyova.IAppPlatform">
            <summary>
            Interface IAppPlatform
            </summary>
        </member>
        <member name="P:Beyova.IAppPlatform.PlatformType">
            <summary>
            Gets or sets the type of the platform.
            </summary>
            <value>
            The type of the platform.
            </value>
        </member>
        <member name="P:Beyova.IAppPlatform.MinOSVersion">
            <summary>
            Gets or sets the minimum os version.
            </summary>
            <value>The minimum os version.</value>
        </member>
        <member name="P:Beyova.IAppPlatform.Url">
            <summary>
            Gets or sets the application URL.
            </summary>
            <value>The application URL.</value>
        </member>
        <member name="P:Beyova.IAppPlatform.BundleId">
            <summary>
            Gets or sets the bundle identifier.
            </summary>
            <value>
            The bundle identifier.
            </value>
        </member>
        <member name="P:Beyova.IAppPlatform.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:Beyova.IProjectIdentifier">
            <summary>
            Interface IProjectIdentifier
            </summary>
        </member>
        <member name="P:Beyova.IProjectIdentifier.ProjectKey">
            <summary>
            Gets or sets the project key.
            </summary>
            <value>
            The project key.
            </value>
        </member>
        <member name="T:Beyova.IProductIdentifier">
            <summary>
            Interface IProductIdentifier
            </summary>
        </member>
        <member name="P:Beyova.IProductIdentifier.ProductKey">
            <summary>
            Gets or sets the product key.
            </summary>
            <value>The product key.</value>
        </member>
        <member name="T:Beyova.IThirdPartyIdentifier">
            <summary>
            Interface IThirdPartyIdentifier
            </summary>
        </member>
        <member name="P:Beyova.IThirdPartyIdentifier.ThirdPartyId">
            <summary>
            Gets or sets the third party identifier.
            </summary>
            <value>
            The third party identifier.
            </value>
        </member>
        <member name="T:Beyova.IRoutable">
            <summary>
            Interface IRoutable
            </summary>
        </member>
        <member name="M:Beyova.IRoutable.RegisterControllerToRoute(System.Web.Routing.RouteCollection)">
            <summary>
            Registers the controller to route.
            </summary>
            <param name="routes">The routes.</param>
        </member>
        <member name="T:Beyova.Diagnostic.DebugInfo">
             <summary>
            
             </summary>
        </member>
        <member name="F:Beyova.Diagnostic.DebugInfo.builder">
            <summary>
            The builder
            </summary>
        </member>
        <member name="P:Beyova.Diagnostic.DebugInfo.Messages">
            <summary>
            Gets or sets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:Beyova.Diagnostic.DebugInfo.HttpRequestRaw">
            <summary>
            Gets or sets the HTTP request raw.
            </summary>
            <value>
            The HTTP request raw.
            </value>
        </member>
        <member name="P:Beyova.Diagnostic.DebugInfo.HttpResponseRaw">
            <summary>
            Gets or sets the HTTP response raw.
            </summary>
            <value>
            The HTTP response raw.
            </value>
        </member>
        <member name="M:Beyova.Diagnostic.DebugInfo.WriteLine(System.String,System.Object[])">
            <summary>
            Writes the line.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Beyova.Diagnostic.DebugInfo.WriteHttpResponseRaw(System.Net.WebHeaderCollection,System.String)">
            <summary>
            Writes the HTTP response raw.
            </summary>
            <param name="headers">The headers.</param>
            <param name="body">The body.</param>
        </member>
        <member name="T:Beyova.AccountSecurityUpdateToken">
            <summary>
            Class AccountSecurityUpdateToken.
            </summary>
        </member>
        <member name="P:Beyova.AccountSecurityUpdateToken.AccessIdentifier">
            <summary>
            Gets or sets the access identifier.
            </summary>
            <value>The access identifier.</value>
        </member>
        <member name="P:Beyova.AccountSecurityUpdateToken.Domain">
            <summary>
            Gets or sets the domain.
            </summary>
            <value>The domain.</value>
        </member>
        <member name="P:Beyova.AccountSecurityUpdateToken.SecurityToken">
            <summary>
            Gets or sets the security token.
            </summary>
            <value>The security token.</value>
        </member>
        <member name="P:Beyova.AccountSecurityUpdateToken.UpdateToken">
            <summary>
            Gets or sets the update token.
            </summary>
            <value>The update token.</value>
        </member>
        <member name="P:Beyova.AccountSecurityUpdateToken.ExpiredStamp">
            <summary>
            Gets or sets the expired stamp.
            </summary>
            <value>The expired stamp.</value>
        </member>
        <member name="P:Beyova.AccountSecurityUpdateToken.UserKey">
            <summary>
            Gets or sets the user key.
            </summary>
            <value>The user key.</value>
        </member>
        <member name="T:Beyova.EntityConnection`2">
            <summary>
            Class EntityConnection
            </summary>
        </member>
        <member name="P:Beyova.EntityConnection`2.PrimaryIdentifier">
            <summary>
            Gets or sets the primary identifier.
            </summary>
            <value>The primary identifier.</value>
        </member>
        <member name="P:Beyova.EntityConnection`2.SecondaryIdentifier">
            <summary>
            Gets or sets the secondary identifier.
            </summary>
            <value>The secondary identifier.</value>
        </member>
        <member name="T:Beyova.FractionObject">
            <summary>
            Struct FractionObject
            </summary>
        </member>
        <member name="P:Beyova.FractionObject.Numerator">
            <summary>
            Gets or sets the numerator.
            </summary>
            <value>The numerator.</value>
        </member>
        <member name="P:Beyova.FractionObject.Denominator">
            <summary>
            Gets or sets the denominator.
            </summary>
            <value>The denominator.</value>
        </member>
        <member name="M:Beyova.FractionObject.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.FractionObject"/> class.
            </summary>
            <param name="numerator">The numerator.</param>
            <param name="denominator">The denominator.</param>
        </member>
        <member name="M:Beyova.FractionObject.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.FractionObject.ToString(System.String)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="delimiter">The delimiter.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.FractionObject.ToDouble">
            <summary>
            To the double.
            </summary>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Beyova.FractionObject.ToDecimal">
            <summary>
            To the decimal.
            </summary>
            <returns>Decimal.</returns>
            <exception cref="T:System.DivideByZeroException">Denominator is zero</exception>
        </member>
        <member name="T:Beyova.GeoCoordinate">
            <summary>
            Class GeoCoordinate.
            </summary>
        </member>
        <member name="P:Beyova.GeoCoordinate.Degrees">
            <summary>
            Gets or sets the degrees.
            </summary>
            <value>The degrees.</value>
        </member>
        <member name="P:Beyova.GeoCoordinate.Minutes">
            <summary>
            Gets or sets the minutes.
            </summary>
            <value>The minutes.</value>
        </member>
        <member name="P:Beyova.GeoCoordinate.Seconds">
            <summary>
            Gets or sets the seconds.
            </summary>
            <value>The seconds.</value>
        </member>
        <member name="M:Beyova.GeoCoordinate.ToDecimal">
            <summary>
            To the decimal.
            </summary>
            <returns>System.Decimal.</returns>
        </member>
        <member name="M:Beyova.GeoCoordinate.InternalToString(System.String,System.String,System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="positivePrefix">The positive prefix.</param>
            <param name="negativePrefix">The negative prefix.</param>
            <param name="positiveSuffix">The positive suffix.</param>
            <param name="negativeSuffix">The negative suffix.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.GeoCoordinate.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.GeoCoordinate.FromDecimal(System.Decimal)">
            <summary>
            Froms the decimal.
            </summary>
            <param name="value">The value.</param>
            <returns>GeoCoordinate.</returns>
        </member>
        <member name="M:Beyova.GeoCoordinate.op_Explicit(Beyova.GeoCoordinate)~System.Decimal">
            <summary>
            Performs an explicit conversion from <see cref="T:Beyova.GeoCoordinate"/> to <see cref="T:System.Decimal"/>.
            </summary>
            <param name="coordinate">The coordinate.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Beyova.GeoCoordinate.op_Explicit(Beyova.GeoCoordinate)~System.Double">
            <summary>
            Performs an explicit conversion from <see cref="T:Beyova.GeoCoordinate"/> to <see cref="T:System.Double"/>.
            </summary>
            <param name="coordinate">The coordinate.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Beyova.GeoCoordinate.op_Explicit(System.Decimal)~Beyova.GeoCoordinate">
            <summary>
            Performs an explicit conversion from <see cref="T:System.Decimal"/> to <see cref="T:Beyova.GeoCoordinate"/>.
            </summary>
            <param name="decimalObject">The decimal object.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Beyova.GeoCoordinate.op_Explicit(System.Double)~Beyova.GeoCoordinate">
            <summary>
            Performs an explicit conversion from <see cref="T:System.Double"/> to <see cref="T:Beyova.GeoCoordinate"/>.
            </summary>
            <param name="doubleObject">The double object.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:Beyova.GeoPosition">
            <summary>
            Class GeoPosition.
            </summary>
        </member>
        <member name="P:Beyova.GeoPosition.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <value>The latitude.</value>
        </member>
        <member name="P:Beyova.GeoPosition.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <value>The longitude.</value>
        </member>
        <member name="M:Beyova.GeoPosition.ToDecimalString">
            <summary>
            To the decimal string. {Latitude, Longitude}
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.GeoPosition.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Beyova.AppPlatform">
            <summary>
            Class AppPlatform.
            </summary>
        </member>
        <member name="P:Beyova.AppPlatform.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Beyova.AppPlatform.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="T:Beyova.AppProvisioningCriteria">
            <summary>
            Class AppProvisioningCriteria.
            </summary>
        </member>
        <member name="P:Beyova.AppProvisioningCriteria.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Beyova.AppProvisioningCriteria.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Beyova.AppProvisioningCriteria.PlatformKey">
            <summary>
            Gets or sets the platform key.
            </summary>
            <value>
            The platform key.
            </value>
        </member>
        <member name="P:Beyova.AppProvisioningCriteria.OperatorKey">
            <summary>
            Gets or sets the operator key.
            </summary>
            <value>
            The operator key.
            </value>
        </member>
        <member name="T:Beyova.AppProvisioningBase">
            <summary>
            Class AppProvisioningBase.
            </summary>
        </member>
        <member name="P:Beyova.AppProvisioningBase.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Beyova.AppProvisioningBase.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Beyova.AppProvisioningBase.PlatformKey">
            <summary>
            Gets or sets the platform key.
            </summary>
            <value>
            The platform key.
            </value>
        </member>
        <member name="P:Beyova.AppProvisioningBase.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="T:Beyova.AppVersionCriteria">
            <summary>
            Class AppVersionCriteria.
            </summary>
        </member>
        <member name="P:Beyova.AppVersionCriteria.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.AppVersionCriteria.PlatformKey">
            <summary>
            Gets or sets the platform key.
            </summary>
            <value>
            The platform key.
            </value>
        </member>
        <member name="P:Beyova.AppVersionCriteria.Platform">
            <summary>
            Gets or sets the platform.
            </summary>
            <value>The platform.</value>
        </member>
        <member name="P:Beyova.AppVersionCriteria.OperatorKey">
            <summary>
            Gets or sets the operator key.
            </summary>
            <value>
            The operator key.
            </value>
        </member>
        <member name="T:Beyova.AppVersion">
            <summary>
            Class AppVersion.
            </summary>
        </member>
        <member name="P:Beyova.AppVersion.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:Beyova.AppVersion.BundleId">
            <summary>
            Gets or sets the bundle identifier.
            </summary>
            <value>
            The bundle identifier.
            </value>
        </member>
        <member name="P:Beyova.AppVersion.PlatformType">
            <summary>
            Gets or sets the type of the platform.
            </summary>
            <value>
            The type of the platform.
            </value>
        </member>
        <member name="P:Beyova.AppVersion.MinOSVersion">
            <summary>
            Gets or sets the minimum os version.
            </summary>
            <value>
            The minimum os version.
            </value>
        </member>
        <member name="P:Beyova.AppVersion.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:Beyova.RegionalServiceEndpoint`1">
            <summary>
            Class RegionalServiceEndpoint.
            </summary>
            <typeparam name="TRegion">The type of the t region.</typeparam>
        </member>
        <member name="P:Beyova.RegionalServiceEndpoint`1.Region">
            <summary>
            Gets or sets the region.
            </summary>
            <value>The region.</value>
        </member>
        <member name="T:Beyova.RegionalServiceEndpoint">
            <summary>
            Class RegionalServiceEndpoint.
            </summary>
        </member>
        <member name="T:Beyova.ThirdPartyAccountBindRequest`1">
            <summary>
            Class ThirdPartyAccountBindRequest.
            </summary>
            <typeparam name="TFunctionalRole">The type of the functional role.</typeparam>
        </member>
        <member name="P:Beyova.ThirdPartyAccountBindRequest`1.SourceAccessCredential">
            <summary>
            Gets or sets the source access credential.
            </summary>
            <value>The source access credential.</value>
        </member>
        <member name="P:Beyova.ThirdPartyAccountBindRequest`1.ThirdPartyAccessCredential">
            <summary>
            Gets or sets the third party access credential.
            </summary>
            <value>The third party access credential.</value>
        </member>
        <member name="P:Beyova.ThirdPartyAccountBindRequest`1.ThirdPartyTokenExpiredStamp">
            <summary>
            Gets or sets the third party token expired stamp.
            </summary>
            <value>The third party token expired stamp.</value>
        </member>
        <member name="P:Beyova.ThirdPartyAccountBindRequest`1.FunctionalRole">
            <summary>
            Gets or sets the functional role.
            </summary>
            <value>The functional role.</value>
        </member>
        <member name="T:Beyova.ConfigurationRawItem">
            <summary>
            Class ConfigurationRawItem
            </summary>
        </member>
        <member name="P:Beyova.ConfigurationRawItem.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Beyova.ConfigurationRawItem.Encrypted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Beyova.ConfigurationRawItem"/> is encrypted.
            </summary>
            <value><c>null</c> if [encrypted] contains no value, <c>true</c> if [encrypted]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.ConfigurationRawItem.MinComponentVersionRequire">
            <summary>
            Gets or sets the minimum component version require.
            </summary>
            <value>The minimum component version require.</value>
        </member>
        <member name="P:Beyova.ConfigurationRawItem.MaxComponentVersionLimited">
            <summary>
            Gets or sets the maximum component version limited.
            </summary>
            <value>The maximum component version limited.</value>
        </member>
        <member name="P:Beyova.ConfigurationRawItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Beyova.ConfigurationDetail">
            <summary>
            Class ConfigurationDetail.
            </summary>
        </member>
        <member name="P:Beyova.ConfigurationDetail.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.ConfigurationDetail.Environment">
            <summary>
            Gets or sets the environment.
            </summary>
            <value>The environment.</value>
        </member>
        <member name="P:Beyova.ConfigurationDetail.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Beyova.ConfigurationDetail.Configurations">
            <summary>
            Gets or sets the configurations.
            </summary>
            <value>The configurations.</value>
        </member>
        <member name="T:Beyova.ProcessCommandParameterBase">
            <summary>
            Class ProcessCommandParameterBase.
            </summary>
        </member>
        <member name="P:Beyova.ProcessCommandParameterBase.CommandPath">
            <summary>
            Gets or sets the command path.
            </summary>
            <value>The command path.</value>
        </member>
        <member name="P:Beyova.ProcessCommandParameterBase.CommandArguments">
            <summary>
            Gets or sets the command arguments.
            </summary>
            <value>The command arguments.</value>
        </member>
        <member name="M:Beyova.ProcessCommandParameterBase.FillProcessStartInfo(System.Diagnostics.ProcessStartInfo)">
            <summary>
            Fills the process start information.
            </summary>
            <param name="processStartInfo">The process start information.</param>
        </member>
        <member name="T:Beyova.AuthenticationResult`2">
            <summary>
            Interface IUserInfo
            </summary>
        </member>
        <member name="P:Beyova.AuthenticationResult`2.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.AuthenticationResult`2.TokenExpiredStamp">
            <summary>
            Gets or sets the token expired stamp.
            </summary>
            <value>The token expired stamp.</value>
        </member>
        <member name="P:Beyova.AuthenticationResult`2.UserInfo">
            <summary>
            Gets or sets the user information.
            </summary>
            <value>The user information.</value>
        </member>
        <member name="T:Beyova.AuthenticationResult`1">
            <summary>
            Interface IAuthenticationResult
            </summary>
            <typeparam name="TUserInfo">The type of the t user information.</typeparam>
        </member>
        <member name="P:Beyova.AuthenticationResult`1.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.AuthenticationResult`1.TokenExpiredStamp">
            <summary>
            Gets or sets the token expired stamp.
            </summary>
            <value>The token expired stamp.</value>
        </member>
        <member name="P:Beyova.AuthenticationResult`1.UserInfo">
            <summary>
            Gets or sets the user information.
            </summary>
            <value>The user information.</value>
        </member>
        <member name="T:Beyova.UserInfo`1">
            <summary>
            Interface IUserInfo
            </summary>
            <typeparam name="TFunctionalRole">The type of the t functional role.</typeparam>
        </member>
        <member name="P:Beyova.UserInfo`1.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>The email.</value>
        </member>
        <member name="P:Beyova.UserInfo`1.Cellphone">
            <summary>
            Gets or sets the cellphone.
            </summary>
            <value>
            The cellphone.
            </value>
        </member>
        <member name="P:Beyova.UserInfo`1.AvatarKey">
            <summary>
            Gets or sets the avatar key.
            </summary>
            <value>The avatar key.</value>
        </member>
        <member name="P:Beyova.UserInfo`1.AvatarUrl">
            <summary>
            Gets or sets the avatar URL.
            </summary>
            <value>The avatar URL.</value>
        </member>
        <member name="P:Beyova.UserInfo`1.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>The language.</value>
        </member>
        <member name="P:Beyova.UserInfo`1.TimeZone">
            <summary>
            Gets or sets the time zone. Unit: minute
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="P:Beyova.UserInfo`1.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.UserInfo`1.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.UserInfo`1.Permissions">
            <summary>
            Gets or sets the permissions.
            </summary>
            <value>The permissions.</value>
        </member>
        <member name="P:Beyova.UserInfo`1.FunctionalRole">
            <summary>
            Gets or sets the functional role.
            </summary>
            <value>The functional role.</value>
        </member>
        <member name="P:Beyova.UserInfo`1.Gender">
            <summary>
            Gets or sets the gender.
            </summary>
            <value>The gender.</value>
        </member>
        <member name="T:Beyova.WindowsProcessCommandParameter">
            <summary>
            Class WindowsProcessCommandParameter.
            </summary>
        </member>
        <member name="P:Beyova.WindowsProcessCommandParameter.OutputDelegate">
            <summary>
            Gets or sets the output delegate.
            </summary>
            <value>The output delegate.</value>
        </member>
        <member name="T:Beyova.GravityEntryFile">
            <summary>
            Class GravityEntryFile.
            </summary>
        </member>
        <member name="P:Beyova.GravityEntryFile.IssuedStamp">
            <summary>
            Gets or sets the issued stamp.
            </summary>
            <value>The issued stamp.</value>
        </member>
        <member name="P:Beyova.GravityEntryFile.IssuedTo">
            <summary>
            Gets or sets the issued to.
            </summary>
            <value>The issued to.</value>
        </member>
        <member name="M:Beyova.GravityEntryFile.Load(System.String,System.Boolean)">
            <summary>
            Loads the specified path.
            </summary>
            <param name="path">The path. If path is null or empty, use {application base directory}/gravity.gef as default.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns>BeyovaLicenseFile.</returns>
        </member>
        <member name="T:Beyova.BooleanSearch.IBooleanComputable">
            <summary>
            Interface IBooleanComputable
            </summary>
        </member>
        <member name="M:Beyova.BooleanSearch.IBooleanComputable.Compute(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Computes the specified json.
            </summary>
            <param name="json">The json.</param>
            <returns><c>true</c> if compute as true, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Beyova.BooleanSearch.ICriteriaOperatorComputable">
            <summary>
            Interface ICriteriaOperatorComputable
            </summary>
        </member>
        <member name="M:Beyova.BooleanSearch.ICriteriaOperatorComputable.Validate">
            <summary>
            Validates this instance.
            </summary>
            <returns><c>true</c> if validation passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Beyova.BooleanSearch.IRelationshipOperatorComputable">
            <summary>
            Interface IRelationshipOperatorComputable
            </summary>
        </member>
        <member name="T:Beyova.BooleanSearch.BooleanSearchExpressionReader">
            <summary>
            Class BooleanSearchExpressionReader.
            </summary>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchExpressionReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BooleanSearch.BooleanSearchExpressionReader"/> class.
            </summary>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchExpressionReader.ReadAsObject(System.String)">
            <summary>
            Reads as object.
            </summary>
            <param name="expressionString">The expression string.</param>
            <returns>IBooleanComputable.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchExpressionReader.ExpectExpression(System.String,System.Int32@,System.Int32@)">
            <summary>
            Expects the expression.
            </summary>
            <param name="input">The input.</param>
            <param name="parenthesesDepth">The parentheses depth.</param>
            <param name="position">The position.</param>
            <returns>IBooleanComputable.</returns>
            <exception cref="T:Beyova.ExceptionSystem.InvalidExpressiontException">
            </exception>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchExpressionReader.ExpectPureKeyValueExpression(System.String,System.Int32@,System.Int32@)">
            <summary>
            Expects the pure key value expression.
            </summary>
            <param name="input">The input.</param>
            <param name="parenthesesDepth">The parentheses depth.</param>
            <param name="position">The position.</param>
            <returns>CriteriaOperatorComputable.</returns>
            <exception cref="T:Beyova.ExceptionSystem.InvalidExpressiontException"></exception>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchExpressionReader.ExpectRelationshipOperator(System.String,System.Int32@,System.Int32@)">
            <summary>
            Expects the relationship operator.
            </summary>
            <param name="input">The input.</param>
            <param name="parenthesesDepth">The parentheses depth.</param>
            <param name="position">The position.</param>
            <returns>RelationshipOperator.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchExpressionReader.ExpectComputeOperator(System.String,System.Int32@)">
            <summary>
            Expects the compute operator.
            </summary>
            <param name="input">The input.</param>
            <param name="position">The position.</param>
            <returns>System.Nullable&lt;ComputeOperator&gt;.</returns>
            <exception cref="T:Beyova.ExceptionSystem.InvalidExpressiontException"></exception>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchExpressionReader.IsComputeOperator(System.String,Beyova.BooleanSearch.ComputeOperator@)">
            <summary>
            Determines whether [is compute operator] [the specified input].
            </summary>
            <param name="input">The input.</param>
            <param name="computeOperator">The compute operator.</param>
            <returns><c>true</c> if [is compute operator] [the specified input]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchExpressionReader.IsRelationshipOperator(System.String,Beyova.BooleanSearch.RelationshipOperator@)">
            <summary>
            Determines whether [is relationship operator] [the specified input].
            </summary>
            <param name="input">The input.</param>
            <param name="relationshipOperator">The relationship operator.</param>
            <returns><c>true</c> if [is relationship operator] [the specified input]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchExpressionReader.TrimStartSpaces(System.String,System.Int32@)">
            <summary>
            Trims the start spaces.
            </summary>
            <param name="input">The input.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchExpressionReader.GetNextValidSection(System.String,System.Int32@,System.Boolean,System.Char[])">
            <summary>
            Gets the next valid section.
            </summary>
            <param name="input">The input.</param>
            <param name="position">The position.</param>
            <param name="allowQuote">if set to <c>true</c> [allow quote].</param>
            <param name="interruptChars">The interrupt chars.</param>
            <returns>System.String.</returns>
            <exception cref="T:Beyova.ExceptionSystem.InvalidExpressiontException">
            operator
            or
            </exception>
        </member>
        <member name="T:Beyova.BooleanSearch.ComputeOperator">
            <summary>
            Enum ComputeOperator
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.ComputeOperator.Equals">
            <summary>
            Value indicating it is equals
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.ComputeOperator.NotEquals">
            <summary>
            Value indicating it is not equals
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.ComputeOperator.GreatThanOrEquals">
            <summary>
            Value indicating it is great than or equals
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.ComputeOperator.LessThanOrEquals">
            <summary>
            Value indicating it is less than or equals
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.ComputeOperator.GreatThan">
            <summary>
            Value indicating it is great than
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.ComputeOperator.LessThan">
            <summary>
            Value indicating it is less than
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.ComputeOperator.StartWith">
            <summary>
            Value indicating it is start with
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.ComputeOperator.EndWith">
            <summary>
            Value indicating it is end with
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.ComputeOperator.Contains">
            <summary>
            Value indicating it is contains
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.ComputeOperator.NotContains">
            <summary>
            Value indicating it is contains
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.ComputeOperator.Exists">
            <summary>
            Value indicating it is exists
            </summary>
        </member>
        <member name="T:Beyova.BooleanSearch.CriteriaOperatorComputable">
            <summary>
            Class CriteriaOperatorComputable.
            </summary>
        </member>
        <member name="P:Beyova.BooleanSearch.CriteriaOperatorComputable.Item1">
            <summary>
            Gets or sets the item1.
            </summary>
            <value>
            The item1.
            </value>
        </member>
        <member name="P:Beyova.BooleanSearch.CriteriaOperatorComputable.Item2">
            <summary>
            Gets or sets the item2.
            </summary>
            <value>
            The item2.
            </value>
        </member>
        <member name="P:Beyova.BooleanSearch.CriteriaOperatorComputable.Operator">
            <summary>
            Gets or sets the operator.
            </summary>
            <value>
            The operator.
            </value>
        </member>
        <member name="M:Beyova.BooleanSearch.CriteriaOperatorComputable.Compute(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Computes the specified json.
            </summary>
            <param name="json">The json.</param>
            <returns><c>true</c> if compute as true, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.CriteriaOperatorComputable.Validate">
            <summary>
            Validates this instance.
            </summary>
            <returns><c>true</c> if validation passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.CriteriaOperatorComputable.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Beyova.BooleanSearch.RelationshipOperatorComputable">
            <summary>
            Class RelationshipOperatorComputable.
            </summary>
            <seealso cref="T:Beyova.BooleanSearch.IRelationshipOperatorComputable" />
        </member>
        <member name="P:Beyova.BooleanSearch.RelationshipOperatorComputable.Item1">
            <summary>
            Gets or sets the item1.
            </summary>
            <value>
            The item1.
            </value>
        </member>
        <member name="P:Beyova.BooleanSearch.RelationshipOperatorComputable.Item2">
            <summary>
            Gets or sets the item2.
            </summary>
            <value>
            The item2.
            </value>
        </member>
        <member name="P:Beyova.BooleanSearch.RelationshipOperatorComputable.Operator">
            <summary>
            Gets or sets the operator.
            </summary>
            <value>
            The operator.
            </value>
        </member>
        <member name="M:Beyova.BooleanSearch.RelationshipOperatorComputable.Compute(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Computes the specified json.
            </summary>
            <param name="json">The json.</param>
            <returns><c>true</c> if compute as true, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.RelationshipOperatorComputable.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.RelationshipOperatorComputable.Parse(System.String)">
            <summary>
            Parses the specified expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns>IBooleanComputable.</returns>
        </member>
        <member name="T:Beyova.BooleanSearch.RelationshipOperator">
            <summary>
            Enum RelationshipOperator
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.RelationshipOperator.And">
            <summary>
            Value indicating it is and
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.RelationshipOperator.Or">
            <summary>
            Value indicating it is or
            </summary>
        </member>
        <member name="T:Beyova.BooleanSearch.BooleanSearchCore">
            <summary>
            Class BooleanSearchCore.
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.BooleanSearchCore.criteriaKeyRegex">
            <summary>
            The criteria key regex
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.BooleanSearchCore.computeOperatorStrings">
            <summary>
            The compute operator strings.
            </summary>
        </member>
        <member name="F:Beyova.BooleanSearch.BooleanSearchCore.expressionFormat">
            <summary>
            The expression format
            </summary>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchCore.IsKeyValid(Beyova.BooleanSearch.ICriteriaOperatorComputable)">
            <summary>
            Determines whether [is key valid].
            </summary>
            <param name="operatorComputable">The operator computable.</param>
            <returns>
              <c>true</c> if [is key valid] [the specified operator computable]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchCore.BooleanCompute(Beyova.BooleanSearch.ICriteriaOperatorComputable,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Booleans the compute.
            </summary>
            <param name="criteriaOperatorComputable">The criteria operator computable.</param>
            <param name="json">The json.</param>
            <returns><c>true</c> if compute as true, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchCore.ComputeAsString(System.String,System.String,Beyova.BooleanSearch.ComputeOperator)">
            <summary>
            Computes as string.
            </summary>
            <param name="item1">The item1.</param>
            <param name="item2">The item2.</param>
            <param name="computeOperator">The compute operator.</param>
            <returns><c>true</c> if compute as true, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchCore.ComputeAsBoolean(System.Boolean,System.Boolean,Beyova.BooleanSearch.ComputeOperator)">
            <summary>
            Computes as boolean.
            </summary>
            <param name="item1">if set to <c>true</c> [item1].</param>
            <param name="item2">if set to <c>true</c> [item2].</param>
            <param name="computeOperator">The compute operator.</param>
            <returns><c>true</c> if compute as true, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchCore.ComputeAsArray(Newtonsoft.Json.Linq.JArray,System.String,Beyova.BooleanSearch.ComputeOperator)">
            <summary>
            Computes as array.
            </summary>
            <param name="item1">The item1.</param>
            <param name="item2">The item2.</param>
            <param name="computeOperator">The compute operator.</param>
            <returns><c>true</c> if compute as true, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchCore.ComputeAsObject(Newtonsoft.Json.Linq.JObject,System.String,Beyova.BooleanSearch.ComputeOperator)">
            <summary>
            Computes as object.
            </summary>
            <param name="item1">The item1.</param>
            <param name="item2">The item2.</param>
            <param name="computeOperator">The compute operator.</param>
            <returns><c>true</c> if compute as true, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchCore.Compute``1(``0,``0,Beyova.BooleanSearch.ComputeOperator)">
            <summary>
            Computes the specified item1.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item1">The item1.</param>
            <param name="item2">The item2.</param>
            <param name="computeOperator">The compute operator.</param>
            <returns><c>true</c> if compute as true, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchCore.BooleanCompute(Beyova.BooleanSearch.IRelationshipOperatorComputable,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Booleans the compute.
            </summary>
            <param name="operatorComputable">The operator computable.</param>
            <param name="json">The json.</param>
            <returns><c>true</c> if compute as true, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchCore.ToExpressionString(Beyova.BooleanSearch.ComputeOperator)">
            <summary>
            To the expression string.
            </summary>
            <param name="computeOperator">The compute operator.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchCore.ToComputeOperator(System.String)">
            <summary>
            To the compute operator.
            </summary>
            <param name="computeOperatorString">The compute operator string.</param>
            <returns>ComputeOperator.</returns>
        </member>
        <member name="M:Beyova.BooleanSearch.BooleanSearchCore.StringFieldToExpressionString(System.String)">
            <summary>
            Strings the field to expression string.
            </summary>
            <param name="stringField">The string field.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Beyova.IOwnerIdentifiable">
            <summary>
            Interface IOwnerIdentifiable
            </summary>
        </member>
        <member name="P:Beyova.IOwnerIdentifiable.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>The owner key.</value>
        </member>
        <member name="T:Beyova.IRsaKeys">
            <summary>
            Interface IRsaKeys
            </summary>
        </member>
        <member name="P:Beyova.IRsaKeys.PublicKey">
            <summary>
            Gets or sets the public key.
            </summary>
            <value>The public key.</value>
        </member>
        <member name="P:Beyova.IRsaKeys.PrivateKey">
            <summary>
            Gets or sets the private key.
            </summary>
            <value>The private key.</value>
        </member>
        <member name="T:Beyova.IMachineHealth">
            <summary>
            Interface IMachineHealth
            </summary>
        </member>
        <member name="P:Beyova.IMachineHealth.ServerName">
            <summary>
            Gets or sets the name of the server.
            </summary>
            <value>The name of the server.</value>
        </member>
        <member name="P:Beyova.IMachineHealth.HostName">
            <summary>
            Gets or sets the name of the host.
            </summary>
            <value>The name of the host.</value>
        </member>
        <member name="P:Beyova.IMachineHealth.CpuUsage">
            <summary>
            Gets or sets the cpu usage.
            </summary>
            <value>The cpu usage.</value>
        </member>
        <member name="P:Beyova.IMachineHealth.MemoryUsage">
            <summary>
            Gets or sets the memory usage.
            </summary>
            <value>The memory usage.</value>
        </member>
        <member name="P:Beyova.IMachineHealth.IpAddress">
            <summary>
            Gets or sets the ip address.
            </summary>
            <value>The ip address.</value>
        </member>
        <member name="P:Beyova.IMachineHealth.TotalMemory">
            <summary>
            Gets or sets the total memory.
            </summary>
            <value>The total memory.</value>
        </member>
        <member name="T:Beyova.IExpression`3">
             <summary>
            
             </summary>
             <typeparam name="TItem1">The type of the item.</typeparam>
             <typeparam name="TItem2">The type of the item2.</typeparam>
             <typeparam name="TOperator">The type of the operator.</typeparam>
        </member>
        <member name="P:Beyova.IExpression`3.Item1">
            <summary>
            Gets or sets the item1.
            </summary>
            <value>
            The item1.
            </value>
        </member>
        <member name="P:Beyova.IExpression`3.Item2">
            <summary>
            Gets or sets the item2.
            </summary>
            <value>
            The item2.
            </value>
        </member>
        <member name="P:Beyova.IExpression`3.Operator">
            <summary>
            Gets or sets the operator.
            </summary>
            <value>
            The operator.
            </value>
        </member>
        <member name="T:Beyova.BaseDataAccessController`1">
            <summary>
            Abstract class for SQL data access controller, which refers an entity in {T} type.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Permission">
            <summary>
            The column_ permission
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_UserName">
            <summary>
            The column_ user name
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Gender">
            <summary>
            The column_ gender
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_AvatarUrl">
            <summary>
            The column_ avatar URL
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Container">
            <summary>
            The column_ container
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_State">
            <summary>
            The column_ state
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Key">
            <summary>
            The column_ key
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_UserKey">
            <summary>
            The column_ user key
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_OwnerKey">
            <summary>
            The column_ owner key
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_OperatorKey">
            <summary>
            The column_ operator key
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_CreatedStamp">
            <summary>
            The column_ created stamp
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_LastUpdatedStamp">
            <summary>
            The column_ last updated stamp
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Count">
            <summary>
            The column_ count
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_DataCursor">
            <summary>
            The column_ data cursor
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Identifier">
            <summary>
            The column_ identifier
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_CultureCode">
            <summary>
            The column_ culture code
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Hash">
            <summary>
            The column_ hash
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_FromStamp">
            <summary>
            The column_ from stamp
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_ToStamp">
            <summary>
            The column_ to stamp
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Type">
            <summary>
            The column_ type
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Code">
            <summary>
            The column_ code
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_OrderDescending">
            <summary>
            The column_ order descending
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_TimeForwarding">
            <summary>
            The column_ time forwarding
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Xml">
            <summary>
            The column_ XML
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_CreatedBy">
            <summary>
            The column_ created by
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_LastUpdatedBy">
            <summary>
            The column_ last updated by
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Name">
            <summary>
            The column_ name
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Token">
            <summary>
            The column_ token
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_IpAddress">
            <summary>
            The column_ ip address
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_UserAgent">
            <summary>
            The column_ user agent
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Email">
            <summary>
            The column_ email
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Domain">
            <summary>
            The column_ domain
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Description">
            <summary>
            The column_ description
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_StartIndex">
            <summary>
            The column_ start index
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_ExpiredStamp">
            <summary>
            The column_ expired stamp
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Platform">
            <summary>
            The column_ platform
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_PlatformType">
            <summary>
            The column platform type
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_DeviceType">
            <summary>
            The column_ device type
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Expiration">
            <summary>
            The column_ expiration
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_TimeZone">
            <summary>
            The column_ time zone
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Language">
            <summary>
            The column_ language
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_TokenExpiredStamp">
            <summary>
            The column_ token expired stamp
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_AccessIdentifier">
            <summary>
            The column_ access identifier
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_FunctionalRole">
            <summary>
            The column_ functional role
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_ThirdPartyId">
            <summary>
            The column_ third party identifier
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_ParentKey">
            <summary>
            The column_ parent key
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_AvatarKey">
            <summary>
            The column_ avatar key
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_IsExpired">
            <summary>
            The column_ is expired
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Sequence">
            <summary>
            The column_ sequence
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Stamp">
            <summary>
            The column_ stamp
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Content">
            <summary>
            The column_ content
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_ContentType">
            <summary>
            The column_ content type
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Tags">
            <summary>
            The column_ tags
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_PublicKey">
            <summary>
            The column_ public key
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_PrivateKey">
            <summary>
            The column_ private key
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_SnapshotKey">
            <summary>
            The column_ snapshot key
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_ProductKey">
            <summary>
            The column_ product key
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_PlatformKey">
            <summary>
            The column platform key
            </summary>
        </member>
        <member name="F:Beyova.BaseDataAccessController`1.column_Url">
            <summary>
            The column URL
            </summary>
        </member>
        <member name="M:Beyova.BaseDataAccessController`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BaseDataAccessController`1"/> class.
            </summary>
        </member>
        <member name="M:Beyova.BaseDataAccessController`1.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BaseDataAccessController`1" /> class.
            </summary>
            <param name="primarySqlConnectionString">The primary SQL connection string.</param>
            <param name="readOnlySqlConnectionString">The read only SQL connection string.</param>
        </member>
        <member name="M:Beyova.BaseDataAccessController`1.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SqlDataAccessController`1" /> class.
            </summary>
            <param name="primarySqlConnection">The SQL connection.</param>
            <param name="readOnlySqlConnection">The read only SQL connection.</param>
        </member>
        <member name="M:Beyova.BaseDataAccessController`1.FillBaseObjectFields(Beyova.IBaseObject,System.Data.SqlClient.SqlDataReader,System.Boolean)">
            <summary>
            Fills the base object fields.
            </summary>
            <param name="baseObj">The base obj.</param>
            <param name="sqlDataReader">The SQL data reader.</param>
            <param name="ignoreOperator">if set to <c>true</c> [ignore operator].</param>
        </member>
        <member name="M:Beyova.BaseDataAccessController`1.FillSimpleBaseObjectFields(Beyova.ISimpleBaseObject,System.Data.SqlClient.SqlDataReader)">
            <summary>
            Fills the base simple object fields.
            </summary>
            <param name="baseObj">The base object.</param>
            <param name="sqlDataReader">The SQL data reader.</param>
        </member>
        <member name="M:Beyova.BaseDataAccessController`1.ExecuteReaderAsBaseObject(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter},System.Boolean,System.Boolean)">
            <summary>
            Executes the reader as base object.
            </summary>
            <param name="spName">Name of the sp.</param>
            <param name="sqlParameters">The SQL parameters.</param>
            <param name="preferReadOnlyOperator">if set to <c>true</c> [prefer read only operator].</param>
            <param name="ignoreOperator">if set to <c>true</c> [ignore operator].</param>
            <returns>List&lt;BaseObject&lt;T&gt;&gt;.</returns>
        </member>
        <member name="M:Beyova.BaseDataAccessController`1.ExecuteReaderAsSimpleBaseObject(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter},System.Boolean)">
            <summary>
            Executes the reader as simple base object.
            </summary>
            <param name="spName">Name of the sp.</param>
            <param name="sqlParameters">The SQL parameters.</param>
            <param name="preferReadOnlyOperator">if set to <c>true</c> [prefer read only operator].</param>
            <returns>List&lt;SimpleBaseObject&lt;T&gt;&gt;.</returns>
        </member>
        <member name="T:Beyova.DatabaseOperator">
            <summary>
            Class for database operator.
            </summary>
        </member>
        <member name="F:Beyova.DatabaseOperator.timeoutMillSeconds">
            <summary>
            The timeout mill seconds
            </summary>
        </member>
        <member name="F:Beyova.DatabaseOperator.sqlConnection">
            <summary>
            The SQL connection
            </summary>
        </member>
        <member name="F:Beyova.DatabaseOperator.sqlCommand">
            <summary>
            The SQL command
            </summary>
        </member>
        <member name="M:Beyova.DatabaseOperator.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="databaseConnectionString">The database connection string.</param>
        </member>
        <member name="M:Beyova.DatabaseOperator.#ctor(System.Data.SqlClient.SqlConnection)">
            <summary>
            Constructor.
            </summary>
            <param name="sqlConnection">The database connection string.</param>
        </member>
        <member name="M:Beyova.DatabaseOperator.BeginTransaction(System.Data.IsolationLevel,System.String)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="iso">The iso.</param>
            <param name="transactionName">Name of the transaction.</param>
            <returns>
            SqlTransactionScope.
            </returns>
        </member>
        <member name="M:Beyova.DatabaseOperator.Commit">
            <summary>
            Commits this instance.
            </summary>
        </member>
        <member name="M:Beyova.DatabaseOperator.Rollback">
            <summary>
            Rollbacks this instance.
            </summary>
        </member>
        <member name="M:Beyova.DatabaseOperator.GetOutputParameter(System.String)">
            <summary>
            Gets the output parameter.
            </summary>
            <param name="name">The name.</param>
            <returns>SqlParameter.</returns>
        </member>
        <member name="M:Beyova.DatabaseOperator.ExecuteReader(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})">
            <summary>
            Execute reader.
            </summary>
            <param name="procedureName">The procedure name.</param>
            <param name="sqlParameters">The sql parameters.</param>
            <returns>The SqlDataReader contains data.</returns>
        </member>
        <member name="M:Beyova.DatabaseOperator.ExecuteScalar(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})">
            <summary>
            Execute scalar
            </summary>
            <param name="procedureName">The procedure name.</param>
            <param name="sqlParameters">The sql parameters.</param>
            <returns>The first column in first row of result data.</returns>
        </member>
        <member name="M:Beyova.DatabaseOperator.ExecuteNonQuery(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})">
            <summary>
            Execute none query.
            </summary>
            <param name="procedureName">The procedure name.</param>
            <param name="sqlParameters">The sql parameters.</param>
            <returns>The count of row influenced.</returns>
        </member>
        <member name="M:Beyova.DatabaseOperator.ExecuteSqlTextNonQuery(System.String)">
            <summary>
            Executes the SQL text.
            </summary>
            <param name="sqlText">The SQL text.</param>
            <returns>System.Int32.</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Beyova.DatabaseOperator.ExecuteSqlTextScalar(System.String)">
            <summary>
            Executes the SQL text scalar.
            </summary>
            <param name="sqlText">The SQL text.</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Beyova.DatabaseOperator.ExecuteDataTable(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes the data table.
            </summary>
            <param name="procedureName">Name of the procedure.</param>
            <param name="sqlParameters">The SQL parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.DatabaseOperator.ExecuteDataTable(System.String,System.Data.DataTable,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes the data table.
            </summary>
            <param name="procedureName">Name of the procedure.</param>
            <param name="dataTableContainer">The data table container.</param>
            <param name="sqlParameters">The SQL parameters.</param>
            <exception cref="T:System.NullReferenceException">dataTableContainer</exception>
        </member>
        <member name="M:Beyova.DatabaseOperator.ExecuteDataSet(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes the data set.
            </summary>
            <param name="procedureName">Name of the procedure.</param>
            <param name="sqlParameters">The SQL parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.DatabaseOperator.ExecuteDataSet(System.String,System.Data.DataSet,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes the data set.
            </summary>
            <param name="procedureName">Name of the procedure.</param>
            <param name="dataSetContainer">The data set container.</param>
            <param name="sqlParameters">The SQL parameters.</param>
            <exception cref="T:System.NullReferenceException">dataSetContainer</exception>
        </member>
        <member name="M:Beyova.DatabaseOperator.AboutSqlServer(System.String)">
            <summary>
            Abouts the SQL server.
            </summary>
            <param name="sqlConnection">The SQL connection.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.DatabaseOperator.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Beyova.DatabaseOperator.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="T:Beyova.SqlDataAccessController`1">
            <summary>
            Abstract class for SQL data access controller, which refers an entity in {T} type.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Beyova.SqlDataAccessController`1.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SqlDataAccessController`1" /> class.
            </summary>
            <param name="primarySqlConnectionString">The primary SQL connection string.</param>
            <param name="readOnlySqlConnectionString">The read only SQL connection string.</param>
        </member>
        <member name="M:Beyova.SqlDataAccessController`1.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SqlDataAccessController`1" /> class.
            </summary>
            <param name="primarySqlConnection">The SQL connection.</param>
            <param name="readOnlySqlConnection">The read only SQL connection.</param>
        </member>
        <member name="M:Beyova.SqlDataAccessController`1.ConvertObject``1(System.Data.SqlClient.SqlDataReader,System.Func{System.Data.SqlClient.SqlDataReader,``0})">
            <summary>
            Converts the object.
            </summary>
            <typeparam name="TOutput">The type of the t output.</typeparam>
            <param name="sqlDataReader">The SQL data reader.</param>
            <param name="converter">The converter.</param>
            <returns>List{`0}.</returns>
        </member>
        <member name="M:Beyova.SqlDataAccessController`1.ConvertEntityObject(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Converts the entity object.
            </summary>
            <param name="sqlDataReader">The SQL data reader.</param>
            <returns>Object instance in type {`0}.</returns>
        </member>
        <member name="M:Beyova.SqlDataAccessController`1.ExecuteReader``1(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter},System.Func{System.Data.SqlClient.SqlDataReader,``0},System.Boolean)">
            <summary>
            Executes the reader.
            </summary>
            <typeparam name="TOutput">The type of the t output.</typeparam>
            <param name="spName">Name of the sp.</param>
            <param name="sqlParameters">The SQL parameters.</param>
            <param name="converter">The converter.</param>
            <param name="preferReadOnlyOperator">The prefer read only operator.</param>
            <returns>List&lt;TOutput&gt;.</returns>
        </member>
        <member name="M:Beyova.SqlDataAccessController`1.ExecuteReader(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter},System.Boolean)">
            <summary>
            Executes the reader. If parameter <c>converter</c> is specified, use it. Otherwise, use <c>ConvertEntityObject</c>.
            </summary>
            <param name="spName">Name of the sp.</param>
            <param name="sqlParameters">The SQL parameters.</param>
            <param name="preferReadOnlyOperator">The prefer read only operator.</param>
            <returns>List{`0}.</returns>
        </member>
        <member name="T:Beyova.SqlDataAccessController">
            <summary>
            Class SqlDataAccessController.
            </summary>
        </member>
        <member name="F:Beyova.SqlDataAccessController.column_SqlErrorCode">
            <summary>
            The column_ SQL error code
            </summary>
        </member>
        <member name="F:Beyova.SqlDataAccessController.column_SqlErrorReason">
            <summary>
            The column_ SQL error reason
            </summary>
        </member>
        <member name="F:Beyova.SqlDataAccessController.column_SqlErrorMessage">
            <summary>
            The column_ SQL error message
            </summary>
        </member>
        <member name="F:Beyova.SqlDataAccessController.column_SqlStoredProcedureName">
            <summary>
            The column_ SQL stored procedure name
            </summary>
        </member>
        <member name="F:Beyova.SqlDataAccessController._primaryDatabaseOperator">
            <summary>
            The primary database operator
            </summary>
        </member>
        <member name="F:Beyova.SqlDataAccessController._readOnlyDatabaseOperator">
            <summary>
            The read only database operator
            </summary>
        </member>
        <member name="M:Beyova.SqlDataAccessController.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SqlDataAccessController" /> class.
            </summary>
            <param name="primarySqlConnectionString">The primary SQL connection string.</param>
            <param name="readOnlySqlConnectionString">The read only SQL connection string.</param>
        </member>
        <member name="M:Beyova.SqlDataAccessController.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SqlDataAccessController`1" /> class.
            </summary>
            <param name="primarySqlConnection">The SQL connection.</param>
            <param name="readOnlySqlConnection">The read only SQL connection.</param>
        </member>
        <member name="M:Beyova.SqlDataAccessController.BeginTransaction(System.Data.IsolationLevel,System.String)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="iso">The iso.</param>
            <param name="transactionName">Name of the transaction.</param>
            <returns>SqlTransactionScope.</returns>
        </member>
        <member name="M:Beyova.SqlDataAccessController.GetDatabaseOperator(System.Boolean)">
            <summary>
            Gets the database operator.
            </summary>
            <param name="preferReadOnlyOperator">if set to <c>true</c> [prefer read only operator].</param>
            <returns>DatabaseOperator.</returns>
        </member>
        <member name="M:Beyova.SqlDataAccessController.ExecuteScalar(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter},System.Boolean)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="spName">Name of the sp.</param>
            <param name="sqlParameters">The SQL parameters.</param>
            <param name="preferReadOnlyOperator">The prefer read only operator.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.SqlDataAccessController.ExecuteNonQuery(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter},System.Boolean)">
            <summary>
            Executes the non query.
            </summary>
            <param name="spName">Name of the sp.</param>
            <param name="sqlParameters">The SQL parameters.</param>
            <param name="preferReadOnlyOperator">The prefer read only operator.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Beyova.SqlDataAccessController.Execute(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter},System.Boolean,Beyova.DatabaseOperator@)">
            <summary>
            Executes the specified sp name.
            </summary>
            <param name="spName">Name of the sp.</param>
            <param name="sqlParameters">The SQL parameters.</param>
            <param name="preferReadOnlyOperator">if set to <c>true</c> [prefer read only operator].</param>
            <param name="databaseOperator">The database operator.</param>
            <returns>SqlDataReader.</returns>
        </member>
        <member name="M:Beyova.SqlDataAccessController.AboutSqlServer(System.String)">
            <summary>
            Abouts the SQL server.
            </summary>
            <param name="sqlConnection">The SQL connection.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.SqlDataAccessController.SqlParameterToList(System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})">
            <summary>
            SQLs the parameter to list.
            </summary>
            <param name="sqlParameters">The SQL parameters.</param>
            <returns>List{System.String}.</returns>
        </member>
        <member name="M:Beyova.SqlDataAccessController.TryGetSqlException(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Tries the get SQL exception.
            </summary>
            <param name="reader">The reader.</param>
            <returns>SqlStoredProcedureException.</returns>
        </member>
        <member name="M:Beyova.SqlDataAccessController.GenerateSqlSpParameter(System.String,System.Object,System.Data.ParameterDirection)">
            <summary>
            Generates the name of the SQL sp parameter.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="parameterObject">The parameter object.</param>
            <param name="direction">The direction.</param>
            <returns>SqlParameter.</returns>
        </member>
        <member name="M:Beyova.SqlDataAccessController.InternalGenerateSqlSpParameter(System.String,System.Object,System.Data.ParameterDirection)">
            <summary>
            Internals the generate SQL sp parameter.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="parameterObject">The parameter object.</param>
            <param name="direction">The direction.</param>
            <returns>SqlParameter.</returns>
        </member>
        <member name="M:Beyova.SqlDataAccessController.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Beyova.SqlTransactionScope">
            <summary>
            Class SqlTransactionScope.
            </summary>
        </member>
        <member name="F:Beyova.SqlTransactionScope._sqlTransaction">
            <summary>
            The SQL transaction
            </summary>
        </member>
        <member name="F:Beyova.SqlTransactionScope._sqlCommand">
            <summary>
            The _SQL command
            </summary>
        </member>
        <member name="F:Beyova.SqlTransactionScope._current">
            <summary>
            The _current
            </summary>
        </member>
        <member name="P:Beyova.SqlTransactionScope.SqlTransaction">
            <summary>
            Gets the SQL transaction.
            </summary>
            <value>The SQL transaction.</value>
        </member>
        <member name="P:Beyova.SqlTransactionScope.SqlCommand">
            <summary>
            Gets the SQL command.
            </summary>
            <value>The SQL command.</value>
        </member>
        <member name="P:Beyova.SqlTransactionScope.Current">
            <summary>
            Gets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:Beyova.SqlTransactionScope.#ctor(System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SqlTransactionScope" /> class.
            </summary>
            <param name="sqlTransaction">The SQL transaction.</param>
            <param name="sqlCommand">The SQL command.</param>
        </member>
        <member name="M:Beyova.SqlTransactionScope.Commit">
            <summary>
            Commits this instance.
            </summary>
        </member>
        <member name="M:Beyova.SqlTransactionScope.Rollback">
            <summary>
            Rollbacks this instance.
            </summary>
        </member>
        <member name="M:Beyova.SqlTransactionScope.InternalDispose">
            <summary>
            Internals the dispose.
            </summary>
        </member>
        <member name="M:Beyova.SqlTransactionScope.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Beyova.IApiAnalytics">
            <summary>
            Interface IApiAnalytics
            </summary>
        </member>
        <member name="M:Beyova.IApiAnalytics.QueryApiEvent(Beyova.ApiTracking.ApiEventCriteria)">
            <summary>
            Queries the API event.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;ApiEventLog&gt;.</returns>
        </member>
        <member name="M:Beyova.IApiAnalytics.QueryException(Beyova.ApiTracking.ExceptionCriteria)">
            <summary>
            Queries the exception.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;ExceptionInfo&gt;.</returns>
        </member>
        <member name="M:Beyova.IApiAnalytics.GetApiTraceLogById(System.String)">
            <summary>
            Gets the API trace log by identifier.
            </summary>
            <param name="traceId">The trace identifier.</param>
            <returns>List&lt;ApiTraceLog&gt;.</returns>
        </member>
        <member name="M:Beyova.IApiAnalytics.QueryApiMessage(Beyova.ApiTracking.ApiMessageCriteria)">
            <summary>
            Queries the API message.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;ApiMessage&gt;.</returns>
        </member>
        <member name="M:Beyova.IApiAnalytics.GetApiEventStatistic(Beyova.ApiTracking.ApiEventStatisticCriteria)">
            <summary>
            Gets the API event statistic.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>System.Collections.Generic.List&lt;Beyova.ApiTracking.GroupStatistic&gt;.</returns>
        </member>
        <member name="M:Beyova.IApiAnalytics.GetApiExceptionStatistic(Beyova.ApiTracking.ExceptionStatisticCriteria)">
            <summary>
            Gets the API exception statistic.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>System.Collections.Generic.List&lt;Beyova.ApiTracking.GroupStatistic&gt;.</returns>
        </member>
        <member name="M:Beyova.IApiAnalytics.GetApiEventGroupStatistic(Beyova.ApiTracking.ApiEventGroupingCriteria)">
            <summary>
            Gets the API event group statistic.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>System.Collections.Generic.List&lt;Beyova.ApiTracking.ApiEventGroupStatistic&gt;.</returns>
        </member>
        <member name="M:Beyova.IApiAnalytics.GetApiExceptionGroupingStatistic(Beyova.ApiTracking.ExceptionGroupingCriteria)">
            <summary>
            Gets the API exception grouping statistic.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>System.Collections.Generic.List&lt;Beyova.ApiTracking.ExceptionGroupStatistic&gt;.</returns>
        </member>
        <member name="T:Beyova.IBinaryStorageHelper`2">
            <summary>
            Interface IBinaryStorageHelper
            </summary>
            <typeparam name="TBinaryStorageMetaData">The type of the t binary storage meta data.</typeparam>
            <typeparam name="TBinaryStorageCriteria">The type of the t binary storage criteria.</typeparam>
        </member>
        <member name="M:Beyova.IBinaryStorageHelper`2.CreateBinaryUploadCredential(`0,System.Nullable{System.Int32})">
            <summary>
            Creates binary upload credential
            <remarks>
            This method is to create meta in database and get authenticated uri for client to upload blob.
            Before you call <c>CommitBinaryStorage</c> to set state as <c>Committed</c>, the state of blob is <c>CommitPending</c>, and might be deleted by maintenance script.
            And, the uri can be expired according to service security settings. By default, it is 10 min since created stamp.
            </remarks>
            </summary>
            <param name="meta">The meta.</param>
            <param name="expireOffset">The expire offset.</param>
            <returns>BinaryStorageActionCredential.</returns>
        </member>
        <member name="M:Beyova.IBinaryStorageHelper`2.CreateBinaryDownloadCredential(Beyova.BinaryStorageIdentifier,System.Nullable{System.Int32})">
            <summary>
            Creates binary download credential
            <remarks>
            This method is to get authenticated uri for client to download blob.
            Only when the blob information can be found in database and the state is valid for download, a Uri would be returned.
            And, the uri can be expired according to service security settings. By default, it is 10 min since created stamp.
            </remarks>
            </summary>
            <param name="identifier">The identifier.</param>
            <param name="expireOffset">The expire offset.</param>
            <returns>BinaryStorageActionCredential.</returns>
        </member>
        <member name="M:Beyova.IBinaryStorageHelper`2.DeleteBinaryStorage(System.Nullable{System.Guid})">
            <summary>
            Deletes the data.
            </summary>
            <param name="identifier">The identifier.</param>
        </member>
        <member name="M:Beyova.IBinaryStorageHelper`2.QueryBinaryStorage(`1)">
            <summary>
            Queries the binary storage.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;BinaryStorageMetaData&gt;.</returns>
        </member>
        <member name="M:Beyova.IBinaryStorageHelper`2.QueryUserBinaryStorage(`1)">
            <summary>
            Queries the user binary storage.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>List&lt;TBinaryStorageMetaData&gt;.</returns>
        </member>
        <member name="M:Beyova.IBinaryStorageHelper`2.CommitBinaryStorage(Beyova.BinaryStorageCommitRequest)">
            <summary>
            Commits the binary storage.
            <remarks>
            This method would try to update state of binary storage to <c>Committed</c>.
            </remarks></summary>
            <param name="request">The request.</param>
            <returns>BinaryStorageMetaData.</returns>
        </member>
        <member name="M:Beyova.IBinaryStorageHelper`2.GetContainers">
            <summary>
            Gets the containers.
            </summary>
            <returns>IEnumerable&lt;TCloudContainer&gt;.</returns>
        </member>
        <member name="M:Beyova.IBinaryStorageHelper`2.CreateBlobDownloadCredential(Beyova.BinaryStorageIdentifier)">
            <summary>
            Creates the BLOB download credential. This is blob operation only, no database involved.
            </summary>
            <param name="identifier">The identifier.</param>
            <returns>BinaryStorageActionCredential.</returns>
        </member>
        <member name="M:Beyova.IBinaryStorageHelper`2.CreateBlobUploadCredential(Beyova.BinaryStorageIdentifier,System.String,System.String)">
            <summary>
            Creates the BLOB upload credential. This is blob operation only, no database involved.
            </summary>
            <param name="identifier">The identifier.</param>
            <param name="hash">The hash. This value is used only when blob service provider needs to set hash (MD5) when creating credential of upload action.</param>
            <param name="contentType">Type of the content. This value is used only when blob service provider needs to set content type (MIME) when creating credential of upload action.</param>
            <returns>BinaryStorageActionCredential.</returns>
        </member>
        <member name="M:Beyova.IBinaryStorageHelper`2.UploadBinaryByCredential(Beyova.BinaryStorageActionCredential,System.Byte[],System.String)">
            <summary>
            Uploads the binary by credential.
            </summary>
            <param name="credential">The credential.</param>
            <param name="data">The data.</param>
            <param name="contentType">Type of the content.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.IBinaryStorageHelper`2.DownloadBinaryStreamByCredential(Beyova.BinaryStorageActionCredential)">
            <summary>
            Downloads the binary by credential.
            </summary>
            <param name="credential">The credential.</param>
            <returns>Stream.</returns>
        </member>
        <member name="M:Beyova.IBinaryStorageHelper`2.DownloadBinaryBytesByCredential(Beyova.BinaryStorageActionCredential)">
            <summary>
            Downloads the binary bytes by credential.
            </summary>
            <param name="credential">The credential.</param>
            <returns>Byte[].</returns>
        </member>
        <member name="M:Beyova.IBinaryStorageHelper`2.DeleteBinary(Beyova.BinaryStorageIdentifier)">
            <summary>
            Deletes the binary.
            </summary>
            <param name="identifier">The identifier.</param>
        </member>
        <member name="M:Beyova.IBinaryStorageHelper`2.GetBinaryStorageMetaDataByIdentifiers(System.Collections.Generic.List{Beyova.BinaryStorageIdentifier})">
            <summary>
            Gets the binary storage meta data by identifiers.
            </summary>
            <param name="identifiers">The identifiers.</param>
            <returns>System.Collections.Generic.List&lt;TBinaryStorageMetaData&gt;.</returns>
        </member>
        <member name="T:Beyova.ISnapshotable">
            <summary>
            Interface ISnapshotable
            </summary>
        </member>
        <member name="P:Beyova.ISnapshotable.SnapshotKey">
            <summary>
            Gets or sets the snapshot key.
            </summary>
            <value>The snapshot key.</value>
        </member>
        <member name="T:Beyova.ITransactionCriteria">
            <summary>
            Interface ITransactionCriteria
            </summary>
        </member>
        <member name="P:Beyova.ITransactionCriteria.RelatedPartyIdentifier">
            <summary>
            Gets or sets the related party identifier.
            </summary>
            <value>The related party identifier.</value>
        </member>
        <member name="P:Beyova.ITransactionCriteria.PartyTransactionIdentifier">
            <summary>
            Gets or sets the party transaction identifier.
            </summary>
            <value>The party transaction identifier.</value>
        </member>
        <member name="P:Beyova.ITransactionCriteria.Currency">
            <summary>
            Gets or sets the currency.
            </summary>
            <value>The currency.</value>
        </member>
        <member name="P:Beyova.ITransactionCriteria.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>The amount.</value>
        </member>
        <member name="P:Beyova.ITransactionCriteria.TransactionState">
            <summary>
            Gets or sets the state of the transaction.
            </summary>
            <value>The state of the transaction.</value>
        </member>
        <member name="P:Beyova.ITransactionCriteria.FromStamp">
            <summary>
            Gets or sets from stamp.
            </summary>
            <value>From stamp.</value>
        </member>
        <member name="P:Beyova.ITransactionCriteria.ToStamp">
            <summary>
            Gets or sets to stamp.
            </summary>
            <value>To stamp.</value>
        </member>
        <member name="P:Beyova.ITransactionCriteria.OrderDescending">
            <summary>
            Gets or sets a value indicating whether [order descending].
            </summary>
            <value><c>true</c> if [order descending]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Beyova.ITransactionRequest">
            <summary>
            Interface ITransactionRequest
            </summary>
        </member>
        <member name="P:Beyova.ITransactionRequest.RelatedPartyIdentifier">
            <summary>
            Gets or sets the related party identifier.
            </summary>
            <value>The related party identifier.</value>
        </member>
        <member name="P:Beyova.ITransactionRequest.PartyTransactionIdentifier">
            <summary>
            Gets or sets the party transaction identifier.
            </summary>
            <value>The party transaction identifier.</value>
        </member>
        <member name="P:Beyova.ITransactionRequest.Currency">
            <summary>
            Gets or sets the currency.
            </summary>
            <value>The currency.</value>
        </member>
        <member name="P:Beyova.ITransactionRequest.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>The amount.</value>
        </member>
        <member name="P:Beyova.ITransactionRequest.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>
            The owner key.
            </value>
        </member>
        <member name="T:Beyova.ITransactionAudit">
            <summary>
            Interface ITransactionAudit
            </summary>
        </member>
        <member name="P:Beyova.ITransactionAudit.TransactionState">
            <summary>
            Gets or sets the state of the transaction.
            </summary>
            <value>The state of the transaction.</value>
        </member>
        <member name="P:Beyova.ITransactionAudit.Balance">
            <summary>
            Gets or sets the balance.
            </summary>
            <value>The balance.</value>
        </member>
        <member name="T:Beyova.II18NResourceCollection">
            <summary>
            Interface IConfigurationReader
            </summary>
        </member>
        <member name="M:Beyova.II18NResourceCollection.GetResourceString(System.String,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Gets the resource string.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <param name="cultureInfo">The culture information.</param>
            <param name="languageCompatibility">if set to <c>true</c> [language compatibility].</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.II18NResourceCollection.HasCultureResource(System.Globalization.CultureInfo)">
            <summary>
            Determines whether [has culture resource] [the specified culture information].
            </summary>
            <param name="cultureInfo">The culture information.</param>
            <returns><c>true</c> if [has culture resource] [the specified culture information]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Beyova.ICredential">
            <summary>
            Interface ICredential
            </summary>
        </member>
        <member name="P:Beyova.ICredential.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Beyova.ITreeNode`1">
            <summary>
            Interface ITreeNode
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Beyova.ITreeNode`1.ParentNodeKey">
            <summary>
            Gets or sets the parent node key.
            </summary>
            <value>The parent node key.</value>
        </member>
        <member name="P:Beyova.ITreeNode`1.Children">
            <summary>
            Gets or sets the children.
            </summary>
            <value>The children.</value>
        </member>
        <member name="T:Beyova.IPermissionIdentifiers">
            <summary>
            Interface IPermissionIdentifiers
            </summary>
        </member>
        <member name="P:Beyova.IPermissionIdentifiers.Permissions">
            <summary>
            Gets or sets the permissions.
            </summary>
            <value>The permissions.</value>
        </member>
        <member name="T:Beyova.IGeographyLocation">
            <summary>
            Interface IGeographyLocation
            </summary>
        </member>
        <member name="P:Beyova.IGeographyLocation.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <value>The latitude.</value>
        </member>
        <member name="P:Beyova.IGeographyLocation.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <value>The longitude.</value>
        </member>
        <member name="T:Beyova.AdminAuthenticationResult">
            <summary>
            Class AdminUserInfo.
            </summary>
        </member>
        <member name="P:Beyova.AdminAuthenticationResult.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.AdminAuthenticationResult.TokenExpiredStamp">
            <summary>
            Gets or sets the token expired stamp.
            </summary>
            <value>The token expired stamp.</value>
        </member>
        <member name="P:Beyova.AdminAuthenticationResult.UserInfo">
            <summary>
            Gets or sets the user information.
            </summary>
            <value>The user information.</value>
        </member>
        <member name="T:Beyova.ApiTracking.ApiMessageCriteria">
            <summary>
            Class ApiMessageCriteria.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ApiMessageCriteria.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiMessageCriteria.FromStamp">
            <summary>
            Gets or sets from stamp.
            </summary>
            <value>From stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiMessageCriteria.ToStamp">
            <summary>
            Gets or sets to stamp.
            </summary>
            <value>To stamp.</value>
        </member>
        <member name="M:Beyova.ApiTracking.ApiMessageCriteria.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiMessageCriteria"/> class.
            </summary>
        </member>
        <member name="T:Beyova.ApiTracking.ApiMessage">
            <summary>
            Class ApiMessage.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ApiMessage.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiMessage.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiMessage.CreatedStamp">
            <summary>
            Gets or sets the created stamp.
            </summary>
            <value>The created stamp.</value>
        </member>
        <member name="M:Beyova.ApiTracking.ApiMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiMessage"/> class.
            </summary>
        </member>
        <member name="T:Beyova.ApiTracking.ApiTraceLogPiece">
            <summary>
            Class ApiTraceLogPiece.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ApiTraceLogPiece.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiTraceLogPiece.MethodFullName">
            <summary>
            Gets or sets the full name of the method.
            </summary>
            <value>The full name of the method.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiTraceLogPiece.EntryStamp">
            <summary>
            Gets or sets the entry stamp.
            </summary>
            <value>The entry stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiTraceLogPiece.ExitStamp">
            <summary>
            Gets or sets the exit stamp.
            </summary>
            <value>The exit stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiTraceLogPiece.ExceptionKey">
            <summary>
            Gets or sets the exception key.
            </summary>
            <value>The exception key.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiTraceLogPiece.InnerTraces">
            <summary>
            Gets or sets the detail.
            </summary>
            <value>The detail.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiTraceLogPiece.DebugInfo">
            <summary>
            Gets or sets the debug information.
            </summary>
            <value>
            The debug information.
            </value>
        </member>
        <member name="M:Beyova.ApiTracking.ApiTraceLogPiece.#ctor(Beyova.ApiTracking.ApiTraceLogPiece,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiTraceLogPiece"/> class.
            </summary>
            <param name="parent">The parent.</param>
            <param name="methodFullName">Full name of the method.</param>
            <param name="entryStamp">The entry stamp.</param>
        </member>
        <member name="M:Beyova.ApiTracking.ApiTraceLogPiece.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiTraceLog"/> class.
            </summary>
        </member>
        <member name="T:Beyova.ApiTracking.AggregationGroupObject`1">
            <summary>
            Class AggregationGroupObject.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.AggregationGroupObject`1.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Beyova.ApiTracking.AggregationGroupObject`1.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Beyova.ApiTracking.AggregationGroupObject`1.IdentifierString">
            <summary>
            Gets or sets the identifier string.
            </summary>
            <value>The identifier string.</value>
        </member>
        <member name="P:Beyova.ApiTracking.AggregationGroupObject`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Beyova.ApiTracking.AggregationGroupObject`1.SubGroupObjects">
            <summary>
            Gets or sets the sub group objects.
            </summary>
            <value>The sub group objects.</value>
        </member>
        <member name="T:Beyova.ApiTracking.GroupStatistic">
            <summary>
            Class GroupStatistic.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.GroupStatistic.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Beyova.ApiTracking.GroupStatistic.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Beyova.ApiTracking.ExceptionGroupStatistic">
            <summary>
            Class ExceptionGroupStatistic.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionGroupStatistic.ServiceIdentifier">
            <summary>
            Gets or sets the service identifier.
            </summary>
            <value>The service identifier.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionGroupStatistic.ServerIdentifier">
            <summary>
            Gets or sets the server identifier.
            </summary>
            <value>The server identifier.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionGroupStatistic.ExceptionCode">
            <summary>
            Gets or sets the exception code.
            </summary>
            <value>The exception code.</value>
        </member>
        <member name="M:Beyova.ApiTracking.ExceptionGroupStatistic.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ExceptionGroupStatistic" /> class.
            </summary>
        </member>
        <member name="T:Beyova.ApiTracking.ApiEventGroupStatistic">
            <summary>
            Class ApiEventGroupStatistic.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventGroupStatistic.ServiceIdentifier">
            <summary>
            Gets or sets the service identifier.
            </summary>
            <value>The service identifier.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventGroupStatistic.ServerIdentifier">
            <summary>
            Gets or sets the server identifier.
            </summary>
            <value>The server identifier.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventGroupStatistic.StampIdentifier">
            <summary>
            Gets or sets the stamp identifier.
            </summary>
            <value>
            The stamp identifier.
            </value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventGroupStatistic.Country">
            <summary>
            Gets or sets the country.
            </summary>
            <value>The country.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventGroupStatistic.City">
            <summary>
            Gets or sets the city.
            </summary>
            <value>The city.</value>
        </member>
        <member name="M:Beyova.ApiTracking.ApiEventGroupStatistic.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiEventGroupStatistic" /> class.
            </summary>
        </member>
        <member name="T:Beyova.ApiTracking.IGroupByResult">
            <summary>
            Interface IGroupByResult
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.IGroupByResult.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Beyova.ApiTracking.IGroupByResult.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Beyova.ApiTracking.ITimeFrame">
            <summary>
            Interface ITimeFrame
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ITimeFrame.FromStamp">
            <summary>
            Gets or sets from stamp.
            </summary>
            <value>From stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ITimeFrame.ToStamp">
            <summary>
            Gets or sets to stamp.
            </summary>
            <value>To stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ITimeFrame.TimeZone">
            <summary>
            Gets or sets the time zone. Unit: minute
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ITimeFrame.FrameInterval">
            <summary>
            Gets or sets the frame interval.
            </summary>
            <value>The frame interval.</value>
        </member>
        <member name="T:Beyova.ApiTracking.ApiEventStatisticCriteria">
            <summary>
            Class ApiEventStatisticCriteria.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventStatisticCriteria.FrameInterval">
            <summary>
            Gets or sets the frame interval.
            </summary>
            <value>The frame interval.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventStatisticCriteria.LastNDays">
            <summary>
            Gets or sets the last n days.
            </summary>
            <value>The last n days.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventStatisticCriteria.FromStamp">
            <summary>
            Gets or sets from stamp.
            </summary>
            <value>From stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventStatisticCriteria.ToStamp">
            <summary>
            Gets or sets to stamp.
            </summary>
            <value>To stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventStatisticCriteria.TimeZone">
            <summary>
            Gets or sets the time zone. Unit: minute
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventStatisticCriteria.HasException">
            <summary>
            Gets or sets a value indicating whether this instance has exception.
            </summary>
            <value><c>null</c> if [has exception] contains no value, <c>true</c> if [has exception]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Beyova.ApiTracking.ApiEventStatisticCriteria.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiEventStatisticCriteria"/> class.
            </summary>
        </member>
        <member name="M:Beyova.ApiTracking.ApiEventStatisticCriteria.#ctor(Beyova.ApiTracking.ApiEventLogBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiEventStatisticCriteria"/> class.
            </summary>
            <param name="criteria">The criteria.</param>
        </member>
        <member name="T:Beyova.ApiTracking.ApiLogBase">
            <summary>
            Class ApiLogBase.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ApiLogBase.ServiceIdentifier">
            <summary>
            Gets or sets the service identifier.
            </summary>
            <value>The service identifier.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiLogBase.ServerIdentifier">
            <summary>
            Gets or sets the server identifier.
            <remarks>Commonly, it is server name.</remarks>
            </summary>
            <value>The server identifier.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiLogBase.ServerHost">
            <summary>
            Gets or sets the server host.
            </summary>
            <value>
            The server host.
            </value>
        </member>
        <member name="M:Beyova.ApiTracking.ApiLogBase.#ctor(Beyova.ApiTracking.ApiLogBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiLogBase" /> class.
            </summary>
            <param name="logBase">The log base.</param>
        </member>
        <member name="M:Beyova.ApiTracking.ApiLogBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiLogBase"/> class.
            </summary>
        </member>
        <member name="T:Beyova.ApiTracking.ApiEventLogBase">
            <summary>
            Class ApiEventLogBase.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.ResourceName">
            <summary>
            Gets or sets the name of the resource.
            </summary>
            <value>The name of the resource.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.ModuleName">
            <summary>
            Gets or sets the name of the module.
            </summary>
            <value>The name of the module.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.ResourceEntityKey">
            <summary>
            Gets or sets the resource entity key.
            </summary>
            <value>The resource entity key.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.ApiFullName">
            <summary>
            Gets or sets the full name of the API.
            </summary>
            <value>The full name of the API.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.ExceptionKey">
            <summary>
            Gets or sets the exception key.
            </summary>
            <value>The exception key.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.CultureCode">
            <summary>
            Gets or sets the culture code.
            </summary>
            <value>The culture code.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.ClientIdentifier">
            <summary>
            Gets or sets the client identifier.
            Commonly, it can be device id, PC name, etc.
            </summary>
            <value>The client identifier.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.IpAddress">
            <summary>
            Gets or sets the ip address.
            </summary>
            <value>The ip address.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.UserAgent">
            <summary>
            Gets or sets the user agent.
            </summary>
            <value>The user agent.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.RawUrl">
            <summary>
            Gets or sets the raw URL.
            </summary>
            <value>The raw URL.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.ReferrerUrl">
            <summary>
            Gets or sets the referrer URL.
            </summary>
            <value>The referrer URL.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.Platform">
            <summary>
            Gets or sets the platform.
            </summary>
            <value>The platform.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.DeviceType">
            <summary>
            Gets or sets the type of the device.
            </summary>
            <value>The type of the device.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.TraceId">
            <summary>
            Gets or sets the trace identifier.
            </summary>
            <value>The trace identifier.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.Protocol">
            <summary>
            Gets or sets the protocol.
            </summary>
            <value>The protocol.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.OperatorCredential">
            <summary>
            Gets or sets the operator credential.
            </summary>
            <value>The operator credential.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.HitApiCache">
            <summary>
            Gets or sets a value indicating whether [hit API cache].
            </summary>
            <value><c>true</c> if [hit API cache]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLogBase.Referrer">
            <summary>
            Gets or sets the referrer.
            </summary>
            <value>The referrer.</value>
        </member>
        <member name="M:Beyova.ApiTracking.ApiEventLogBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiEventLogBase"/> class.
            </summary>
        </member>
        <member name="M:Beyova.ApiTracking.ApiEventLogBase.#ctor(Beyova.ApiTracking.ApiEventLogBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiEventLogBase"/> class.
            </summary>
            <param name="eventLogBase">The event log base.</param>
        </member>
        <member name="T:Beyova.ApiTracking.ExceptionStatisticCriteria">
            <summary>
            Class ExceptionStatisticCriteria.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionStatisticCriteria.FrameInterval">
            <summary>
            Gets or sets the frame interval.
            </summary>
            <value>The frame interval.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionStatisticCriteria.LastNDays">
            <summary>
            Gets or sets the last n days.
            </summary>
            <value>The last n days.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionStatisticCriteria.ToStamp">
            <summary>
            Gets or sets to stamp.
            </summary>
            <value>To stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionStatisticCriteria.FromStamp">
            <summary>
            Gets or sets from stamp.
            </summary>
            <value>From stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionStatisticCriteria.TimeZone">
            <summary>
            Gets or sets the time zone. Unit: minute
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="M:Beyova.ApiTracking.ExceptionStatisticCriteria.#ctor(Beyova.ExceptionSystem.ExceptionBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ExceptionStatisticCriteria" /> class.
            </summary>
            <param name="exceptionBase">The exception base.</param>
        </member>
        <member name="M:Beyova.ApiTracking.ExceptionStatisticCriteria.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ExceptionStatisticCriteria"/> class.
            </summary>
        </member>
        <member name="T:Beyova.ApiTracking.ExceptionGroupingCriteria">
            <summary>
            Class ExceptionGroupingCriteria.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionGroupingCriteria.GroupByServiceIdentifier">
            <summary>
            Gets or sets a value indicating whether [group by service identifier].
            </summary>
            <value><c>true</c> if [group by service identifier]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionGroupingCriteria.GroupByServerIdentifier">
            <summary>
            Gets or sets the server identifier.
            </summary>
            <value>The server identifier.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionGroupingCriteria.GroupByExceptionCode">
            <summary>
            Gets or sets a value indicating whether [group by exception code].
            </summary>
            <value><c>true</c> if [group by exception code]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Beyova.ApiTracking.ExceptionGroupingCriteria.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ExceptionGroupingCriteria" /> class.
            </summary>
        </member>
        <member name="M:Beyova.ApiTracking.ExceptionGroupingCriteria.#ctor(Beyova.ApiTracking.ExceptionStatisticCriteria)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ExceptionGroupingCriteria"/> class.
            </summary>
            <param name="criteria">The criteria.</param>
        </member>
        <member name="T:Beyova.ApiTracking.ApiEventGroupingCriteria">
            <summary>
            Class ApiEventGroupingCriteria.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventGroupingCriteria.GroupByServiceIdentifier">
            <summary>
            Gets or sets a value indicating whether [group by service identifier].
            </summary>
            <value><c>true</c> if [group by service identifier]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventGroupingCriteria.GroupByServerIdentifier">
            <summary>
            Gets or sets a value indicating whether [group by server identifier].
            </summary>
            <value><c>true</c> if [group by server identifier]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventGroupingCriteria.GroupByLocation">
            <summary>
            Gets or sets a value indicating whether [group by location].
            </summary>
            <value><c>true</c> if [group by location]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Beyova.ApiTracking.ApiEventGroupingCriteria.#ctor(Beyova.ApiTracking.ApiEventStatisticCriteria)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiEventGroupingCriteria" /> class.
            </summary>
            <param name="criteria">The criteria.</param>
        </member>
        <member name="M:Beyova.ApiTracking.ApiEventGroupingCriteria.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiEventGroupingCriteria"/> class.
            </summary>
        </member>
        <member name="T:Beyova.ApiTracking.ApiEventCriteria">
            <summary>
            Class ApiEventCriteria.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventCriteria.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventCriteria.FromStamp">
            <summary>
            Gets or sets from stamp.
            </summary>
            <value>From stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventCriteria.ToStamp">
            <summary>
            Gets or sets to stamp.
            </summary>
            <value>To stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventCriteria.ApiDurationFrom">
            <summary>
            Gets or sets the API duration from.
            </summary>
            <value>The API duration from.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventCriteria.ApiDurationTo">
            <summary>
            Gets or sets the API duration to.
            </summary>
            <value>The API duration to.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventCriteria.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventCriteria.HasException">
            <summary>
            Gets or sets a value indicating whether this instance has exception.
            </summary>
            <value><c>null</c> if [has exception] contains no value, <c>true</c> if [has exception]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Beyova.ApiTracking.ApiEventCriteria.#ctor(Beyova.ApiTracking.ApiEventLogBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiEventCriteria" /> class.
            </summary>
        </member>
        <member name="M:Beyova.ApiTracking.ApiEventCriteria.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiEventCriteria"/> class.
            </summary>
        </member>
        <member name="T:Beyova.ApiTracking.ApiTraceLog">
            <summary>
            Class ApiTraceLog.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ApiTraceLog.TraceId">
            <summary>
            Gets or sets the trace identifier.
            </summary>
            <value>The trace identifier.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiTraceLog.TraceSequence">
            <summary>
            Gets or sets the trace sequence.
            </summary>
            <value>The trace sequence.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiTraceLog.CreatedStamp">
            <summary>
            Gets or sets the created stamp.
            </summary>
            <value>The created stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiTraceLog.ServiceName">
            <summary>
            Gets or sets the name of the service.
            </summary>
            <value>The name of the service.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiTraceLog.ServerName">
            <summary>
            Gets or sets the name of the server.
            </summary>
            <value>The name of the server.</value>
        </member>
        <member name="M:Beyova.ApiTracking.ApiTraceLog.#ctor(System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiTraceLog" /> class.
            </summary>
            <param name="serverName">Name of the server.</param>
            <param name="serviceName">Name of the service.</param>
            <param name="entryStamp">The entry stamp.</param>
        </member>
        <member name="M:Beyova.ApiTracking.ApiTraceLog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiTraceLog" /> class.
            </summary>
        </member>
        <member name="T:Beyova.ApiTracking.ApiEventLog">
            <summary>
            Class ApiEventLog.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLog.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLog.EntryStamp">
            <summary>
            Gets or sets the entry stamp.
            </summary>
            <value>The entry stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLog.ExitStamp">
            <summary>
            Gets or sets the exit stamp.
            </summary>
            <value>The exit stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLog.CreatedStamp">
            <summary>
            Gets or sets the created stamp.
            </summary>
            <value>The created stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLog.ContentLength">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLog.GeoInfo">
            <summary>
            Gets or sets the geo information.
            </summary>
            <value>The geo information.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ApiEventLog.Duration">
            <summary>
            Gets the duration. Unit: TotalMilliseconds
            </summary>
            <value>The duration.</value>
        </member>
        <member name="M:Beyova.ApiTracking.ApiEventLog.#ctor(Beyova.ApiTracking.ApiEventLogBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiEventLog"/> class.
            </summary>
        </member>
        <member name="M:Beyova.ApiTracking.ApiEventLog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ApiEventLog"/> class.
            </summary>
        </member>
        <member name="T:Beyova.ApiTracking.ExceptionCriteria">
            <summary>
            Class ExceptionCriteria.
            </summary>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionCriteria.MajorCode">
            <summary>
            Gets or sets the major code.
            </summary>
            <value>The major code.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionCriteria.MinorCode">
            <summary>
            Gets or sets the minor code.
            </summary>
            <value>The minor code.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionCriteria.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionCriteria.FromStamp">
            <summary>
            Gets or sets from stamp.
            </summary>
            <value>From stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionCriteria.ToStamp">
            <summary>
            Gets or sets to stamp.
            </summary>
            <value>To stamp.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionCriteria.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Beyova.ApiTracking.ExceptionCriteria.Scene">
            <summary>
            Gets or sets the scene.
            </summary>
            <value>The scene.</value>
        </member>
        <member name="M:Beyova.ApiTracking.ExceptionCriteria.#ctor(Beyova.ExceptionSystem.ExceptionBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ExceptionCriteria" /> class.
            </summary>
            <param name="exceptionBase">The exception base.</param>
        </member>
        <member name="M:Beyova.ApiTracking.ExceptionCriteria.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ApiTracking.ExceptionCriteria"/> class.
            </summary>
        </member>
        <member name="T:Beyova.ObjectAuditCriteria">
            <summary>
            Class ObjectAuditCriteria.
            </summary>
        </member>
        <member name="T:Beyova.ObjectAuditCriteria`1">
            <summary>
            Class ObjectAuditCriteria.
            </summary>
            <typeparam name="TId">The type of the t identifier.</typeparam>
        </member>
        <member name="P:Beyova.ObjectAuditCriteria`1.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Beyova.ObjectAuditCriteria`1.EntityName">
            <summary>
            Gets or sets the name of the entity.
            </summary>
            <value>The name of the entity.</value>
        </member>
        <member name="P:Beyova.ObjectAuditCriteria`1.PrimaryKey">
            <summary>
            Gets or sets the primary key.
            </summary>
            <value>The primary key.</value>
        </member>
        <member name="P:Beyova.ObjectAuditCriteria`1.FromStamp">
            <summary>
            Gets or sets from stamp.
            </summary>
            <value>From stamp.</value>
        </member>
        <member name="P:Beyova.ObjectAuditCriteria`1.ToStamp">
            <summary>
            Gets or sets to stamp.
            </summary>
            <value>To stamp.</value>
        </member>
        <member name="P:Beyova.ObjectAuditCriteria`1.OperatedBy">
            <summary>
            Gets or sets the operated by.
            </summary>
            <value>The operated by.</value>
        </member>
        <member name="P:Beyova.ObjectAuditCriteria`1.ObjectState">
            <summary>
            Gets or sets the state of the object.
            </summary>
            <value>The state of the object.</value>
        </member>
        <member name="P:Beyova.ObjectAuditCriteria`1.PageSize">
            <summary>
            Gets or sets the size of the page.
            </summary>
            <value>The size of the page.</value>
        </member>
        <member name="P:Beyova.ObjectAuditCriteria`1.PageNumber">
            <summary>
            Gets or sets the page number.
            </summary>
            <value>The page number.</value>
        </member>
        <member name="T:Beyova.ObjectRawAudit">
            <summary>
            Class ObjectRawAudit.
            </summary>
        </member>
        <member name="T:Beyova.ObjectAudit`2">
            <summary>
            Class ObjectAudit.
            </summary>
            <typeparam name="TId">The type of the identifier.</typeparam>
            <typeparam name="TContent">The type of the content.</typeparam>
        </member>
        <member name="P:Beyova.ObjectAudit`2.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Beyova.ObjectAudit`2.EntityName">
            <summary>
            Gets or sets the name of the entity.
            </summary>
            <value>The name of the entity.</value>
        </member>
        <member name="P:Beyova.ObjectAudit`2.PrimaryKey">
            <summary>
            Gets or sets the primary key.
            </summary>
            <value>The primary key.</value>
        </member>
        <member name="P:Beyova.ObjectAudit`2.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:Beyova.ObjectAudit`2.OperatedStamp">
            <summary>
            Gets or sets the operated stamp.
            </summary>
            <value>The operated stamp.</value>
        </member>
        <member name="P:Beyova.ObjectAudit`2.OperatedBy">
            <summary>
            Gets or sets the operated by.
            </summary>
            <value>The operated by.</value>
        </member>
        <member name="P:Beyova.ObjectAudit`2.ObjectState">
            <summary>
            Gets or sets the state of the object.
            </summary>
            <value>The state of the object.</value>
        </member>
        <member name="T:Beyova.SSOAuthorizationBase">
            <summary>
            Class SSOAuthorizationBase.
            </summary>
        </member>
        <member name="P:Beyova.SSOAuthorizationBase.ClientRequestId">
            <summary>
            Gets or sets the client request identifier.
            </summary>
            <value>The client request identifier.</value>
        </member>
        <member name="P:Beyova.SSOAuthorizationBase.AuthorizationToken">
            <summary>
            Gets or sets the authorization token.
            </summary>
            <value>The authorization token.</value>
        </member>
        <member name="T:Beyova.SSOAuthorizationCriteria">
            <summary>
            Class SSOAuthorizationCriteria.
            </summary>
        </member>
        <member name="P:Beyova.SSOAuthorizationCriteria.PartnerKey">
            <summary>
            Gets or sets the partner key.
            </summary>
            <value>The partner key.</value>
        </member>
        <member name="P:Beyova.SSOAuthorizationCriteria.AuthorizationToken">
            <summary>
            Gets or sets the authorization token.
            </summary>
            <value>The authorization token.</value>
        </member>
        <member name="P:Beyova.SSOAuthorizationCriteria.IsUsed">
            <summary>
            Gets or sets a value indicating whether this instance is used.
            </summary>
            <value><c>null</c> if [is used] contains no value, <c>true</c> if [is used]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.SSOAuthorizationCriteria.UserKey">
            <summary>
            Gets or sets the user key.
            </summary>
            <value>The user key.</value>
        </member>
        <member name="M:Beyova.SSOAuthorizationCriteria.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SSOAuthorizationCriteria"/> class.
            </summary>
        </member>
        <member name="T:Beyova.SSOAuthorization">
            <summary>
            Class SSOAuthorization.
            </summary>
        </member>
        <member name="P:Beyova.SSOAuthorization.PartnerKey">
            <summary>
            Gets or sets the partner key.
            </summary>
            <value>The partner key.</value>
        </member>
        <member name="P:Beyova.SSOAuthorization.CallbackUrl">
            <summary>
            Gets or sets the callback URL.
            </summary>
            <value>The callback URL.</value>
        </member>
        <member name="P:Beyova.SSOAuthorization.ExpiredStamp">
            <summary>
            Gets or sets the expired stamp.
            </summary>
            <value>The expired stamp.</value>
        </member>
        <member name="P:Beyova.SSOAuthorization.UsedStamp">
            <summary>
            Gets or sets the used stamp.
            </summary>
            <value>The used stamp.</value>
        </member>
        <member name="P:Beyova.SSOAuthorization.UserKey">
            <summary>
            Gets or sets the user key.
            </summary>
            <value>The user key.</value>
        </member>
        <member name="P:Beyova.SSOAuthorization.CreatedStamp">
            <summary>
            Gets or sets the created stamp.
            </summary>
            <value>The created stamp.</value>
        </member>
        <member name="P:Beyova.SSOAuthorization.LastUpdatedStamp">
            <summary>
            Gets or sets the last updated stamp.
            </summary>
            <value>The last updated stamp.</value>
        </member>
        <member name="P:Beyova.SSOAuthorization.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Beyova.SSOAuthorization.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="M:Beyova.SSOAuthorization.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SSOAuthorization" /> class.
            </summary>
        </member>
        <member name="T:Beyova.SSOAuthorizationRequest">
            <summary>
            Class SSOAuthorizationRequest.
            For Token Exchange, use <c>ClientRequestId</c>, <c>PartnerKey</c> and <c>UserKey</c>.
            For SSO, use <c>ClientRequestId</c>, <c>PartnerKey</c> and <c>CallbackUrl</c>.
            </summary>
        </member>
        <member name="P:Beyova.SSOAuthorizationRequest.ClientRequestId">
            <summary>
            Gets or sets the client request identifier.
            </summary>
            <value>The client request identifier.</value>
        </member>
        <member name="P:Beyova.SSOAuthorizationRequest.PartnerKey">
            <summary>
            Gets or sets the provider key.
            </summary>
            <value>The provider key.</value>
        </member>
        <member name="P:Beyova.SSOAuthorizationRequest.CallbackUrl">
            <summary>
            Gets or sets the callback URL.
            </summary>
            <value>The callback URL.</value>
        </member>
        <member name="P:Beyova.SSOAuthorizationRequest.UserKey">
            <summary>
            Gets or sets the user key.
            </summary>
            <value>The user key.</value>
        </member>
        <member name="T:Beyova.SSOAuthorizationPartnerCriteria">
            <summary>
            Class SSOAuthorizationPartnerCriteria.
            </summary>
        </member>
        <member name="P:Beyova.SSOAuthorizationPartnerCriteria.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.SSOAuthorizationPartnerCriteria.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>The owner key.</value>
        </member>
        <member name="P:Beyova.SSOAuthorizationPartnerCriteria.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.SSOAuthorizationPartnerCriteria.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.SSOAuthorizationPartnerCriteria.CallbackUrl">
            <summary>
            Gets or sets the callback URL.
            </summary>
            <value>The callback URL.</value>
        </member>
        <member name="T:Beyova.SSOAuthorizationPartner">
            <summary>
            Class SSOAuthorizationPartner.
            </summary>
        </member>
        <member name="P:Beyova.SSOAuthorizationPartner.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>The owner key.</value>
        </member>
        <member name="P:Beyova.SSOAuthorizationPartner.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.SSOAuthorizationPartner.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.SSOAuthorizationPartner.TokenExpiration">
            <summary>
            Gets or sets the token expiration. (Minute)
            </summary>
            <value>The token expiration.</value>
        </member>
        <member name="P:Beyova.SSOAuthorizationPartner.CallbackUrl">
            <summary>
            Gets or sets the callback URL.
            </summary>
            <value>The callback URL.</value>
        </member>
        <member name="T:Beyova.RemoteConfigurationInfo">
            <summary>
            Class RemoteConfigurationInfo.
            </summary>
        </member>
        <member name="P:Beyova.RemoteConfigurationInfo.CreatedBy">
            <summary>
            Gets or sets the created by.
            </summary>
            <value>The created by.</value>
        </member>
        <member name="P:Beyova.RemoteConfigurationInfo.CreatedStamp">
            <summary>
            Gets or sets the created stamp.
            </summary>
            <value>The created stamp.</value>
        </member>
        <member name="P:Beyova.RemoteConfigurationInfo.LastUpdatedBy">
            <summary>
            Gets or sets the last updated by.
            </summary>
            <value>The last updated by.</value>
        </member>
        <member name="P:Beyova.RemoteConfigurationInfo.LastUpdatedStamp">
            <summary>
            Gets or sets the last updated stamp.
            </summary>
            <value>The last updated stamp.</value>
        </member>
        <member name="P:Beyova.RemoteConfigurationInfo.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="T:Beyova.ProgrammingIntelligence.CSharpCodeGenerator">
            <summary>
            Class CSharpCodeGenerator.
            </summary>
        </member>
        <member name="F:Beyova.ProgrammingIntelligence.CSharpCodeGenerator.defaultCodeIndent">
            <summary>
            The code indent
            </summary>
        </member>
        <member name="F:Beyova.ProgrammingIntelligence.CSharpCodeGenerator.nullString">
            <summary>
            The null string
            </summary>
        </member>
        <member name="P:Beyova.ProgrammingIntelligence.CSharpCodeGenerator.Namespace">
            <summary>
            Gets or sets the namespace.
            </summary>
            <value>The namespace.</value>
        </member>
        <member name="P:Beyova.ProgrammingIntelligence.CSharpCodeGenerator.ClassName">
            <summary>
            Gets or sets the name of the class.
            </summary>
            <value>The name of the class.</value>
        </member>
        <member name="P:Beyova.ProgrammingIntelligence.CSharpCodeGenerator.CodeIndent">
            <summary>
            Gets or sets the code indent.
            </summary>
            <value>The code indent.</value>
        </member>
        <member name="P:Beyova.ProgrammingIntelligence.CSharpCodeGenerator.BaseClassType">
            <summary>
            Gets or sets the type of the base class.
            </summary>
            <value>
            The type of the base class.
            </value>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerator.#ctor(System.String,System.String,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ProgrammingIntelligence.CSharpCodeGenerator" /> class.
            </summary>
            <param name="namespace">The namespace.</param>
            <param name="className">Name of the class.</param>
            <param name="baseClassType">Type of the base class.</param>
            <param name="codeIndent">The code indent.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerator.WriteFileInfo(System.Text.StringBuilder)">
            <summary>
            Writes the file information.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerator.WriteNamespaces(System.Text.StringBuilder)">
            <summary>
            Writes the namespaces.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerator.WriteConstructor(System.Text.StringBuilder,System.String)">
            <summary>
            Writes the constructor.
            </summary>
            <param name="builder">The builder.</param>
            <param name="className">Name of the class.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerator.GenerateClassDeclarationPart(System.String,System.Collections.Generic.ICollection{System.Type})">
            <summary>
            Generates the class declaration part.
            </summary>
            <param name="className">Name of the class.</param>
            <param name="interfaces">The interfaces.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerator.IsDuplicatedInterface(System.Collections.Generic.HashSet{System.Type},System.Type)">
            <summary>
            Determines whether [is duplicated interface] [the specified type].
            </summary>
            <param name="handledInterfaces">The handled interfaces.</param>
            <param name="type">The type.</param>
            <returns><c>true</c> if [is duplicated interface] [the specified type]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerator.SimpleVariableToStringCode(System.String,System.Type)">
            <summary>
            Simples the variable to string code.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerator.GetGenericTypeConstraints(System.Type)">
            <summary>
            Gets the generic type constraints.
            </summary>
            <param name="type">The type.</param>
            <returns>Dictionary&lt;System.String, Type[]&gt;.</returns>
        </member>
        <member name="T:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil">
            <summary>
            Class CSharpCodeGenerateUtil
            </summary>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.AppendBeginBrace(System.Text.StringBuilder)">
            <summary>
            Appends the begin brace.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.AppendBraceBegin(System.Text.StringBuilder,System.Int32@)">
            <summary>
            Appends the brace begin.
            </summary>
            <param name="builder">The builder.</param>
            <param name="indent">The indent.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.AppendSqlSectionBegin(System.Text.StringBuilder,System.Int32@)">
            <summary>
            Appends the SQL section begin.
            </summary>
            <param name="builder">The builder.</param>
            <param name="indent">The indent.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.AppendEndBrace(System.Text.StringBuilder)">
            <summary>
            Appends the end brace.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.AppendBraceEnd(System.Text.StringBuilder,System.Int32@,System.Boolean)">
            <summary>
            Appends the brace end.
            </summary>
            <param name="builder">The builder.</param>
            <param name="indent">The indent.</param>
            <param name="appendStatementEnd">if set to <c>true</c> [append statement end].</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.AppendSqlSectionEnd(System.Text.StringBuilder,System.Int32@)">
            <summary>
            Appends the SQL section end.
            </summary>
            <param name="builder">The builder.</param>
            <param name="indent">The indent.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.MethodInputParametersToCodeLook(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
            Methods the input parameters to code look.
            </summary>
            <param name="methodInfo">The method information.</param>
            <param name="includeType">Type of the include.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.ToGenericConstraintsCodeLook(System.Type,System.String)">
            <summary>
            To the generic constraints code look.
            </summary>
            <param name="type">The type.</param>
            <param name="indent">The indent.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.ToGenericConstraintsCodeLook(System.Reflection.MethodInfo,System.String)">
            <summary>
            To the generic constraints code look.
            </summary>
            <param name="methodInfo">The method information.</param>
            <param name="indent">The indent.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.InternalToGenericConstraintsCodeLook(System.Type[],System.String)">
            <summary>
            To the generic constraints code look. Output: "where TName: struct, A, B, C, D, ..."
            </summary>
            <param name="genericTypes">The generic types.</param>
            <param name="indent">The indent.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.InternalWriteGenericConstraintsCodeLook(System.Text.StringBuilder,System.String,System.Collections.Generic.List{System.Type},System.String)">
            <summary>
            Internals to generic constraints code look.
            </summary>
            <param name="builder">The builder.</param>
            <param name="genericName">Name of the generic.</param>
            <param name="constraintTypes">The constraint types.</param>
            <param name="indent">The indent.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.ToDeclarationCodeLook(System.Reflection.MethodInfo)">
            <summary>
            To the code look. Output looks like: System.Int32 NormalMethod(System.Nullable&lt;System.Int32&gt; x,System.Int32 y)
            </summary>
            <param name="methodInfo">The method information.</param>
            <returns>
            System.String.
            </returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.ToInvokeCodeLook(System.Reflection.MethodInfo,System.Type[],System.Reflection.ParameterInfo[])">
            <summary>
            To the invoke code look.
            </summary>
            <param name="methodInfo">The method information.</param>
            <param name="genericTypes">The generic types.</param>
            <param name="inputParameters">The input parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.ToCodeLook(System.Type,System.Boolean)">
            <summary>
            To the code look. This method is to convert <see cref="T:System.Type" /> to code based., such as List&lt;String&gt;, System.Nullable&lt;System.Guid&gt;, etc.
            </summary>
            <param name="type">The type.</param>
            <param name="omitNamespace">if set to <c>true</c> [omit namespace].</param>
            <returns>
            System.String.
            </returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.MethodGenericDefinitionArgumentsToCodeLook(System.Reflection.MethodInfo)">
            <summary>
            Methods the generic arguments to code look.
            </summary>
            <param name="methodInfo">The method information.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.MethodGenericArgumentsToCodeLook(System.Reflection.MethodInfo,System.Type[])">
            <summary>
            Methods the generic arguments to code look.
            </summary>
            <param name="methodInfo">The method information.</param>
            <param name="genericTypes">The generic types.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.VariableParametersToCodeLook(System.String[])">
            <summary>
            Variables the parameters to code look. [a,b,c, ...] =&gt; "a,b,c,..."
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.CombineCode``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Int32,System.Char)">
            <summary>
            Combines the code. [A,B,C,...]=&gt;"a,b,c,..."
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items">The items.</param>
            <param name="getCodePiece">The get code piece.</param>
            <param name="estimatedEachLength">Length of the estimated each.</param>
            <param name="separator">The separator.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.UsingNamespaces(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Usings the namespaces.
            </summary>
            <param name="builder">The builder.</param>
            <param name="namespaceNames">The namespace names.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.WriteProgrammingIntelligenceFileDescription(System.Text.StringBuilder)">
            <summary>
            Writes the programming intelligence file description.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.SmartAppendCheckNullOrEmptyStatement(System.Text.StringBuilder,System.Type,System.String,System.Int32)">
            <summary>
            Smarts the append check null or empty statement.
            </summary>
            <param name="builder">The builder.</param>
            <param name="instanceType">Type of the instance.</param>
            <param name="instanceName">Name of the instance.</param>
            <param name="indent">The indent.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.ApppendCheckNullObjectStatement(System.Text.StringBuilder,System.String,System.Int32)">
            <summary>
            Apppends the check null object statement.
            </summary>
            <param name="builder">The builder.</param>
            <param name="variableName">Name of the variable.</param>
            <param name="indent">The indent.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.ApppendCheckEmptyStringStatement(System.Text.StringBuilder,System.String,System.Int32)">
            <summary>
            Apppends the check empty string statement.
            </summary>
            <param name="builder">The builder.</param>
            <param name="variableName">Name of the variable.</param>
            <param name="indent">The indent.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.ApppendCheckNullOrEmptyCollectionStatement(System.Text.StringBuilder,System.String,System.Int32)">
            <summary>
            Apppends the check null or empty collection statement.
            </summary>
            <param name="builder">The builder.</param>
            <param name="variableName">Name of the variable.</param>
            <param name="indent">The indent.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.ApppendCheckStatement(System.Text.StringBuilder,System.String,System.String,System.Int32)">
            <summary>
            Apppends the check statement.
            </summary>
            <param name="builder">The builder.</param>
            <param name="methodName">Name of the method.</param>
            <param name="variableName">Name of the variable.</param>
            <param name="indent">The indent.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.AppendThrowExceptionStatement(System.Text.StringBuilder,System.Reflection.MethodInfo)">
            <summary>
            Appends the throw exception statement.
            </summary>
            <param name="builder">The builder.</param>
            <param name="methodInfo">The method information.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.CSharpCodeGenerateUtil.AppendThrowExceptionStatement(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends the throw exception statement.
            </summary>
            <param name="builder">The builder.</param>
            <param name="identifiers">The identifiers.</param>
        </member>
        <member name="T:Beyova.ProgrammingIntelligence.BeyovaCultureResourceAttribute">
            <summary>
            Class BeyovaCultureResourceAttribute.
            </summary>
        </member>
        <member name="F:Beyova.ProgrammingIntelligence.BeyovaCultureResourceAttribute.FileExtension">
            <summary>
            The file extension
            </summary>
        </member>
        <member name="P:Beyova.ProgrammingIntelligence.BeyovaCultureResourceAttribute.ResourceBaseName">
            <summary>
            Gets or sets the name of the resource base.
            </summary>
            <value>The name of the resource base.</value>
        </member>
        <member name="P:Beyova.ProgrammingIntelligence.BeyovaCultureResourceAttribute.DefaultCultureCode">
            <summary>
            Gets or sets the default culture code.
            </summary>
            <value>The default culture code.</value>
        </member>
        <member name="P:Beyova.ProgrammingIntelligence.BeyovaCultureResourceAttribute.TryLanguageCompatibility">
            <summary>
            Gets or sets a value indicating whether [try language compatibility].
            </summary>
            <value><c>true</c> if [try language compatibility]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.ProgrammingIntelligence.BeyovaCultureResourceAttribute.Directory">
            <summary>
            Gets or sets the directory.
            </summary>
            <value>The directory.</value>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.BeyovaCultureResourceAttribute.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute" /> class.
            Parameter <c>resourceBaseName</c> should contains namespace as full name.
            </summary>
            <param name="cultureResourceDirectory">The culture resource directory.</param>
            <param name="resourceBaseName">Name of the resource base.</param>
            <param name="defaultCultureCode">The default culture code.</param>
            <param name="tryLanguageCompatibility">if set to <c>true</c> [try language compatibility].</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.BeyovaCultureResourceAttribute.FillResources(System.Collections.Generic.Dictionary{System.Globalization.CultureInfo,System.Collections.Generic.Dictionary{System.String,Beyova.GlobalCultureResource}})">
            <summary>
            Fills the resources.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.BeyovaCultureResourceAttribute.TryReadResourceFile(System.String)">
            <summary>
            Tries the read resource file.
            </summary>
            <param name="filePath">The file path.</param>
            <returns>System.Collections.Generic.Dictionary&lt;System.String, System.Collections.Generic.Dictionary&lt;System.String, System.String&gt;&gt;.</returns>
        </member>
        <member name="T:Beyova.ProgrammingIntelligence.BeyovaConfigurationAttribute">
            <summary>
            Class BeyovaConfigurationAttribute.
            </summary>
        </member>
        <member name="P:Beyova.ProgrammingIntelligence.BeyovaConfigurationAttribute.ConfigurationName">
            <summary>
            Gets or sets the name of the configuration. Name supports wildcard, like "beyova.*.json"
            </summary>
            <value>The name of the configuration.</value>
        </member>
        <member name="P:Beyova.ProgrammingIntelligence.BeyovaConfigurationAttribute.ConfigurationDirectory">
            <summary>
            Gets or sets the configuration directory.
            </summary>
            <value>The configuration directory.</value>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.BeyovaConfigurationAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ProgrammingIntelligence.BeyovaConfigurationAttribute" /> class.
            If configurationDirectory is not specified, then use <c>{BaseDirectory}/Configurations/{configurationName}</c>
            </summary>
            <param name="configurationName">Name of the configuration.</param>
            <param name="configurationDirectory">The configuration directory.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.BeyovaConfigurationAttribute.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.BeyovaConfigurationAttribute.GetConfigurationFullPath">
            <summary>
            Gets the configuration full path.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="T:Beyova.ProgrammingIntelligence.DocumentGenerator">
            <summary>
            Class DocumentGenerator.
            </summary>
        </member>
        <member name="F:Beyova.ProgrammingIntelligence.DocumentGenerator.propertyNameFormat">
            <summary>
            The property name
            </summary>
        </member>
        <member name="F:Beyova.ProgrammingIntelligence.DocumentGenerator.objectBrace">
            <summary>
            The object brace
            </summary>
        </member>
        <member name="F:Beyova.ProgrammingIntelligence.DocumentGenerator.arrayBrace">
            <summary>
            The array brace
            </summary>
        </member>
        <member name="F:Beyova.ProgrammingIntelligence.DocumentGenerator.enumFormat">
            <summary>
            The enum format
            </summary>
        </member>
        <member name="F:Beyova.ProgrammingIntelligence.DocumentGenerator.httpStatusFormat">
            <summary>
            The HTTP status format
            </summary>
        </member>
        <member name="F:Beyova.ProgrammingIntelligence.DocumentGenerator.customHeaderFormat">
            <summary>
            The custom header format
            </summary>
        </member>
        <member name="F:Beyova.ProgrammingIntelligence.DocumentGenerator.requestHeaderFormat">
            <summary>
            The request header format
            </summary>
        </member>
        <member name="F:Beyova.ProgrammingIntelligence.DocumentGenerator.panel">
            <summary>
            The panel
            </summary>
        </member>
        <member name="F:Beyova.ProgrammingIntelligence.DocumentGenerator.enumTableCss">
            <summary>
            The enum table CSS
            </summary>
        </member>
        <member name="F:Beyova.ProgrammingIntelligence.DocumentGenerator.operationPanelCss">
            <summary>
            The operation panel CSS
            </summary>
        </member>
        <member name="F:Beyova.ProgrammingIntelligence.DocumentGenerator.jsonCss">
            <summary>
            The json CSS
            </summary>
        </member>
        <member name="P:Beyova.ProgrammingIntelligence.DocumentGenerator.TokenKey">
            <summary>
            Gets or sets the token key.
            </summary>
            <value>The token key.</value>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ProgrammingIntelligence.DocumentGenerator" /> class.
            </summary>
            <param name="tokenKey">The token key.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.WriteHtmlDocumentToZipByType(System.Type[])">
            <summary>
            Writes the HTML document to zip. If types has no item, all API in current AppDomain would be generated.
            </summary>
            <param name="types">The types.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.WriteHtmlDocumentToZipByRoutes(Beyova.RestApi.RuntimeRoute[])">
            <summary>
            Writes the HTML document to zip by routes.
            </summary>
            <param name="routes">The routes.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.WriteHtmlDocumentToZipByTypeFullNames(System.String[])">
            <summary>
            Writes the HTML document to zip.
            This method is mainly used by CodeSmith
            </summary>
            <param name="typeFullNames">The type full names.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.WriteHtmlDocumentToFile(System.String,System.Type[])">
            <summary>
            Writes the HTML document to file. If types has no item, all API in current AppDomain would be generated.
            </summary>
            <param name="containerPath">The container path.</param>
            <param name="types">The types.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.GetAssemblyType">
            <summary>
            Gets the type of the assembly.
            </summary>
            <returns>List&lt;Type&gt;.</returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.WriteHtmlDocumentByType``1(System.Action{``0,System.String,System.Byte[]},``0,System.Type[])">
            <summary>
            Writes the type of the HTML document by.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="packageDocumentDelegate">The package document delegate.</param>
            <param name="container">The container.</param>
            <param name="types">The types.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.WriteHtmlDocumentByType``1(System.Action{``0,System.String,System.Byte[]},``0,System.Collections.Generic.KeyValuePair{System.Type,Beyova.Api.IApiContractOptions}[])">
            <summary>
            Writes the HTML document.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="packageDocumentDelegate">The package document delegate.</param>
            <param name="container">The container.</param>
            <param name="types">The types.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.WriteApiServiceHtmlDocumentPanel(System.Text.StringBuilder,System.Type,Beyova.Api.IApiContractOptions)">
            <summary>
            Writes the API service HTML document panel.
            </summary>
            <param name="builder">The builder.</param>
            <param name="apiServiceType">Type of the API service.</param>
            <param name="apiContractOptions">The API router identifier.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.WriteEnumValueTableToFile(System.String,System.Type)">
            <summary>
            Writes the enum value table to file.
            </summary>
            <param name="containerPath">The container path.</param>
            <param name="enumType">Type of the enum.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.GetEnumValueTable(System.Type)">
            <summary>
            Gets the enum value table.
            </summary>
            <param name="enumType">Type of the enum.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.WriteEnumHtmlTable(System.Text.StringBuilder,System.Type)">
            <summary>
            Writes the enum HTML table.
            </summary>
            <param name="builder">The builder.</param>
            <param name="enumType">Type of the enum.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.WriteApiHtmlDocument(System.Text.StringBuilder,System.Type,Beyova.Api.IApiContractOptions,Beyova.Api.TokenRequiredAttribute,System.Collections.Generic.HashSet{System.Type})">
            <summary>
            Writes the API HTML document.
            </summary>
            <param name="builder">The builder.</param>
            <param name="apiServiceType">Type of the API service.</param>
            <param name="apiContractOptions">The API contract options.</param>
            <param name="classTokenRequiredAttribute">The class token required attribute.</param>
            <param name="enumSets">The enum sets.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.FillSampleValue(System.Text.StringBuilder,System.Type,System.Collections.Generic.HashSet{System.Type},System.Int32,System.String,System.Boolean,System.Boolean,System.Collections.Generic.List{System.Type})">
            <summary>
            Fills the sample value.
            </summary>
            <param name="builder">The builder.</param>
            <param name="type">The type.</param>
            <param name="enumSets">The enum sets.</param>
            <param name="indent">The indent.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="ignoreQuote">if set to <c>true</c> [ignore quote].</param>
            <param name="followingProperty">if set to <c>true</c> [following property].</param>
            <param name="objectChain">The object chain.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.WriteAsEntireHtmlFile(System.String,System.String)">
            <summary>
            Writes as entire HTML file.
            </summary>
            <param name="bodyContent">Content of the body.</param>
            <param name="title">The title.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.RemoveUnnecessaryColon(System.Text.StringBuilder)">
            <summary>
            Removes the unnecessary colon.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.FillProperty(System.Text.StringBuilder,System.String,System.Type)">
            <summary>
            Fills the property.
            </summary>
            <param name="builder">The builder.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyType">Type of the property.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.AppendComma(System.Text.StringBuilder)">
            <summary>
            Appends the comma.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.AppendColon(System.Text.StringBuilder)">
            <summary>
            Appends the colon.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.AppendChain(System.Collections.Generic.List{System.Type},System.Type)">
            <summary>
            Appends the chain.
            </summary>
            <param name="chain">The chain.</param>
            <param name="type">The type.</param>
            <returns>List&lt;Type&gt;.</returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.GetApiOperationIdentifier(Beyova.RestApi.ApiOperationAttribute)">
            <summary>
            Gets the API operation identifier.
            </summary>
            <param name="apiOperation">The API operation.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.DocumentGenerator.OverThreshold(System.Collections.Generic.List{System.Type},System.Type)">
            <summary>
            Overs the threshold.
            </summary>
            <param name="chain">The chain.</param>
            <param name="type">The type.</param>
            <returns><c>true</c> if it is over threshold, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute">
            <summary>
            Class BeyovaComponentAttribute.
            </summary>
        </member>
        <member name="P:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute.ApiTrackingType">
            <summary>
            Gets or sets the type of the API tracking.
            </summary>
            <value>The type of the API tracking.</value>
        </member>
        <member name="P:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute.RetiredStamp">
            <summary>
            Gets or sets the retired stamp.
            </summary>
            <value>
            The retired stamp.
            </value>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute.#ctor(System.String,System.String,System.Type,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute" /> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="version">The version.</param>
            <param name="apiTrackingType">Type of the API tracking, which should implement <see cref="T:Beyova.IApiTracking" /> with 0 parameter constructor.</param>
            <param name="retiredStamp">The retired stamp.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute.#ctor(System.String,System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="version">The version.</param>
            <param name="retiredStamp">The retired stamp.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute.#ctor(System.String,System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute" /> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="version">The version.</param>
            <param name="apiTrackingType">Type of the API tracking.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute"/> class.
            </summary>
            <param name="apiTrackingType">Type of the API tracking.</param>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.ProgrammingIntelligence.BeyovaComponentAttribute.GetApiTrackingInstance">
            <summary>
            Gets the API tracking instance.
            </summary>
            <returns>IApiTracking.</returns>
        </member>
        <member name="T:Beyova.DeepEqualityGenerator">
            <summary>
            Class DeepEqualityGenerator
            </summary>
        </member>
        <member name="F:Beyova.DeepEqualityGenerator._namespace">
            <summary>
            The namespace
            </summary>
        </member>
        <member name="F:Beyova.DeepEqualityGenerator.equalityInstances">
            <summary>
            The equality instances
            </summary>
        </member>
        <member name="F:Beyova.DeepEqualityGenerator.locker">
            <summary>
            The locker
            </summary>
        </member>
        <member name="M:Beyova.DeepEqualityGenerator.GetTypeName(System.Type)">
            <summary>
            Gets the name of the type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.DeepEqualityGenerator.CreateDeepEqualityInstance``1(System.StringComparison)">
            <summary>
            Creates the deep equality instance.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Beyova.DeepEqualityGenerator.FillAndTerms``1(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Type})">
            <summary>
            Fills the and terms.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder">The builder.</param>
            <param name="objects">The objects.</param>
            <param name="getType">Type of the get.</param>
        </member>
        <member name="M:Beyova.DeepEqualityGenerator.CreateDeepEqualityClassCode(System.Type,System.String,System.StringComparison)">
            <summary>
            Creates the deep equality class code.
            </summary>
            <param name="type">The type.</param>
            <param name="typeName">Name of the type.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.DeepEquality">
            <summary>
            Class DeepEquality
            </summary>
        </member>
        <member name="F:Beyova.DeepEquality.locker">
            <summary>
            The locker
            </summary>
        </member>
        <member name="M:Beyova.DeepEquality.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.DeepEquality"/> class.
            </summary>
        </member>
        <member name="M:Beyova.DeepEquality.DeepEquals``1(``0,``0,System.StringComparison)">
            <summary>
            Deeps the equals.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="object1">The object1.</param>
            <param name="object2">The object2.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.DeepEquality.CreateDeepEquality``1(System.StringComparison)">
            <summary>
            Creates the deep equality.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Beyova.DeepEqualityIgnoreAttribute">
             <summary>
            
             </summary>
             <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Beyova.DualHttpWebRequest">
            <summary>
            Class DualHttpWebRequest. This class is used when you want to deliver same http request to two destination Uri.
            </summary>
        </member>
        <member name="P:Beyova.DualHttpWebRequest.PrimaryUri">
            <summary>
            Gets or sets the primary URI.
            </summary>
            <value>The primary URI.</value>
        </member>
        <member name="P:Beyova.DualHttpWebRequest.SecondaryUri">
            <summary>
            Gets or sets the secondary URI.
            </summary>
            <value>The secondary URI.</value>
        </member>
        <member name="P:Beyova.DualHttpWebRequest.Method">
            <summary>
            Gets or sets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:Beyova.DualHttpWebRequest.CookieCollection">
            <summary>
            Gets or sets the cookie collection.
            </summary>
            <value>The cookie collection.</value>
        </member>
        <member name="P:Beyova.DualHttpWebRequest.Headers">
            <summary>
            Gets or sets the headers.
            </summary>
            <value>The headers.</value>
        </member>
        <member name="P:Beyova.DualHttpWebRequest.Body">
            <summary>
            Gets or sets the body.
            </summary>
            <value>The body.</value>
        </member>
        <member name="P:Beyova.DualHttpWebRequest.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="M:Beyova.DualHttpWebRequest.#ctor(System.Uri,System.Uri,System.String,System.Net.CookieCollection,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.DualHttpWebRequest"/> class.
            </summary>
            <param name="primaryUri">The primary URI.</param>
            <param name="secondaryUri">The secondary URI.</param>
            <param name="method">The method.</param>
            <param name="cookieCollection">The cookie collection.</param>
            <param name="headers">The headers.</param>
        </member>
        <member name="M:Beyova.DualHttpWebRequest.FillBody(System.Byte[],System.String)">
            <summary>
            Fills the body.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.DualHttpWebRequest.FillBytesAsBody(System.Byte[],System.String)">
            <summary>
            Fills the bytes as body.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.DualHttpWebRequest.FillFormAsBody(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Fills the form as body.
            </summary>
            <param name="form">The form.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.DualHttpWebRequest.FillJsonAsBody(System.String,System.String)">
            <summary>
            Fills the json as body.
            </summary>
            <param name="jsonString">The json string.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.DualHttpWebRequest.InternalReadAsText(System.Uri,System.String,System.Byte[],System.String,System.Text.Encoding,System.Net.HttpStatusCode@,System.Net.CookieCollection@,System.Net.WebHeaderCollection@)">
            <summary>
            Internals the read as text.
            </summary>
            <param name="destination">The destination.</param>
            <param name="method">The method.</param>
            <param name="body">The body.</param>
            <param name="contentType">Type of the content.</param>
            <param name="encoding">The encoding.</param>
            <param name="httpStatusCode">The HTTP status code.</param>
            <param name="cookieCollection">The cookie collection.</param>
            <param name="headers">The headers.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.DualHttpWebRequest.ReadAsText(System.Net.HttpStatusCode@,System.Net.CookieCollection@,System.Net.WebHeaderCollection@,System.Text.Encoding)">
            <summary>
            Reads as text.
            </summary>
            <param name="httpStatusCode">The HTTP status code.</param>
            <param name="cookieCollection">The cookie collection.</param>
            <param name="headers">The headers.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Beyova.BitStream">
            <summary>
            Utility that read and write bits in byte array
            </summary>
        </member>
        <member name="P:Beyova.BitStream._source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="M:Beyova.BitStream.#ctor(System.Int32)">
            <summary>
            Initialize the stream with capacity
            </summary>
            <param name="capacity">Capacity of the stream</param>
        </member>
        <member name="M:Beyova.BitStream.#ctor(System.Byte[])">
            <summary>
            Initialize the stream with a source byte array
            </summary>
            <param name="source"></param>
        </member>
        <member name="P:Beyova.BitStream.CanRead">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports reading.
            </summary>
            <value><c>true</c> if this instance can read; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.BitStream.CanSeek">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports seeking.
            </summary>
            <value><c>true</c> if this instance can seek; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.BitStream.CanWrite">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports writing.
            </summary>
            <value><c>true</c> if this instance can write; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Beyova.BitStream.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="P:Beyova.BitStream.Length">
            <summary>
            Bit length of the stream
            </summary>
        </member>
        <member name="P:Beyova.BitStream.Position">
            <summary>
            Bit position of the stream
            </summary>
        </member>
        <member name="M:Beyova.BitStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read the stream to the buffer
            </summary>
            <param name="buffer">Buffer</param>
            <param name="offset">Offset bit start position of the stream</param>
            <param name="count">Number of bits to read</param>
            <returns>Number of bits read</returns>
        </member>
        <member name="M:Beyova.BitStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Set up the stream position
            </summary>
            <param name="offset">Position</param>
            <param name="origin">Position origin</param>
            <returns>Position after setup</returns>
        </member>
        <member name="M:Beyova.BitStream.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:Beyova.BitStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write from buffer to the stream
            </summary>
            <param name="buffer"></param>
            <param name="offset">Offset start bit position of buffer</param>
            <param name="count">Number of bits</param>
        </member>
        <member name="T:Beyova.EntitySynchronizationResponse`1">
            <summary>
            Class EntitySynchronizationResponse.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Beyova.EntitySynchronizationResponse`1.LastStamp">
            <summary>
            Gets or sets the last stamp.
            </summary>
            <value>The last stamp.</value>
        </member>
        <member name="P:Beyova.EntitySynchronizationResponse`1.LastKey">
            <summary>
            Gets or sets the last key.
            </summary>
            <value>The last key.</value>
        </member>
        <member name="P:Beyova.EntitySynchronizationResponse`1.Upserts">
            <summary>
            Gets or sets the upserts.
            </summary>
            <value>The upserts.</value>
        </member>
        <member name="P:Beyova.EntitySynchronizationResponse`1.Removals">
            <summary>
            Gets or sets the removals.
            </summary>
            <value>The removals.</value>
        </member>
        <member name="M:Beyova.EntitySynchronizationResponse`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.EntitySynchronizationResponse`1" /> class.
            </summary>
        </member>
        <member name="T:Beyova.EntitySynchronizationRequest">
            <summary>
            Class EntitySynchronizationRequest.
            </summary>
        </member>
        <member name="P:Beyova.EntitySynchronizationRequest.LastSynchronizedStamp">
            <summary>
            Gets or sets the last synchronized stamp.
            </summary>
            <value>The last synchronized stamp.</value>
        </member>
        <member name="P:Beyova.EntitySynchronizationRequest.LastSynchronizedKey">
            <summary>
            Gets or sets the last synchronized key.
            </summary>
            <value>The last synchronized key.</value>
        </member>
        <member name="P:Beyova.EntitySynchronizationRequest.UpsertsOnly">
            <summary>
            Gets or sets a value indicating whether [upserts only].
            </summary>
            <value><c>true</c> if [upserts only]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.EntitySynchronizationRequest.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>The amount.</value>
        </member>
        <member name="T:Beyova.RsaKeys">
            <summary>
            Class RsaKeys.
            </summary>
        </member>
        <member name="P:Beyova.RsaKeys.PrivateKey">
            <summary>
            Gets or sets the private key.
            </summary>
            <value>The private key.</value>
        </member>
        <member name="P:Beyova.RsaKeys.PublicKey">
            <summary>
            Gets or sets the public key.
            </summary>
            <value>The public key.</value>
        </member>
        <member name="T:Beyova.RemoteConfigurationCriteria">
            <summary>
            Class RemoteConfigurationCriteria.
            </summary>
        </member>
        <member name="P:Beyova.RemoteConfigurationCriteria.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.RemoteConfigurationCriteria.SnapshotKey">
            <summary>
            Gets or sets the snapshot key.
            </summary>
            <value>The snapshot key.</value>
        </member>
        <member name="P:Beyova.RemoteConfigurationCriteria.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>The owner key.</value>
        </member>
        <member name="P:Beyova.RemoteConfigurationCriteria.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Beyova.RemoteConfigurationObject">
            <summary>
            Class RemoteConfigurationObject.
            </summary>
        </member>
        <member name="P:Beyova.RemoteConfigurationObject.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.RemoteConfigurationObject.SnapshotKey">
            <summary>
            Gets or sets the snapshot key.
            </summary>
            <value>The snapshot key.</value>
        </member>
        <member name="P:Beyova.RemoteConfigurationObject.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>The owner key.</value>
        </member>
        <member name="P:Beyova.RemoteConfigurationObject.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.RemoteConfigurationObject.Configuration">
            <summary>
            Gets or sets the configuration.
            </summary>
            <value>The configuration.</value>
        </member>
        <member name="T:Beyova.SequencedKeyDictionary`2">
            <summary>
            Class SequencedKeyDictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:Beyova.SequencedKeyDictionary`2.keys">
            <summary>
            The keys
            </summary>
        </member>
        <member name="F:Beyova.SequencedKeyDictionary`2.dictionary">
            <summary>
            The dictionary
            </summary>
        </member>
        <member name="P:Beyova.SequencedKeyDictionary`2.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:Beyova.SequencedKeyDictionary`2.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:Beyova.SequencedKeyDictionary`2.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Beyova.SequencedKeyDictionary`2.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <value><c>true</c> if this instance is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.SequencedKeyDictionary`2.Item(`0)">
            <summary>
            Gets or sets with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>TValue.</returns>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.GetIndexOf(`0)">
            <summary>
            Gets the index of.
            </summary>
            <param name="key">The key.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SequencedKeyDictionary`2" /> class.
            </summary>
            <param name="baseDictionary">The base dictionary.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SequencedKeyDictionary`2"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SequencedKeyDictionary`2"/> class.
            </summary>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SequencedKeyDictionary`2"/> class.
            </summary>
            <param name="dictionary">The dictionary.</param>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SequencedKeyDictionary`2"/> class.
            </summary>
            <param name="capacity">The initial number of elements that the <see cref="T:System.Collections.Generic.Dictionary`2" /> can contain.</param>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SequencedKeyDictionary`2" /> class.
            </summary>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
            <returns>true if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, false.</returns>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.Add(`0,`1)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
            <returns>true if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, false.</returns>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.Remove(`0)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.SortKeys(System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the keys.
            </summary>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.SortKeys``1(System.Func{`0,``0},System.Boolean)">
            <summary>
            Sorts the keys.
            </summary>
            <typeparam name="TComparableType">The type of the t comparable type.</typeparam>
            <param name="comparableSelector">The comparable selector.</param>
            <param name="isDescending">if set to <c>true</c> [is descending].</param>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Beyova.SequencedKeyDictionary`2.InternalToKeyValueList">
            <summary>
            Internals to key value list.
            </summary>
            <returns>List&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.</returns>
        </member>
        <member name="T:Beyova.AdminUserInfo">
            <summary>
            Class AdminUserInfo
            </summary>
        </member>
        <member name="P:Beyova.AdminUserInfo.LoginName">
            <summary>
            Gets or sets the name of the login.
            </summary>
            <value>The name of the login.</value>
        </member>
        <member name="P:Beyova.AdminUserInfo.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>The email.</value>
        </member>
        <member name="P:Beyova.AdminUserInfo.Cellphone">
            <summary>
            Gets or sets the cellphone.
            </summary>
            <value>
            The cellphone.
            </value>
        </member>
        <member name="P:Beyova.AdminUserInfo.ThirdPartyId">
            <summary>
            Gets or sets the third party identifier.
            </summary>
            <value>The third party identifier.</value>
        </member>
        <member name="P:Beyova.AdminUserInfo.Permissions">
            <summary>
            Gets or sets the permissions.
            </summary>
            <value>The permissions.</value>
        </member>
        <member name="P:Beyova.AdminUserInfo.AvatarKey">
            <summary>
            Gets or sets the avatar key.
            </summary>
            <value>The avatar key.</value>
        </member>
        <member name="P:Beyova.AdminUserInfo.AvatarUrl">
            <summary>
            Gets or sets the avatar URL.
            </summary>
            <value>The avatar URL.</value>
        </member>
        <member name="P:Beyova.AdminUserInfo.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>The language.</value>
        </member>
        <member name="P:Beyova.AdminUserInfo.TimeZone">
            <summary>
            Gets or sets the time zone. Unit: minute
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="P:Beyova.AdminUserInfo.ProductKey">
            <summary>
            Gets or sets the product key.
            </summary>
            <value>The product key.</value>
        </member>
        <member name="M:Beyova.AdminUserInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.AdminUserInfo"/> class.
            </summary>
        </member>
        <member name="T:Beyova.AuthenticationRequest`1">
            <summary>
            Class AuthenticationRequest.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Beyova.AuthenticationRequest`1.Platform">
            <summary>
            Gets or sets the platform.
            </summary>
            <value>The platform.</value>
        </member>
        <member name="P:Beyova.AuthenticationRequest`1.DeviceType">
            <summary>
            Gets or sets the type of the device.
            </summary>
            <value>The type of the device.</value>
        </member>
        <member name="P:Beyova.AuthenticationRequest`1.DeviceId">
            <summary>
            Gets or sets the device identifier.
            </summary>
            <value>The device identifier.</value>
        </member>
        <member name="P:Beyova.AuthenticationRequest`1.DeviceName">
            <summary>
            Gets or sets the name of the device.
            </summary>
            <value>The name of the device.</value>
        </member>
        <member name="P:Beyova.AuthenticationRequest`1.Realm">
            <summary>
            Gets or sets the realm.
            </summary>
            <value>The realm.</value>
        </member>
        <member name="T:Beyova.AuthenticationRequest">
            <summary>
            Class AuthenticationRequest.
            </summary>
        </member>
        <member name="T:Beyova.BinaryStorageCommitOption">
            <summary>
            Enum BinaryStorageCommitOption
            </summary>
        </member>
        <member name="F:Beyova.BinaryStorageCommitOption.Default">
            <summary>
            Value indicating that it is default
            </summary>
        </member>
        <member name="F:Beyova.BinaryStorageCommitOption.AllowDuplicatedInstance">
            <summary>
            Value indicating that it is allow duplicated instance
            </summary>
        </member>
        <member name="F:Beyova.BinaryStorageCommitOption.ShareDuplicatedInstance">
            <summary>
            Value indicating that it is share duplicated instance
            </summary>
        </member>
        <member name="T:Beyova.BinaryStorageCommitRequest">
            <summary>
            Class BinaryStorageCommitRequest.
            </summary>
        </member>
        <member name="P:Beyova.BinaryStorageCommitRequest.CommitOption">
            <summary>
            Gets or sets the commit option.
            </summary>
            <value>The commit option.</value>
        </member>
        <member name="T:Beyova.ComparisonResult">
            <summary>
            Class ComparisonResult.
            </summary>
        </member>
        <member name="P:Beyova.ComparisonResult.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Beyova.ComparisonResult.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>The path.</value>
        </member>
        <member name="P:Beyova.ComparisonResult.Value1">
            <summary>
            Gets or sets the value1.
            </summary>
            <value>The value1.</value>
        </member>
        <member name="P:Beyova.ComparisonResult.Value2">
            <summary>
            Gets or sets the value2.
            </summary>
            <value>The value2.</value>
        </member>
        <member name="M:Beyova.ComparisonResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ComparisonResult"/> class.
            </summary>
        </member>
        <member name="M:Beyova.ComparisonResult.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ComparisonResult"/> class.
            </summary>
            <param name="path">The last identifier.</param>
            <param name="identifier">The identifier.</param>
        </member>
        <member name="T:Beyova.FinancialItemSummary">
            <summary>
            Class FinancialItemSummary.
            </summary>
        </member>
        <member name="P:Beyova.FinancialItemSummary.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.FinancialItemSummary.Currency">
            <summary>
            Gets or sets the currency.
            </summary>
            <value>The currency.</value>
        </member>
        <member name="P:Beyova.FinancialItemSummary.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>The amount.</value>
        </member>
        <member name="P:Beyova.FinancialItemSummary.VAT">
            <summary>
            Gets or sets the vat.
            </summary>
            <value>The vat.</value>
        </member>
        <member name="P:Beyova.FinancialItemSummary.TotalPrice">
            <summary>
            Gets or sets the total price.
            </summary>
            <value>The total price.</value>
        </member>
        <member name="P:Beyova.FinancialItemSummary.TotalDiscount">
            <summary>
            Gets or sets the discount.
            </summary>
            <value>The discount.</value>
        </member>
        <member name="P:Beyova.FinancialItemSummary.Details">
            <summary>
            Gets or sets the details.
            </summary>
            <value>The details.</value>
        </member>
        <member name="M:Beyova.FinancialItemSummary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.FinancialItemSummary"/> class.
            </summary>
        </member>
        <member name="T:Beyova.FinancialItemDetail">
            <summary>
            Class FinanceItemDetail.
            </summary>
        </member>
        <member name="P:Beyova.FinancialItemDetail.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.FinancialItemDetail.Currency">
            <summary>
            Gets or sets the currency.
            </summary>
            <value>The currency.</value>
        </member>
        <member name="P:Beyova.FinancialItemDetail.Price">
            <summary>
            Gets or sets the price.
            </summary>
            <value>The price.</value>
        </member>
        <member name="P:Beyova.FinancialItemDetail.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>The amount.</value>
        </member>
        <member name="P:Beyova.FinancialItemDetail.VATRate">
            <summary>
            Gets or sets the vat rate.
            </summary>
            <value>The vat rate.</value>
        </member>
        <member name="P:Beyova.FinancialItemDetail.VAT">
            <summary>
            Gets or sets the vat.
            </summary>
            <value>The vat.</value>
        </member>
        <member name="P:Beyova.FinancialItemDetail.TotalPrice">
            <summary>
            Gets or sets the total price.
            </summary>
            <value>The total price.</value>
        </member>
        <member name="P:Beyova.FinancialItemDetail.Discount">
            <summary>
            Gets or sets the discount.
            </summary>
            <value>The discount.</value>
        </member>
        <member name="T:Beyova.GeoInfoBase">
            <summary>
            Class GeoInfoBase.
            </summary>
        </member>
        <member name="P:Beyova.GeoInfoBase.IsoCode">
            <summary>
            Gets or sets the iso code.
            </summary>
            <value>The iso code.</value>
        </member>
        <member name="P:Beyova.GeoInfoBase.CountryName">
            <summary>
            Gets or sets the name of the country.
            </summary>
            <value>The name of the country.</value>
        </member>
        <member name="P:Beyova.GeoInfoBase.CityName">
            <summary>
            Gets or sets the name of the city.
            </summary>
            <value>The name of the city.</value>
        </member>
        <member name="P:Beyova.GeoInfoBase.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <value>The latitude.</value>
        </member>
        <member name="P:Beyova.GeoInfoBase.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <value>The longitude.</value>
        </member>
        <member name="T:Beyova.Concurrent.ConcurrentMatrixList`1">
            <summary>
            Class ConcurrentMatrixList.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Beyova.Concurrent.ConcurrentMatrixList`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.Concurrent.ConcurrentMatrixList`1" /> class.
            </summary>
            <param name="keyCaseSensitive">if set to <c>true</c> [key case sensitive].</param>
        </member>
        <member name="M:Beyova.Concurrent.ConcurrentMatrixList`1.Add(System.String,`0)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Beyova.Concurrent.ConcurrentMatrixList`1.GetCollectionByKey(System.String,System.Boolean)">
            <summary>
            Gets the collection by key.
            </summary>
            <param name="key">The key.</param>
            <param name="createIfNotExist">if set to <c>true</c> [create if not exist].</param>
            <returns>List&lt;T&gt;.</returns>
        </member>
        <member name="T:Beyova.MatrixList`1">
            <summary>
            Class MatrixList.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Beyova.MatrixList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.MatrixList`1" /> class.
            </summary>
        </member>
        <member name="M:Beyova.MatrixList`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.MatrixList`1" /> class.
            </summary>
            <param name="keyCaseSensitive">if set to <c>true</c> [key case sensitive].</param>
        </member>
        <member name="M:Beyova.MatrixList`1.#ctor(Beyova.MatrixList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.MatrixList`1" /> class.
            </summary>
            <param name="matrixList">The matrix list.</param>
        </member>
        <member name="M:Beyova.MatrixList`1.#ctor(Beyova.MatrixList{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.MatrixList`1"/> class.
            </summary>
            <param name="matrixList">The matrix list.</param>
            <param name="keyCaseSensitive">if set to <c>true</c> [key case sensitive].</param>
        </member>
        <member name="M:Beyova.MatrixList`1.IsKeyValid(System.String)">
            <summary>
            Determines whether [is key valid] [the specified key].
            </summary>
            <param name="key">The key.</param>
            <returns><c>true</c> if [is key valid] [the specified key]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Beyova.MatrixList`2">
            <summary>
            Class MatrixList.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
        </member>
        <member name="M:Beyova.MatrixList`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.MatrixList`2" /> class.
            </summary>
        </member>
        <member name="M:Beyova.MatrixList`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class that is empty, has the specified initial capacity, and uses the default equality comparer for the key type.
            </summary>
            <param name="capacity">The initial number of elements that the <see cref="T:System.Collections.Generic.Dictionary`2" /> can contain.</param>
        </member>
        <member name="M:Beyova.MatrixList`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class that is empty, has the default initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1" /> for the type of the key.</param>
        </member>
        <member name="M:Beyova.MatrixList`2.#ctor(Beyova.MatrixList{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.MatrixList`2"/> class.
            </summary>
            <param name="matrixList">The matrix list.</param>
        </member>
        <member name="M:Beyova.MatrixList`2.#ctor(Beyova.MatrixList{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.MatrixList`2"/> class.
            </summary>
            <param name="matrixList">The matrix list.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:Beyova.MatrixList`2.InitializeMatrixList(Beyova.MatrixList{`0,`1})">
            <summary>
            Initializes the matrix list.
            </summary>
            <param name="matrixList">The matrix list.</param>
        </member>
        <member name="M:Beyova.MatrixList`2.GetOrCreate(`0)">
            <summary>
            Gets the or create.
            </summary>
            <param name="key">The key.</param>
            <returns>List&lt;TValue&gt;.</returns>
        </member>
        <member name="M:Beyova.MatrixList`2.Add(`0,`1)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Beyova.MatrixList`2.GetCollectionByKey(`0,System.Boolean)">
            <summary>
            Gets the collection by key.
            </summary>
            <param name="key">The key.</param>
            <param name="createIfNotExist">if set to <c>true</c> [create if not exist].</param>
            <returns>List&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.MatrixList`2.IsKeyValid(`0)">
            <summary>
            Determines whether [is key valid] [the specified key].
            </summary>
            <param name="key">The key.</param>
            <returns><c>true</c> if [is key valid] [the specified key]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.MatrixList`2.ValidateKey(`0)">
            <summary>
            Validates the key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="T:Beyova.AppServiceStatus">
            <summary>
            Class AppServiceStatus.
            </summary>
        </member>
        <member name="F:Beyova.AppServiceStatus.None">
            <summary>
            Value indicating it is none
            </summary>
        </member>
        <member name="F:Beyova.AppServiceStatus.Available">
            <summary>
            Value indicating it is available
            </summary>
        </member>
        <member name="F:Beyova.AppServiceStatus.Unavailable">
            <summary>
            Value indicating it is unavailable
            </summary>
        </member>
        <member name="F:Beyova.AppServiceStatus.Maintenance">
            <summary>
            Value indicating it is maintenance
            </summary>
        </member>
        <member name="T:Beyova.Schedule">
            <summary>
            class Schedule
            </summary>
        </member>
        <member name="P:Beyova.Schedule.Recurrence">
            <summary>
            Gets or sets the recurrence.
            </summary>
            <value>The recurrence.</value>
        </member>
        <member name="P:Beyova.Schedule.HitReference">
            <summary>
            Gets or sets the hit reference.
            </summary>
            <value>The hit reference.</value>
        </member>
        <member name="P:Beyova.Schedule.StartStamp">
            <summary>
            Gets or sets the start stamp.
            </summary>
            <value>The start stamp.</value>
        </member>
        <member name="P:Beyova.Schedule.EndStamp">
            <summary>
            Gets or sets the end stamp.
            </summary>
            <value>The end stamp.</value>
        </member>
        <member name="M:Beyova.Schedule.GetNextOccurrence(System.DateTime)">
            <summary>
            Gets the next occurrence.
            </summary>
            <param name="nowStandardStamp">The now standard stamp.</param>
            <returns>System.Nullable&lt;DateTime&gt;.</returns>
        </member>
        <member name="M:Beyova.Schedule.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:Beyova.Schedule`1">
            <summary>
            Class Schedule.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Beyova.Schedule`1.Object">
            <summary>
            Gets or sets the object.
            </summary>
            <value>The object.</value>
        </member>
        <member name="T:Beyova.BaseCredential">
            <summary>
            Class BaseCredential.
            </summary>
        </member>
        <member name="P:Beyova.BaseCredential.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.BaseCredential.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="M:Beyova.BaseCredential.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BaseCredential"/> class.
            </summary>
        </member>
        <member name="T:Beyova.ServiceRuntimeStatus">
            <summary>
            Enum ServiceRuntimeStatus
            </summary>
        </member>
        <member name="F:Beyova.ServiceRuntimeStatus.Unknown">
            <summary>
            Value indicating it is unknown
            </summary>
        </member>
        <member name="F:Beyova.ServiceRuntimeStatus.Initializing">
            <summary>
            Value indicating it is initializing
            </summary>
        </member>
        <member name="F:Beyova.ServiceRuntimeStatus.Running">
            <summary>
            Value indicating it is running
            </summary>
        </member>
        <member name="F:Beyova.ServiceRuntimeStatus.Isolated">
            <summary>
            Value indicating it is isolated
            </summary>
        </member>
        <member name="F:Beyova.ServiceRuntimeStatus.UpdatingComponents">
            <summary>
            Value indicating it is updating components
            </summary>
        </member>
        <member name="F:Beyova.ServiceRuntimeStatus.Maintenance">
            <summary>
            Value indicating it is maintenance
            </summary>
        </member>
        <member name="F:Beyova.ServiceRuntimeStatus.Unavailable">
            <summary>
            Value indicating it is unavailable
            </summary>
        </member>
        <member name="T:Beyova.DiskDriveInfo">
            <summary>
            Class DiskDriveInfo.
            </summary>
        </member>
        <member name="P:Beyova.DiskDriveInfo.IsReady">
            <summary>
            Gets a value indicating whether this instance is ready.
            </summary>
            <value><c>true</c> if this instance is ready; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.DiskDriveInfo.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.DiskDriveInfo.TotalFreeSpace">
            <summary>
            Gets the total free space.
            </summary>
            <value>The total free space.</value>
        </member>
        <member name="P:Beyova.DiskDriveInfo.TotalSize">
            <summary>
            Gets the total size.
            </summary>
            <value>The total size.</value>
        </member>
        <member name="P:Beyova.DiskDriveInfo.VolumeLabel">
            <summary>
            Gets or sets the volume label.
            </summary>
            <value>The volume label.</value>
        </member>
        <member name="T:Beyova.MachineHealth">
            <summary>
            Class MachineHealth.
            </summary>
        </member>
        <member name="P:Beyova.MachineHealth.MemoryUsage">
            <summary>
            Gets or sets the memory usage.
            </summary>
            <value>The memory usage.</value>
        </member>
        <member name="P:Beyova.MachineHealth.TotalMemory">
            <summary>
            Gets or sets the total memory.
            </summary>
            <value>The total memory.</value>
        </member>
        <member name="P:Beyova.MachineHealth.CpuUsage">
            <summary>
            Gets or sets the cpu usage. Unit: %.
            </summary>
            <value>The cpu usage.</value>
        </member>
        <member name="P:Beyova.MachineHealth.ServerName">
            <summary>
            Gets or sets the name of the server.
            </summary>
            <value>The name of the server.</value>
        </member>
        <member name="P:Beyova.MachineHealth.HostName">
            <summary>
            Gets or sets the name of the host.
            </summary>
            <value>The name of the host.</value>
        </member>
        <member name="P:Beyova.MachineHealth.IpAddress">
            <summary>
            Gets or sets the ip address.
            </summary>
            <value>The ip address.</value>
        </member>
        <member name="M:Beyova.MachineHealth.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.MachineHealth"/> class.
            </summary>
        </member>
        <member name="T:Beyova.TimeScope">
            <summary>
            Enum TimeScope
            </summary>
        </member>
        <member name="F:Beyova.TimeScope.None">
            <summary>
            Value indicating it is none
            </summary>
        </member>
        <member name="F:Beyova.TimeScope.Hour">
            <summary>
            Value indicating it is hour
            </summary>
        </member>
        <member name="F:Beyova.TimeScope.Day">
            <summary>
            Value indicating it is day
            </summary>
        </member>
        <member name="F:Beyova.TimeScope.Week">
            <summary>
            Value indicating it is week
            </summary>
        </member>
        <member name="F:Beyova.TimeScope.Month">
            <summary>
            Value indicating it is month
            </summary>
        </member>
        <member name="F:Beyova.TimeScope.Year">
            <summary>
            Value indicating it is year
            </summary>
        </member>
        <member name="T:Beyova.TransactionAudit">
            <summary>
            Class TransactionAudit.
            </summary>
        </member>
        <member name="P:Beyova.TransactionAudit.Balance">
            <summary>
            Gets or sets the balance.
            </summary>
            <value>
            The balance.
            </value>
        </member>
        <member name="P:Beyova.TransactionAudit.CreatedStamp">
            <summary>
            Gets or sets the created stamp.
            </summary>
            <value>
            The created stamp.
            </value>
        </member>
        <member name="P:Beyova.TransactionAudit.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Beyova.TransactionAudit.LastUpdatedStamp">
            <summary>
            Gets or sets the last updated stamp.
            </summary>
            <value>
            The last updated stamp.
            </value>
        </member>
        <member name="P:Beyova.TransactionAudit.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>
            The owner key.
            </value>
        </member>
        <member name="P:Beyova.TransactionAudit.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="P:Beyova.TransactionAudit.TransactionState">
            <summary>
            Gets or sets the state of the transaction.
            </summary>
            <value>
            The state of the transaction.
            </value>
        </member>
        <member name="T:Beyova.TransactionBase">
            <summary>
            Class TransactionBase.
            </summary>
        </member>
        <member name="P:Beyova.TransactionBase.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>
            The amount.
            </value>
        </member>
        <member name="P:Beyova.TransactionBase.Currency">
            <summary>
            Gets or sets the currency.
            </summary>
            <value>
            The currency.
            </value>
        </member>
        <member name="P:Beyova.TransactionBase.PartyTransactionIdentifier">
            <summary>
            Gets or sets the party transaction identifier.
            </summary>
            <value>
            The party transaction identifier.
            </value>
        </member>
        <member name="P:Beyova.TransactionBase.RelatedPartyIdentifier">
            <summary>
            Gets or sets the related party identifier.
            </summary>
            <value>
            The related party identifier.
            </value>
        </member>
        <member name="T:Beyova.TransactionCriteria">
            <summary>
            Class TransactionCriteria.
            </summary>
        </member>
        <member name="P:Beyova.TransactionCriteria.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Beyova.TransactionCriteria.FromStamp">
            <summary>
            Gets or sets from stamp.
            </summary>
            <value>From stamp.</value>
        </member>
        <member name="P:Beyova.TransactionCriteria.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.TransactionCriteria.OrderDescending">
            <summary>
            Gets or sets a value indicating whether [order descending].
            </summary>
            <value><c>true</c> if [order descending]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.TransactionCriteria.ToStamp">
            <summary>
            Gets or sets to stamp.
            </summary>
            <value>To stamp.</value>
        </member>
        <member name="P:Beyova.TransactionCriteria.TransactionState">
            <summary>
            Gets or sets the state of the transaction.
            </summary>
            <value>The state of the transaction.</value>
        </member>
        <member name="T:Beyova.TransactionRequest">
            <summary>
            Class TransactionRequest.
            </summary>
        </member>
        <member name="P:Beyova.TransactionRequest.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>
            The owner key.
            </value>
        </member>
        <member name="T:Beyova.TransactionState">
            <summary>
            Enum TransactionState
            </summary>
        </member>
        <member name="F:Beyova.TransactionState.None">
            <summary>
                The value indicating that transaction is none.
            </summary>
        </member>
        <member name="F:Beyova.TransactionState.Created">
            <summary>
                The value indicating that transaction is created.
            </summary>
        </member>
        <member name="F:Beyova.TransactionState.Pending">
            <summary>
             The value indicating that transaction is pending.
            </summary>
        </member>
        <member name="F:Beyova.TransactionState.InProcess">
            <summary>
                The value indicating that transaction is in process.
            </summary>
        </member>
        <member name="F:Beyova.TransactionState.Completed">
            <summary>
                The value indicating that transaction is completed.
            </summary>
        </member>
        <member name="F:Beyova.TransactionState.Failed">
            <summary>
                The value indicating that transaction is failed.
            </summary>
        </member>
        <member name="F:Beyova.TransactionState.Canceled">
            <summary>
                The value indicating that transaction is canceled.
            </summary>
        </member>
        <member name="T:Beyova.UserPreferenceCriteria">
            <summary>
            Class UserPreferenceCriteria.
            </summary>
        </member>
        <member name="P:Beyova.UserPreferenceCriteria.Realm">
            <summary>
            Gets or sets the realm. Realm can be used based on App, Application, Product, etc.
            </summary>
            <value>The realm.</value>
        </member>
        <member name="P:Beyova.UserPreferenceCriteria.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.UserPreferenceCriteria.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>The owner key.</value>
        </member>
        <member name="P:Beyova.UserPreferenceCriteria.Category">
            <summary>
            Gets or sets the category.
            </summary>
            <value>The category.</value>
        </member>
        <member name="T:Beyova.UserPreference">
            <summary>
            Class UserPreference.
            </summary>
        </member>
        <member name="P:Beyova.UserPreference.Realm">
            <summary>
            Gets or sets the realm. Realm can be used based on App, Application, Product, etc.
            </summary>
            <value>The realm.</value>
        </member>
        <member name="P:Beyova.UserPreference.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Beyova.UserPreference.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>The owner key.</value>
        </member>
        <member name="P:Beyova.UserPreference.Category">
            <summary>
            Gets or sets the category.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:Beyova.UserPreference.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Beyova.UserPreference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.UserPreference"/> class.
            </summary>
        </member>
        <member name="M:Beyova.UserPreference.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="obj">The object.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.UserPreference.GetValue(System.Type)">
            <summary>
            Gets the value.
            </summary>
            <param name="type">The type.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.UserPreference.GetValue``1">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>T.</returns>
        </member>
        <member name="T:Beyova.IOExtension">
            <summary>
            Extensions forIOExtension
            </summary>
        </member>
        <member name="F:Beyova.IOExtension.dot">
            <summary>
            The dot
            </summary>
        </member>
        <member name="M:Beyova.IOExtension.GetSubDirectory(System.IO.DirectoryInfo,System.String)">
            <summary>
            Gets the sub directory.
            </summary>
            <param name="directory">The directory.</param>
            <param name="subDirectoryName">Name of the sub directory.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.IOExtension.ClearFiles(System.IO.DirectoryInfo)">
            <summary>
            Clears the files.
            </summary>
            <param name="directory">The directory.</param>
        </member>
        <member name="M:Beyova.IOExtension.CheckDirectoryExist(System.IO.DirectoryInfo)">
            <summary>
            Checks the directory exist.
            </summary>
            <param name="directory">The directory.</param>
        </member>
        <member name="M:Beyova.IOExtension.CombineExtension(System.String,System.String)">
            <summary>
            Combines the extension.
            </summary>
            <param name="pureFileName">Name of the pure file.</param>
            <param name="extension">The extension.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.IOExtension.GetPureFileName(System.String)">
            <summary>
            Gets the name of the pure file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.IOExtension.GetTempFolder(System.Nullable{System.Guid}@)">
            <summary>
            Gets the temporary folder.
            If the tempIdentity is null, method would assign one.
            If the folder of tempIdentity is not existed, it would be created.
            </summary>
            <param name="tempIdentity">The temporary identity.</param>
            <returns>
            DirectoryInfo.
            </returns>
        </member>
        <member name="M:Beyova.IOExtension.ReadFileContents(System.String,System.Text.Encoding)">
            <summary>
            Reads the file contents.
            </summary>
            <param name="path">The path.</param>
            <param name="encoding">The encoding.</param>
            <returns>
            System.String.
            </returns>
        </member>
        <member name="M:Beyova.IOExtension.ReadFileContents(System.IO.FileInfo,System.Text.Encoding)">
            <summary>
            Reads the file contents.
            </summary>
            <param name="fileInfo">The file information.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.IOExtension.ReadFileBytes(System.String)">
            <summary>
            Reads the file bytes.
            </summary>
            <param name="path">The path.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.IOExtension.ReadFileBytes(System.IO.FileInfo)">
            <summary>
            Reads the file bytes.
            </summary>
            <param name="fileInfo">The file information.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.IOExtension.GetAbsoluteUri(System.IO.DirectoryInfo,System.String)">
            <summary>
            Gets the absolute URI.
            If the relative Uri is started with ~/ or /, then directory should be the root directory of site.
            If the relative Uri is started with ../ or ./, then directory should be the current directory.
            </summary>
            <param name="directory">The directory.</param>
            <param name="relativeUri">The relative URI.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.IOExtension.GenerateRelativeResourceUri(System.IO.DirectoryInfo,System.String)">
            <summary>
            Generates the relative resource URI.
            </summary>
            <param name="currentDirectory">The current directory.</param>
            <param name="targetAbsoluteUri">The target absolute URI.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.IOExtension.FullName(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Fulls the name.
            </summary>
            <param name="directory">The directory.</param>
            <param name="endWithSlash">if set to <c>true</c> [end with slash].</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.IOExtension.ToHex(System.Byte[])">
            <summary>
            To the hexadecimal.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.IOExtension.ReadStreamToBytes(System.IO.Stream,System.Boolean)">
            <summary>
            Reads the stream to bytes.
            </summary>
            <param name="stream">The stream.</param>
            <param name="closeWhenFinish">if set to <c>true</c> [close when finish].</param>
            <returns>System.Byte[][].</returns>
        </member>
        <member name="M:Beyova.IOExtension.ToBytes(System.IO.Stream)">
            <summary>
            To the bytes.
            </summary>
            <param name="stream">The stream.</param>
            <returns>The <see cref="T:System.Byte" />  array of stream.</returns>
        </member>
        <member name="M:Beyova.IOExtension.ToStream(System.Byte[])">
            <summary>
            To the stream.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>The <see cref="T:System.IO.Stream" />  for byte array.</returns>
        </member>
        <member name="M:Beyova.IOExtension.IsRelativePath(System.String)">
            <summary>
            Determines whether [is relative path] [the specified path].
            </summary>
            <param name="path">The path.</param>
            <returns><c>true</c> if [is relative path] [the specified path]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.IOExtension.CopyStream(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies the stream.
            </summary>
            <param name="sourceStream">The source stream.</param>
            <param name="destinationStream">The destination stream.</param>
        </member>
        <member name="M:Beyova.IOExtension.EnsureExistance(System.IO.DirectoryInfo)">
            <summary>
            Ensures the existance.
            </summary>
            <param name="directoryInfo">The directory information.</param>
        </member>
        <member name="T:Beyova.DatabaseExtension">
            <summary>
            Extensions for common type and common actions
            </summary>
        </member>
        <member name="M:Beyova.DatabaseExtension.PreventSqlInjection(System.String)">
            <summary>
            Prevents the SQL injection.
            </summary>
            <param name="value">The value.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.DatabaseExtension.HasColumn(System.Data.IDataRecord,System.String)">
            <summary>
            Determines whether the specified data reader has column.
            </summary>
            <param name="dataReader">The data reader.</param>
            <param name="columnName">Name of the column.</param>
            <returns><c>true</c> if the specified dr has column; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Beyova.CompressionExtension">
            <summary>
            Class CompressionExtension.
            </summary>
        </member>
        <member name="M:Beyova.CompressionExtension.CompressBytesToString(System.Byte[])">
            <summary>
            Compresses the specified bytes object.
            </summary>
            <param name="bytesObject">The bytes object.</param>
            <returns>System.String.</returns>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">Compress</exception>
        </member>
        <member name="M:Beyova.CompressionExtension.Compress(System.String,System.Text.Encoding)">
            <summary>
            Compresses the specified string object.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CompressionExtension.CompressObjectToString(System.Object)">
            <summary>
            Compresses the object automatic string.
            </summary>
            <param name="anyObject">Any object.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CompressionExtension.Decompress(System.String,System.Text.Encoding)">
            <summary>
            Decompresses the specified string object.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CompressionExtension.DecompressStringToObject(System.String)">
            <summary>
            Decompresses the string automatic object.
            </summary>
            <param name="stringObject">The string object.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.CompressionExtension.DecompressStringToBytes(System.String)">
            <summary>
            Decompresses the string automatic bytes.
            </summary>
            <param name="stringObject">The string object.</param>
            <returns>System.Byte[][].</returns>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">Decompress</exception>
        </member>
        <member name="M:Beyova.CompressionExtension.Decompress(System.Byte[])">
            <summary>
            Decompresses the specified bytes.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>System.Byte[][].</returns>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">Decompress</exception>
        </member>
        <member name="M:Beyova.CompressionExtension.ExtractZipFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            Extracts the zip file.
            </summary>
            <param name="zipFilePath">The zip file path.</param>
            <param name="extractPath">The extract path.</param>
            <param name="encoding">The encoding.</param>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">ExtractZipFile</exception>
        </member>
        <member name="M:Beyova.CompressionExtension.GetArchiveEntryByPath(System.IO.Compression.ZipArchive,System.String)">
            <summary>
            Gets the archive entry by path.
            </summary>
            <param name="archive">The archive.</param>
            <param name="entryPathToExtract">The entry path to extract.
            <remarks><example>Payload/xxx.app/Info.plist</example></remarks>
            </param>
            <returns>ZipArchiveEntry.</returns>
        </member>
        <member name="M:Beyova.CompressionExtension.ExtractZipByEntryPath(System.IO.Stream,System.String,System.String)">
            <summary>
            Extracts the zip by entry path.
            </summary>
            <param name="zipFileStreamToOpen">The zip file stream to open.</param>
            <param name="entryPathToExtract">The entry path to extract.
            <remarks><example>Payload/xxx.app/Info.plist</example></remarks></param>
            <param name="destinationDirectoryPath">The destination directory path.</param>
        </member>
        <member name="M:Beyova.CompressionExtension.ExtractZipByEntryPath(System.IO.Stream,System.String)">
            <summary>
            Extracts the zip by entry path.
            </summary>
            <param name="zipFileStreamToOpen">The zip file stream to open.</param>
            <param name="entryPathToExtract">The entry path to extract.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.CompressionExtension.ZipAsBytes(System.Collections.Generic.Dictionary{System.String,System.Byte[]},System.IO.Compression.CompressionLevel)">
            <summary>
            Zips as bytes.
            <remarks>
            In parameter items, if you want to add folder, please use path like {directory}/{fileName}.
            <example>
            Folder1/Folder11/File1.txt
            </example>
            </remarks>
            </summary>
            <param name="items">The items.</param>
            <param name="compressionLevel">The compression level.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CompressionExtension.ZipAsBytes(System.Byte[],System.String,System.IO.Compression.CompressionLevel)">
            <summary>
            Zips as bytes.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="fileName">Name of the file.</param>
            <param name="compressionLevel">The compression level.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CompressionExtension.ZipToPath(System.Collections.Generic.Dictionary{System.String,System.Byte[]},System.String,System.IO.Compression.CompressionLevel)">
            <summary>
            Zips to path.
            </summary>
            <param name="items">The items.</param>
            <param name="destinationPath">The destination path.</param>
            <param name="compressionLevel">The compression level.</param>
        </member>
        <member name="M:Beyova.CompressionExtension.ZipToPath(System.Byte[],System.String,System.String,System.IO.Compression.CompressionLevel)">
            <summary>
            Zips to path.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="fileName">Name of the file.</param>
            <param name="destinationPath">The destination path.</param>
            <param name="compressionLevel">The compression level.</param>
        </member>
        <member name="M:Beyova.CompressionExtension.ZipAsBytes(System.Object,System.Collections.Generic.KeyValuePair{System.String,System.Byte[]}[])">
            <summary>
            Zips as bytes.
            </summary>
            <param name="anyObject">Any object.</param>
            <param name="archiveItems">The archive items.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.SentenceExtension">
            <summary>
            Class SentenceExtension
            </summary>
        </member>
        <member name="M:Beyova.SentenceExtension.SplitSentenceByUpperCases(System.String)">
            <summary>
            Splits the sentence by upper cases.
            </summary>
            <param name="anyString">Any string.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.SentenceExtension.CombineSentence(System.String,System.Char[],System.Char)">
            <summary>
            Combines the sentence.
            </summary>
            <param name="sentence">The sentence.</param>
            <param name="specialCharactors">The special charactors.</param>
            <param name="specialCharactorReplace">The special charactor replace.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Beyova.ThreadExtension">
            <summary>
            Class ThreadExtension.
            </summary>
        </member>
        <member name="F:Beyova.ThreadExtension._threadData">
            <summary>
            The thread data
            </summary>
        </member>
        <member name="P:Beyova.ThreadExtension.ThreadData">
            <summary>
            Gets the thread data.
            </summary>
            <value>The thread data.</value>
        </member>
        <member name="M:Beyova.ThreadExtension.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Beyova.ThreadExtension.SetThreadData(System.String,System.Object)">
            <summary>
            Sets the thread data.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Beyova.ThreadExtension.GetThreadData(System.String)">
            <summary>
            Gets the thread data.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ThreadExtension.RunAsNewBackgroundThread(System.Threading.ThreadStart)">
            <summary>
            Runs as new background thread.
            </summary>
            <param name="threadStart">The thread start.</param>
            <returns>System.Nullable&lt;System.Int32&gt;.</returns>
        </member>
        <member name="M:Beyova.ThreadExtension.RunAsNewBackgroundThread(System.Threading.ParameterizedThreadStart,System.Object)">
            <summary>
            Runs as new background thread.
            </summary>
            <param name="threadStart">The thread start.</param>
            <param name="inputParameter">The input parameter.</param>
            <returns>System.Nullable&lt;System.Int32&gt;.</returns>
        </member>
        <member name="M:Beyova.ThreadExtension.RunThreadTask(System.Threading.WaitCallback)">
            <summary>
            Runs the thread task.
            </summary>
            <param name="callback">The callback.</param>
            <returns><c>true</c> if succeed to run, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.ThreadExtension.RunThreadTask(System.Threading.WaitCallback,System.Object)">
            <summary>
            Runs the thread task.
            </summary>
            <param name="callback">The callback.</param>
            <param name="inputParameter">The input parameter.</param>
            <returns><c>true</c> if succeed to run, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Beyova.EnvironmentCore">
            <summary>
            Class EnvironmentCore.
            </summary>
        </member>
        <member name="F:Beyova.EnvironmentCore.ApplicationBaseDirectory">
            <summary>
            The application base directory
            </summary>
        </member>
        <member name="F:Beyova.EnvironmentCore.LogDirectory">
            <summary>
            The log directory
            </summary>
        </member>
        <member name="F:Beyova.EnvironmentCore.ApplicationId">
            <summary>
            The application identifier
            </summary>
        </member>
        <member name="F:Beyova.EnvironmentCore.ServerName">
            <summary>
            The server name
            </summary>
        </member>
        <member name="F:Beyova.EnvironmentCore.LocalMachineHostName">
            <summary>
            The local machine host name
            </summary>
        </member>
        <member name="F:Beyova.EnvironmentCore.LocalMachineIpAddress">
            <summary>
            The local machine ip address
            </summary>
        </member>
        <member name="P:Beyova.EnvironmentCore.ProductName">
            <summary>
            Gets the name of the product.
            </summary>
            <value>The name of the product.</value>
        </member>
        <member name="F:Beyova.EnvironmentCore.DescendingAssemblyDependencyChain">
            <summary>
            The descending assembly dependency chain. Descending here means order by referenced amount.
            So result would be like: web -> core -> contract - > common -> json.net, etc.
            </summary>
        </member>
        <member name="F:Beyova.EnvironmentCore.AscendingAssemblyDependencyChain">
            <summary>
            The ascending assembly dependency chain
            </summary>
        </member>
        <member name="P:Beyova.EnvironmentCore.EntryAssembly">
            <summary>
            Gets the entry assembly.
            </summary>
            <value>
            The entry assembly.
            </value>
        </member>
        <member name="M:Beyova.EnvironmentCore.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Beyova.EnvironmentCore"/> class.
            </summary>
        </member>
        <member name="P:Beyova.EnvironmentCore.TotalMemory">
            <summary>
            Gets the total memory. Unit: bytes
            </summary>
            <value>The total memory.</value>
        </member>
        <member name="M:Beyova.EnvironmentCore.FindProductName">
            <summary>
            Finds the name of the product.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EnvironmentCore.GetDirectory(System.String,System.String)">
            <summary>
            Gets the directory.
            </summary>
            <param name="directory">The directory.</param>
            <param name="defaultSubDirectoryName">Default name of the sub directory.</param>
            <returns>System.IO.DirectoryInfo.</returns>
        </member>
        <member name="M:Beyova.EnvironmentCore.GetAssemblyHash">
            <summary>
            Gets the assembly hash.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="T:Beyova.IAuthenticationResult`2">
            <summary>
            Interface IUserInfo
            </summary>
        </member>
        <member name="P:Beyova.IAuthenticationResult`2.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.IAuthenticationResult`2.TokenExpiredStamp">
            <summary>
            Gets or sets the token expired stamp.
            </summary>
            <value>The token expired stamp.</value>
        </member>
        <member name="P:Beyova.IAuthenticationResult`2.UserInfo">
            <summary>
            Gets or sets the user information.
            </summary>
            <value>The user information.</value>
        </member>
        <member name="T:Beyova.IAuthenticationResult`1">
            <summary>
            Interface IAuthenticationResult
            </summary>
            <typeparam name="TUserInfo">The type of the t user information.</typeparam>
        </member>
        <member name="P:Beyova.IAuthenticationResult`1.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.IAuthenticationResult`1.TokenExpiredStamp">
            <summary>
            Gets or sets the token expired stamp.
            </summary>
            <value>The token expired stamp.</value>
        </member>
        <member name="P:Beyova.IAuthenticationResult`1.UserInfo">
            <summary>
            Gets or sets the user information.
            </summary>
            <value>The user information.</value>
        </member>
        <member name="T:Beyova.IUserCriteria`1">
            <summary>
            Interface IUserCriteria
            </summary>
        </member>
        <member name="P:Beyova.IUserCriteria`1.FunctionalRole">
            <summary>
            Gets or sets the functional role.
            </summary>
            <value>The functional role.</value>
        </member>
        <member name="P:Beyova.IUserCriteria`1.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:Beyova.IUserCriteria`1.Cellphone">
            <summary>
            Gets or sets the cellphone.
            </summary>
            <value>
            The cellphone.
            </value>
        </member>
        <member name="P:Beyova.IUserCriteria`1.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.IUserCriteria`1.StartIndex">
            <summary>
            Gets or sets the start index.
            </summary>
            <value>The start index.</value>
        </member>
        <member name="T:Beyova.IWorkflowBasedObject">
            <summary>
            Interface IWorkflowBasedObject
            </summary>
        </member>
        <member name="P:Beyova.IWorkflowBasedObject.WorkflowState">
            <summary>
            Gets or sets the state of the workflow.
            </summary>
            <value>The state of the workflow.</value>
        </member>
        <member name="T:Beyova.ISimpleBaseObject">
            <summary>
            Interface ISimpleBaseObject
            </summary>
        </member>
        <member name="P:Beyova.ISimpleBaseObject.CreatedStamp">
            <summary>
            Gets or sets the created stamp.
            </summary>
            <value>The created stamp.</value>
        </member>
        <member name="P:Beyova.ISimpleBaseObject.LastUpdatedStamp">
            <summary>
            Gets or sets the last updated stamp.
            </summary>
            <value>The last updated stamp.</value>
        </member>
        <member name="P:Beyova.ISimpleBaseObject.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="T:Beyova.IUserInfo`1">
            <summary>
            Interface IUserInfo
            </summary>
        </member>
        <member name="P:Beyova.IUserInfo`1.FunctionalRole">
            <summary>
            Gets or sets the functional role.
            </summary>
            <value>The functional role.</value>
        </member>
        <member name="P:Beyova.IUserInfo`1.Gender">
            <summary>
            Gets or sets the gender.
            </summary>
            <value>The gender.</value>
        </member>
        <member name="T:Beyova.IUserInfo">
            <summary>
            Interface IUserInfo
            </summary>
        </member>
        <member name="P:Beyova.IUserInfo.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>The email.</value>
        </member>
        <member name="P:Beyova.IUserInfo.Cellphone">
            <summary>
            Gets or sets the cellphone.
            </summary>
            <value>
            The cellphone.
            </value>
        </member>
        <member name="P:Beyova.IUserInfo.AvatarKey">
            <summary>
            Gets or sets the avatar key.
            </summary>
            <value>The avatar key.</value>
        </member>
        <member name="P:Beyova.IUserInfo.AvatarUrl">
            <summary>
            Gets or sets the avatar URL.
            </summary>
            <value>The avatar URL.</value>
        </member>
        <member name="P:Beyova.IUserInfo.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>The language.</value>
        </member>
        <member name="P:Beyova.IUserInfo.TimeZone">
            <summary>
            Gets or sets the time zone. Unit: minute
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="T:Beyova.AccessCredential">
            <summary>
            Class AccessCredential.
            </summary>
        </member>
        <member name="P:Beyova.AccessCredential.AccessIdentifier">
            <summary>
            Gets or sets the access identifier.
            </summary>
            <value>The access identifier.</value>
        </member>
        <member name="P:Beyova.AccessCredential.Domain">
            <summary>
            Gets or sets the domain.
            </summary>
            <value>The domain.</value>
        </member>
        <member name="P:Beyova.AccessCredential.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="M:Beyova.AccessCredential.Parse(System.String)">
            <summary>
            Parses the specified credential string.
            </summary>
            <param name="credentialString">The credential string.</param>
            <returns>AccessCredential.</returns>
        </member>
        <member name="M:Beyova.AccessCredential.op_Explicit(Beyova.AccessCredential)~System.String">
            <summary>
            Performs an explicit conversion from <see cref="T:Beyova.AccessCredential"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="credential">The credential.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Beyova.AccessCredential.op_Explicit(System.String)~Beyova.AccessCredential">
            <summary>
            Performs an explicit conversion from <see cref="T:System.String"/> to <see cref="T:Beyova.AccessCredential"/>.
            </summary>
            <param name="credential">The credential.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:Beyova.AccessCredentialCriteria">
            <summary>
            Class AccessCredentialCriteria.
            </summary>
        </member>
        <member name="P:Beyova.AccessCredentialCriteria.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Beyova.AccessCredentialCriteria.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.AccessCredentialCriteria.UserKey">
            <summary>
            Gets or sets the user key.
            </summary>
            <value>The user key.</value>
        </member>
        <member name="T:Beyova.AccessCredentialInfo">
            <summary>
            Class AccessCredentialInfo.
            </summary>
        </member>
        <member name="P:Beyova.AccessCredentialInfo.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.AccessCredentialInfo.CreatedStamp">
            <summary>
            Gets or sets the created stamp.
            </summary>
            <value>
            The created stamp.
            </value>
        </member>
        <member name="P:Beyova.AccessCredentialInfo.LastUpdatedStamp">
            <summary>
            Gets or sets the last updated stamp.
            </summary>
            <value>
            The last updated stamp.
            </value>
        </member>
        <member name="P:Beyova.AccessCredentialInfo.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Beyova.AccessCredentialInfo.UserKey">
            <summary>
            Gets or sets the user key.
            </summary>
            <value>The user key.</value>
        </member>
        <member name="P:Beyova.AccessCredentialInfo.TokenExpiredStamp">
            <summary>
            Gets or sets the token expired stamp.
            </summary>
            <value>The token expired stamp.</value>
        </member>
        <member name="T:Beyova.AdminPermission">
            <summary>
            Class AdminPermission.
            </summary>
        </member>
        <member name="P:Beyova.AdminPermission.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.AdminPermission.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.AdminPermission.Identifier">
            <summary>
            Gets or sets the identifier.
            <remarks>Identifier can be full name of method, or some other customization identifier.</remarks>
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Beyova.AdminPermission.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Beyova.AdminPermission.ProductKey">
            <summary>
            Gets or sets the product key.
            </summary>
            <value>The product key.</value>
        </member>
        <member name="T:Beyova.AdminRoleBinding">
            <summary>
            Class AdminRoleBinding.
            </summary>
        </member>
        <member name="P:Beyova.AdminRoleBinding.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>The owner key.</value>
        </member>
        <member name="P:Beyova.AdminRoleBinding.RoleKey">
            <summary>
            Gets or sets the role key.
            </summary>
            <value>The role key.</value>
        </member>
        <member name="P:Beyova.AdminRoleBinding.ProductKey">
            <summary>
            Gets or sets the product key.
            </summary>
            <value>The product key.</value>
        </member>
        <member name="T:Beyova.AdminPermissionBinding">
            <summary>
            Class AdminPermissionBinding.
            </summary>
        </member>
        <member name="P:Beyova.AdminPermissionBinding.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>The owner key.</value>
        </member>
        <member name="P:Beyova.AdminPermissionBinding.ProductKey">
            <summary>
            Gets or sets the product key.
            </summary>
            <value>The product key.</value>
        </member>
        <member name="P:Beyova.AdminPermissionBinding.PermissionKey">
            <summary>
            Gets or sets the permission key.
            </summary>
            <value>The permission key.</value>
        </member>
        <member name="T:Beyova.AdminPermissionCriteria">
            <summary>
            Class AdminPermissionCriteria.
            </summary>
        </member>
        <member name="P:Beyova.AdminPermissionCriteria.RoleKey">
            <summary>
            Gets or sets the role key.
            </summary>
            <value>The role key.</value>
        </member>
        <member name="P:Beyova.AdminPermissionCriteria.UserKey">
            <summary>
            Gets or sets the user key.
            </summary>
            <value>The user key.</value>
        </member>
        <member name="T:Beyova.AdminRole">
            <summary>
            Class AdminRole.
            </summary>
        </member>
        <member name="P:Beyova.AdminRole.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.AdminRole.ParentKey">
            <summary>
            Gets or sets the parent key.
            </summary>
            <value>The parent key.</value>
        </member>
        <member name="P:Beyova.AdminRole.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Beyova.AdminRole.ProductKey">
            <summary>
            Gets or sets the product key.
            </summary>
            <value>The product key.</value>
        </member>
        <member name="P:Beyova.AdminRole.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="T:Beyova.AdminRoleCriteria">
            <summary>
            Class AdminRoleCriteria.
            </summary>
        </member>
        <member name="P:Beyova.AdminRoleCriteria.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.AdminRoleCriteria.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.AdminRoleCriteria.ParentKey">
            <summary>
            Gets or sets the parent key.
            </summary>
            <value>The parent key.</value>
        </member>
        <member name="P:Beyova.AdminRoleCriteria.UserKey">
            <summary>
            Gets or sets the user key.
            </summary>
            <value>The user key.</value>
        </member>
        <member name="P:Beyova.AdminRoleCriteria.PermissionKey">
            <summary>
            Gets or sets the permission key.
            </summary>
            <value>The permission key.</value>
        </member>
        <member name="P:Beyova.AdminRoleCriteria.ProductKey">
            <summary>
            Gets or sets the product key.
            </summary>
            <value>The product key.</value>
        </member>
        <member name="T:Beyova.AdminSession">
            <summary>
            Class AdminSession.
            </summary>
        </member>
        <member name="P:Beyova.AdminSession.CreatedStamp">
            <summary>
            Gets or sets the created stamp.
            </summary>
            <value>The created stamp.</value>
        </member>
        <member name="P:Beyova.AdminSession.LastUpdatedStamp">
            <summary>
            Gets or sets the last updated stamp.
            </summary>
            <value>The last updated stamp.</value>
        </member>
        <member name="P:Beyova.AdminSession.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Beyova.AdminSession.ExpiredStamp">
            <summary>
            Gets or sets the expired stamp.
            </summary>
            <value>The expired stamp.</value>
        </member>
        <member name="P:Beyova.AdminSession.UserAgent">
            <summary>
            Gets or sets the user agent.
            </summary>
            <value>The user agent.</value>
        </member>
        <member name="T:Beyova.AdminSessionBase">
            <summary>
            Class AdminSessionBase.
            </summary>
        </member>
        <member name="P:Beyova.AdminSessionBase.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>The owner key.</value>
        </member>
        <member name="P:Beyova.AdminSessionBase.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.AdminSessionBase.IpAddress">
            <summary>
            Gets or sets the ip address.
            </summary>
            <value>The ip address.</value>
        </member>
        <member name="P:Beyova.AdminSessionBase.ProductKey">
            <summary>
            Gets or sets the product key.
            </summary>
            <value>The product key.</value>
        </member>
        <member name="T:Beyova.AdminSessionCriteria">
            <summary>
            Class AdminSessionCriteria.
            </summary>
        </member>
        <member name="P:Beyova.AdminSessionCriteria.ActiveOnly">
            <summary>
            Gets or sets a value indicating whether [active only].
            </summary>
            <value><c>true</c> if [active only]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Beyova.AdminUserCriteria">
            <summary>
            Class AdminUserCriteria.
            </summary>
        </member>
        <member name="P:Beyova.AdminUserCriteria.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Beyova.AdminUserCriteria.RoleKey">
            <summary>
            Gets or sets the role key.
            </summary>
            <value>The role key.</value>
        </member>
        <member name="T:Beyova.AppPlatformBase">
            <summary>
            Class AppPlatformBase.
            </summary>
        </member>
        <member name="P:Beyova.AppPlatformBase.PlatformType">
            <summary>
            Gets or sets the type of the platform.
            </summary>
            <value>
            The type of the platform.
            </value>
        </member>
        <member name="P:Beyova.AppPlatformBase.MinOSVersion">
            <summary>
            Gets or sets the minimum os version.
            </summary>
            <value>The minimum os version.</value>
        </member>
        <member name="P:Beyova.AppPlatformBase.Url">
            <summary>
            Gets or sets the application URL.
            </summary>
            <value>The application URL.</value>
        </member>
        <member name="P:Beyova.AppPlatformBase.BundleId">
            <summary>
            Gets or sets the bundle identifier.
            </summary>
            <value>
            The bundle identifier.
            </value>
        </member>
        <member name="P:Beyova.AppPlatformBase.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:Beyova.AppVersionBase">
            <summary>
            Class AppVersionBase.
            </summary>
        </member>
        <member name="P:Beyova.AppVersionBase.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.AppVersionBase.PlatformKey">
            <summary>
            Gets or sets the platform key.
            </summary>
            <value>
            The platform key.
            </value>
        </member>
        <member name="P:Beyova.AppVersionBase.LatestBuild">
            <summary>
            Gets or sets the latest build.
            </summary>
            <value>
            The latest build.
            </value>
        </member>
        <member name="P:Beyova.AppVersionBase.LatestVersion">
            <summary>
            Gets or sets the latest version.
            </summary>
            <value>
            The latest version.
            </value>
        </member>
        <member name="P:Beyova.AppVersionBase.MinRequiredBuild">
            <summary>
            Gets or sets the minimum required build.
            </summary>
            <value>
            The minimum required build.
            </value>
        </member>
        <member name="P:Beyova.AppVersionBase.Note">
            <summary>
            Gets or sets the note.
            </summary>
            <value>
            The note.
            </value>
        </member>
        <member name="P:Beyova.AppVersionBase.AppServiceStatus">
            <summary>
            Gets or sets the application service status.
            </summary>
            <value>The application service status.</value>
        </member>
        <member name="T:Beyova.SessionCriteria">
            <summary>
            Class SessionCriteria.
            </summary>
        </member>
        <member name="T:Beyova.SessionCriteria`1">
            <summary>
            Class SessionCriteria.
            </summary>
        </member>
        <member name="P:Beyova.SessionCriteria`1.UserKey">
            <summary>
            Gets or sets the user key.
            </summary>
            <value>The user key.</value>
        </member>
        <member name="P:Beyova.SessionCriteria`1.IpAddress">
            <summary>
            Gets or sets the ip address.
            </summary>
            <value>The ip address.</value>
        </member>
        <member name="P:Beyova.SessionCriteria`1.UserAgent">
            <summary>
            Gets or sets the user agent.
            </summary>
            <value>The user agent.</value>
        </member>
        <member name="P:Beyova.SessionCriteria`1.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.SessionCriteria`1.IsExpired">
            <summary>
            Gets or sets a value indicating whether this instance is expired.
            </summary>
            <value><c>null</c> if [is expired] contains no value, <c>true</c> if [is expired]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.SessionCriteria`1.Platform">
            <summary>
            Gets or sets the platform.
            </summary>
            <value>The platform.</value>
        </member>
        <member name="P:Beyova.SessionCriteria`1.DeviceType">
            <summary>
            Gets or sets the type of the device.
            </summary>
            <value>The type of the device.</value>
        </member>
        <member name="P:Beyova.SessionCriteria`1.Realm">
            <summary>
            Gets or sets the realm.
            </summary>
            <value>The realm.</value>
        </member>
        <member name="T:Beyova.EnvironmentEndpointCriteria">
            <summary>
            Class EnvironmentEndpointCriteria.
            </summary>
        </member>
        <member name="P:Beyova.EnvironmentEndpointCriteria.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Beyova.EnvironmentEndpoint">
            <summary>
            Class EnvironmentEndpoint.
            </summary>
        </member>
        <member name="P:Beyova.EnvironmentEndpoint.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.EnvironmentEndpoint.Environment">
            <summary>
            Gets or sets the environment.
            </summary>
            <value>The environment.</value>
        </member>
        <member name="P:Beyova.EnvironmentEndpoint.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="P:Beyova.EnvironmentEndpoint.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.EnvironmentEndpoint.ProductKey">
            <summary>
            Gets or sets the product key.
            </summary>
            <value>The product key.</value>
        </member>
        <member name="T:Beyova.ServiceCredential">
            <summary>
            Class ServiceCredential.
            </summary>
        </member>
        <member name="P:Beyova.ServiceCredential.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.ServiceCredential.Permissions">
            <summary>
            Gets or sets the permissions.
            </summary>
            <value>The permissions.</value>
        </member>
        <member name="M:Beyova.ServiceCredential.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.ServiceCredential"/> class.
            </summary>
        </member>
        <member name="T:Beyova.SessionInfo">
            <summary>
            Class SessionInfo.
            </summary>
        </member>
        <member name="T:Beyova.SessionInfo`1">
            <summary>
            Class SessionInfo.
            </summary>
        </member>
        <member name="P:Beyova.SessionInfo`1.UserKey">
            <summary>
            Gets or sets the user key.
            </summary>
            <value>The user key.</value>
        </member>
        <member name="P:Beyova.SessionInfo`1.IpAddress">
            <summary>
            Gets or sets the ip address.
            </summary>
            <value>The ip address.</value>
        </member>
        <member name="P:Beyova.SessionInfo`1.UserAgent">
            <summary>
            Gets or sets the user agent.
            </summary>
            <value>The user agent.</value>
        </member>
        <member name="P:Beyova.SessionInfo`1.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.SessionInfo`1.ExpiredStamp">
            <summary>
            Gets or sets the expired stamp.
            </summary>
            <value>The expired stamp.</value>
        </member>
        <member name="P:Beyova.SessionInfo`1.CreatedStamp">
            <summary>
            Gets or sets the created stamp.
            </summary>
            <value>The created stamp.</value>
        </member>
        <member name="P:Beyova.SessionInfo`1.Platform">
            <summary>
            Gets or sets the platform.
            </summary>
            <value>The platform.</value>
        </member>
        <member name="P:Beyova.SessionInfo`1.DeviceType">
            <summary>
            Gets or sets the type of the device.
            </summary>
            <value>The type of the device.</value>
        </member>
        <member name="P:Beyova.SessionInfo`1.DeviceId">
            <summary>
            Gets or sets the device identifier.
            </summary>
            <value>The device identifier.</value>
        </member>
        <member name="P:Beyova.SessionInfo`1.DeviceName">
            <summary>
            Gets or sets the name of the device.
            </summary>
            <value>The name of the device.</value>
        </member>
        <member name="P:Beyova.SessionInfo`1.Realm">
            <summary>
            Gets or sets the realm.
            </summary>
            <value>The realm.</value>
        </member>
        <member name="T:Beyova.SimpleBaseObject">
            <summary>
            Class SimpleBaseObject
            </summary>
        </member>
        <member name="P:Beyova.SimpleBaseObject.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.SimpleBaseObject.CreatedStamp">
            <summary>
            Gets or sets the created stamp.
            </summary>
            <value>
            The created stamp.
            </value>
        </member>
        <member name="P:Beyova.SimpleBaseObject.LastUpdatedStamp">
            <summary>
            Gets or sets the last updated stamp.
            </summary>
            <value>
            The last updated stamp.
            </value>
        </member>
        <member name="P:Beyova.SimpleBaseObject.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="T:Beyova.SimpleBaseObject`1">
            <summary>
            Class SimpleBaseObject.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Beyova.SimpleBaseObject`1.Object">
            <summary>
            Gets or sets the object.
            </summary>
            <value>The object.</value>
        </member>
        <member name="M:Beyova.SimpleBaseObject`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SimpleBaseObject`1"/> class.
            </summary>
        </member>
        <member name="M:Beyova.SimpleBaseObject`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SimpleBaseObject`1"/> class.
            </summary>
            <param name="genricObject">The genric object.</param>
        </member>
        <member name="T:Beyova.BinaryCapacityCriteria">
            <summary>
            Class BinaryCapacityCriteria.
            </summary>
        </member>
        <member name="P:Beyova.BinaryCapacityCriteria.Container">
            <summary>
            Gets or sets the container.
            </summary>
            <value>The container.</value>
        </member>
        <member name="P:Beyova.BinaryCapacityCriteria.OwnerKey">
            <summary>
            Gets or sets the total count.
            </summary>
            <value>
            The total count.
            </value>
        </member>
        <member name="T:Beyova.BinaryStorageActionCredential">
            <summary>
            Class BinaryStorageActionCredential.
            </summary>
        </member>
        <member name="P:Beyova.BinaryStorageActionCredential.StorageUri">
            <summary>
            Gets or sets the storage URI.
            </summary>
            <value>The storage URI.</value>
        </member>
        <member name="P:Beyova.BinaryStorageActionCredential.CredentialUri">
            <summary>
            Gets or sets the credential URI.
            <remarks>Credential uri, which is used to upload, download or any other action on target.</remarks>
            </summary>
            <value>The credential URI.</value>
        </member>
        <member name="P:Beyova.BinaryStorageActionCredential.CredentialExpiredStamp">
            <summary>
            Gets or sets the credential expired stamp.
            </summary>
            <value>The credential expired stamp.</value>
        </member>
        <member name="T:Beyova.BinaryCapacitySummary">
            <summary>
            Class BinaryCapacitySummary.
            </summary>
        </member>
        <member name="P:Beyova.BinaryCapacitySummary.Container">
            <summary>
            Gets or sets the container.
            </summary>
            <value>The container.</value>
        </member>
        <member name="P:Beyova.BinaryCapacitySummary.TotalCount">
            <summary>
            Gets or sets the total count.
            </summary>
            <value>
            The total count.
            </value>
        </member>
        <member name="P:Beyova.BinaryCapacitySummary.TotalSize">
            <summary>
            Gets or sets the total size.
            </summary>
            <value>
            The total size.
            </value>
        </member>
        <member name="T:Beyova.BinaryStorageIdentifier">
            <summary>
            Class BinaryStorageIdentifier.
            </summary>
        </member>
        <member name="P:Beyova.BinaryStorageIdentifier.Container">
            <summary>
            Gets or sets the container.
            </summary>
            <value>The container.</value>
        </member>
        <member name="P:Beyova.BinaryStorageIdentifier.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="M:Beyova.BinaryStorageIdentifier.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.BinaryStorageIdentifier.ToCloudResourceUri(System.String)">
            <summary>
            To the cloud resource URI.
            </summary>
            <param name="type">The type.</param>
            <returns>CloudResourceUri.</returns>
        </member>
        <member name="T:Beyova.BinaryStorageMetaBase">
            <summary>
            Class BinaryStorageMetaData.
            </summary>
        </member>
        <member name="P:Beyova.BinaryStorageMetaBase.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaBase.Mime">
            <summary>
            Gets or sets the MIME.
            <remarks>
            http://www.w3.org/wiki/Evolution/MIME
            </remarks>
            </summary>
            <value>The MIME.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaBase.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaBase.Width">
            <summary>
            Gets or sets the width.
            <remarks>It is used when storage is image or video.</remarks>
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaBase.Height">
            <summary>
            Gets or sets the height.
            <remarks>It is used when storage is image or video.</remarks>
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaBase.Duration">
            <summary>
            Gets or sets the duration.
            <remarks>It is used when storage is audio or video. Unit: second.</remarks>
            </summary>
            <value>The duration.</value>
        </member>
        <member name="M:Beyova.BinaryStorageMetaBase.#ctor(Beyova.BinaryStorageMetaBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BinaryStorageMetaBase"/> class.
            </summary>
            <param name="metaBase">The meta base.</param>
        </member>
        <member name="M:Beyova.BinaryStorageMetaBase.#ctor(Beyova.BinaryStorageIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BinaryStorageMetaBase"/> class.
            </summary>
            <param name="identifier">The identifier.</param>
        </member>
        <member name="T:Beyova.CloudResourceUri">
            <summary>
            Class CloudResourceUri.
            </summary>
        </member>
        <member name="F:Beyova.CloudResourceUri.Protocol">
            <summary>
            The protocol
            </summary>
        </member>
        <member name="F:Beyova.CloudResourceUri.UriRegex">
            <summary>
            The URI regex
            </summary>
        </member>
        <member name="P:Beyova.CloudResourceUri.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Beyova.CloudResourceUri.Container">
            <summary>
            Gets or sets the container.
            </summary>
            <value>The container.</value>
        </member>
        <member name="P:Beyova.CloudResourceUri.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="M:Beyova.CloudResourceUri.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.CloudResourceUri.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.CloudResourceUri.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Beyova.CloudResourceUri.Parse(System.String)">
            <summary>
            Parses the specified cloud protocol URI.
            </summary>
            <param name="cloudProtocolUri">The cloud protocol URI.</param>
            <returns>CloudResourceUri.</returns>
            <exception cref="T:Beyova.ExceptionSystem.InvalidObjectException">cloudProtocolUri;null</exception>
        </member>
        <member name="M:Beyova.CloudResourceUri.TryParse(System.String,Beyova.CloudResourceUri@)">
            <summary>
            Tries the parse.
            </summary>
            <param name="cloudProtocolUri">The cloud protocol URI.</param>
            <param name="cloudResourceUri">The cloud resource URI.</param>
            <returns><c>true</c> if succeed to parse, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.CloudResourceUri.IsCloudResource(System.String)">
            <summary>
            Determines whether [is cloud resource] [the specified URI].
            </summary>
            <param name="uri">The URI.</param>
            <returns><c>true</c> if [is cloud resource] [the specified URI]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Beyova.BaseWaterFallCriteria">
            <summary>
            Class BasePageIndexedCriteria.
            </summary>
        </member>
        <member name="P:Beyova.BaseWaterFallCriteria.DataCursor">
            <summary>
            Gets or sets the data cursor.
            </summary>
            <value>The data cursor.</value>
        </member>
        <member name="P:Beyova.BaseWaterFallCriteria.FromStamp">
            <summary>
            Gets or sets from stamp.
            </summary>
            <value>From stamp.</value>
        </member>
        <member name="P:Beyova.BaseWaterFallCriteria.ToStamp">
            <summary>
            Gets or sets to stamp.
            </summary>
            <value>To stamp.</value>
        </member>
        <member name="P:Beyova.BaseWaterFallCriteria.TimeForwarding">
            <summary>
            Gets or sets a value indicating whether [time forwarding].
            </summary>
            <value><c>true</c> if [time forwarding]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Beyova.BasePageIndexedCriteria">
            <summary>
            Class BasePageIndexedCriteria.
            </summary>
        </member>
        <member name="P:Beyova.BasePageIndexedCriteria.StartIndex">
            <summary>
            Gets or sets the start index.
            It could be with <c>Count</c> to do paging.
            </summary>
            <value>The start index.</value>
        </member>
        <member name="M:Beyova.BasePageIndexedCriteria.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BasePageIndexedCriteria" /> class.
            </summary>
        </member>
        <member name="T:Beyova.BinaryStorageState">
            <summary>
            Enum BinaryStorageState
            </summary>
        </member>
        <member name="F:Beyova.BinaryStorageState.Undefined">
            <summary>
            Value indicating that it is undefined
            </summary>
        </member>
        <member name="F:Beyova.BinaryStorageState.CommitPending">
            <summary>
            Value indicating that it is pending to commit
            </summary>
        </member>
        <member name="F:Beyova.BinaryStorageState.Committed">
            <summary>
            Value indicating that it is committed
            </summary>
        </member>
        <member name="F:Beyova.BinaryStorageState.DeletePending">
            <summary>
            Value indicating that it is pending to delete
            </summary>
        </member>
        <member name="F:Beyova.BinaryStorageState.Deleted">
            <summary>
            Value indicating that it is deleted
            </summary>
        </member>
        <member name="F:Beyova.BinaryStorageState.Disabled">
            <summary>
            Value indicating that it is disabled
            </summary>
        </member>
        <member name="F:Beyova.BinaryStorageState.Invalid">
            <summary>
            Value indicating that it is invalid
            <remarks>It is used when binary summary is created, but no binary uploaded when doing commit.</remarks>
            </summary>
        </member>
        <member name="F:Beyova.BinaryStorageState.Duplicated">
            <summary>
            Value indicating that it is duplicated
            <remarks>It is used when a binary is uploaded and commit, whose hash and length are exactly same as which is already in system.</remarks>
            </summary>
        </member>
        <member name="T:Beyova.BinaryStorageMetaData">
            <summary>
            Class BinaryStorageMetaData.
            </summary>
        </member>
        <member name="P:Beyova.BinaryStorageMetaData.Hash">
            <summary>
            Gets or sets the hash.
            </summary>
            <value>The hash.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaData.CreatedStamp">
            <summary>
            Gets or sets the created stamp.
            </summary>
            <value>The created stamp.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaData.LastUpdatedStamp">
            <summary>
            Gets or sets the last updated stamp.
            </summary>
            <value>The last updated stamp.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaData.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaData.CreatedBy">
            <summary>
            Gets or sets the created by.
            </summary>
            <value>The created by.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaData.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>The owner key.</value>
        </member>
        <member name="M:Beyova.BinaryStorageMetaData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BinaryStorageMetaData"/> class.
            </summary>
        </member>
        <member name="M:Beyova.BinaryStorageMetaData.#ctor(Beyova.BinaryStorageIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BinaryStorageMetaBase" /> class.
            </summary>
            <param name="identifier">The identifier.</param>
        </member>
        <member name="T:Beyova.BinaryStorageObject">
            <summary>
            Class BinaryStorageObject.
            </summary>
        </member>
        <member name="P:Beyova.BinaryStorageObject.Data">
            <summary>
            Gets or sets the data.
            This field shares value with field DataInByte.
            The difference is, this field saves data as base64 string.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Beyova.BinaryStorageObject.DataInBytes">
            <summary>
            Gets or sets the data in bytes.
            This property is mapped to property
            <c>Data</c> and this property would not be passed in WCF communication.
            </summary>
            <value>The data in bytes.</value>
        </member>
        <member name="M:Beyova.BinaryStorageObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BinaryStorageObject"/> class.
            </summary>
        </member>
        <member name="M:Beyova.BinaryStorageObject.#ctor(Beyova.BinaryStorageMetaData)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BinaryStorageObject"/> class.
            </summary>
            <param name="metaData">The meta data.</param>
        </member>
        <member name="M:Beyova.BinaryStorageObject.SetMetaData(Beyova.BinaryStorageMetaData)">
            <summary>
            Sets the meta data.
            </summary>
            <param name="metaData">The meta data.</param>
        </member>
        <member name="T:Beyova.BinaryStorageMetaDataCriteria">
            <summary>
            Class BinaryStorageMetaDataCriteria.
            </summary>
        </member>
        <member name="P:Beyova.BinaryStorageMetaDataCriteria.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaDataCriteria.Hash">
            <summary>
            Gets or sets the hash.
            </summary>
            <value>The hash.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaDataCriteria.Mime">
            <summary>
            Gets or sets the MIME.
            <remarks>
            http://www.w3.org/wiki/Evolution/MIME
            </remarks>
            </summary>
            <value>The MIME.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaDataCriteria.MinLength">
            <summary>
            Gets or sets the minimum length.
            </summary>
            <value>The minimum length.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaDataCriteria.MaxLength">
            <summary>
            Gets or sets the maximum length.
            </summary>
            <value>The maximum length.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaDataCriteria.MinWidth">
            <summary>
            Gets or sets the minimum width.
            </summary>
            <value>The minimum width.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaDataCriteria.MaxWidth">
            <summary>
            Gets or sets the maximum width.
            </summary>
            <value>The maximum width.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaDataCriteria.MinHeight">
            <summary>
            Gets or sets the minimum height.
            </summary>
            <value>The minimum height.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaDataCriteria.MaxHeight">
            <summary>
            Gets or sets the maximum height.
            </summary>
            <value>The maximum height.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaDataCriteria.MinDuration">
            <summary>
            Gets or sets the minimum duration.
            </summary>
            <value>The minimum duration.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaDataCriteria.MaxDuration">
            <summary>
            Gets or sets the maximum duration.
            </summary>
            <value>The maximum duration.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaDataCriteria.OwnerKey">
            <summary>
            Gets or sets the owner key.
            </summary>
            <value>The owner key.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaDataCriteria.ToStamp">
            <summary>
            Gets or sets to stamp.
            </summary>
            <value>To stamp.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaDataCriteria.FromStamp">
            <summary>
            Gets or sets from stamp.
            </summary>
            <value>From stamp.</value>
        </member>
        <member name="P:Beyova.BinaryStorageMetaDataCriteria.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Beyova.CountryInfo">
            <summary>
            Class CountryInfo.
            </summary>
        </member>
        <member name="P:Beyova.CountryInfo.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.CountryInfo.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.CountryInfo.CurrencyCode">
            <summary>
            Gets or sets the currency code.
            </summary>
            <value>The currency code.</value>
        </member>
        <member name="P:Beyova.CountryInfo.Iso2Code">
            <summary>
            Gets or sets the ISO2 code.
            </summary>
            <value>The ISO2 code.</value>
        </member>
        <member name="P:Beyova.CountryInfo.Iso3Code">
            <summary>
            Gets or sets the ISO3 code.
            </summary>
            <value>The ISO3 code.</value>
        </member>
        <member name="P:Beyova.CountryInfo.TimeZone">
            <summary>
            Gets or sets the time zone.
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="P:Beyova.CountryInfo.TelCode">
            <summary>
            Gets or sets the tel code.
            </summary>
            <value>
            The tel code.
            </value>
        </member>
        <member name="P:Beyova.CountryInfo.CultureCode">
            <summary>
            Gets or sets the culture code.
            </summary>
            <value>The culture code.</value>
        </member>
        <member name="P:Beyova.CountryInfo.Sequence">
            <summary>
            Gets or sets the sequence.
            </summary>
            <value>The sequence.</value>
        </member>
        <member name="M:Beyova.CountryInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.CountryInfo"/> class.
            </summary>
        </member>
        <member name="T:Beyova.CountryInfoCriteria">
            <summary>
            Class CountryInfoCriteria.
            </summary>
        </member>
        <member name="P:Beyova.CountryInfoCriteria.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.CountryInfoCriteria.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="P:Beyova.CountryInfoCriteria.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Beyova.CountryInfoCriteria.CultureCode">
            <summary>
            Gets or sets the culture code.
            </summary>
            <value>The culture code.
            e.g.: zh-CN, en-US, pt-PT, etc.</value>
        </member>
        <member name="T:Beyova.DeviceType">
            <summary>
            Enum DeviceType
            </summary>
        </member>
        <member name="F:Beyova.DeviceType.None">
            <summary>
            Value indicating it is none (0x00)
            </summary>
        </member>
        <member name="F:Beyova.DeviceType.Phone">
            <summary>
            Value indicating it is phone
            </summary>
        </member>
        <member name="F:Beyova.DeviceType.Pad">
            <summary>
            Value indicating it is pad
            </summary>
        </member>
        <member name="F:Beyova.DeviceType.Pc">
            <summary>
            Value indicating it is pc (0x4)
            </summary>
        </member>
        <member name="F:Beyova.DeviceType.Wearable">
            <summary>
            Value indicating it is wearable (0x8)
            </summary>
        </member>
        <member name="T:Beyova.PlatformType">
            <summary>
            Enum PlatformType
            </summary>
        </member>
        <member name="F:Beyova.PlatformType.Undefined">
            <summary>
            Value indicating it is undefined (0x00)
            </summary>
        </member>
        <member name="F:Beyova.PlatformType.iOS">
            <summary>
            Value indicating it is iOS (0x1)
            </summary>
        </member>
        <member name="F:Beyova.PlatformType.Android">
            <summary>
            Value indicating it is android (0x2)
            </summary>
        </member>
        <member name="F:Beyova.PlatformType.UniversalWindowsPlatform">
            <summary>
            Value indicating it is universal windows platform (0x4)
            </summary>
        </member>
        <member name="F:Beyova.PlatformType.BlackBerry">
            <summary>
            Value indicating it is black berry (0x8)
            </summary>
        </member>
        <member name="F:Beyova.PlatformType.Web">
            <summary>
            Value indicating it is web (0x10)
            </summary>
        </member>
        <member name="T:Beyova.WorkflowState">
            <summary>
            Enum WorkflowState
            </summary>
        </member>
        <member name="F:Beyova.WorkflowState.None">
            <summary>
                The value indicating that object or operation is none.
            </summary>
        </member>
        <member name="F:Beyova.WorkflowState.Pending">
            <summary>
                The value indicating that object or operation is pending.
            </summary>
        </member>
        <member name="F:Beyova.WorkflowState.Approved">
            <summary>
                The value indicating that object or operation is approved.
            </summary>
        </member>
        <member name="F:Beyova.WorkflowState.Rejected">
            <summary>
                The value indicating that object or operation is rejected
            </summary>
        </member>
        <member name="F:Beyova.WorkflowState.InProcess">
            <summary>
                The value indicating that operation is in process.
            </summary>
        </member>
        <member name="F:Beyova.WorkflowState.Completed">
            <summary>
                The value indicating that object or operation is rejected.
            </summary>
        </member>
        <member name="T:Beyova.EnumExtension">
            <summary>
            Class EnumExtension.
            </summary>
        </member>
        <member name="M:Beyova.EnumExtension.GetEnumDefaultValue(System.Type)">
            <summary>
            Gets the enum default value.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.EnumExtension.TryParseEnum(System.Type,System.String,System.Object@,System.Boolean)">
            <summary>
            Tries the parse enum.
            </summary>
            <param name="type">The type.</param>
            <param name="text">The text.</param>
            <param name="enumValue">The enum value.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.EnumExtension.InternalTryParseEnum(System.Array,System.String,System.Object@,System.Boolean)">
            <summary>
            Internals the try parse enum.
            </summary>
            <param name="enumValues">The enum values.</param>
            <param name="text">The text.</param>
            <param name="enumValue">The enum value.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.EnumExtension.HasFlag``1(System.Nullable{``0},``0)">
            <summary>
            Determines whether the specified enum value2 has flag.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumValue1">The enum value1.</param>
            <param name="enumValue2">The enum value2.</param>
            <returns>
              <c>true</c> if the specified enum value2 has flag; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.EnumExtension.HasFlag``1(``0,``0)">
            <summary>
            Determines whether the specified value2 has flag.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <returns>
              <c>true</c> if the specified value2 has flag; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.EnumExtension.InternalHasFlag``1(``0,``0)">
            <summary>
            Internals the has flag.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.RemoteRuntimeCompileResult">
            <summary>
            Class RemoteRuntimeCompileResult.
            </summary>
        </member>
        <member name="P:Beyova.RemoteRuntimeCompileResult.TempAssemblyName">
            <summary>
            Gets or sets the name of the temporary assembly.
            </summary>
            <value>
            The name of the temporary assembly.
            </value>
        </member>
        <member name="P:Beyova.RemoteRuntimeCompileResult.CompileExceptionInfo">
            <summary>
            Gets or sets the compile exception information.
            </summary>
            <value>
            The compile exception information.
            </value>
        </member>
        <member name="M:Beyova.RemoteRuntimeCompileResult.GetExceptionInfo">
            <summary>
            Gets the exception information.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Beyova.Sandbox">
            <summary>
            Class BaseSandbox.
            </summary>
        </member>
        <member name="M:Beyova.Sandbox.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BaseSandbox" /> class.
            </summary>
            <param name="applicationDirectory">The application directory.</param>
        </member>
        <member name="M:Beyova.Sandbox.#ctor(Beyova.SandboxSetting)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BaseSandbox" /> class.
            </summary>
            <param name="setting">The setting.</param>
        </member>
        <member name="M:Beyova.Sandbox.#ctor(Beyova.SandboxSetting,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BaseSandbox" /> class.
            </summary>
            <param name="setting">The setting.</param>
            <param name="key">The identifier.</param>
        </member>
        <member name="M:Beyova.Sandbox.CreateAnonymousSandbox">
            <summary>
            Creates the anonymous sandbox.
            </summary>
            <returns>Sandbox.</returns>
        </member>
        <member name="T:Beyova.BaseSandbox">
            <summary>
            Class BaseSandbox.
            </summary>
        </member>
        <member name="P:Beyova.BaseSandbox.AppDomain">
            <summary>
            Gets or sets the application domain.
            </summary>
            <value>The application domain.</value>
        </member>
        <member name="F:Beyova.BaseSandbox._invoker">
            <summary>
            Gets or sets the invoker.
            </summary>
            <value>The invoker.</value>
        </member>
        <member name="P:Beyova.BaseSandbox.ApplicationDirectory">
            <summary>
            Gets or sets the application directory.
            </summary>
            <value>
            The application directory.
            </value>
        </member>
        <member name="P:Beyova.BaseSandbox.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="M:Beyova.BaseSandbox.#ctor(Beyova.SandboxSetting)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BaseSandbox" /> class.
            </summary>
            <param name="setting">The setting.</param>
        </member>
        <member name="M:Beyova.BaseSandbox.#ctor(Beyova.SandboxSetting,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BaseSandbox"/> class.
            </summary>
            <param name="setting">The setting.</param>
            <param name="key">The identifier.</param>
        </member>
        <member name="M:Beyova.BaseSandbox.Initialize(Beyova.SandboxSetting)">
            <summary>
            Initializes the specified name.
            </summary>
            <param name="setting">The setting.</param>
        </member>
        <member name="M:Beyova.BaseSandbox.GetDefaultAssembliesToLoad">
            <summary>
            Gets the default assembly to load.
            </summary>
            <returns>HashSet&lt;Assembly&gt;.</returns>
        </member>
        <member name="M:Beyova.BaseSandbox.CreateInstanceAndInvokeMethod(System.String,System.String,System.Object[],System.Object[])">
            <summary>
            Creates the instance and invoke method.
            </summary>
            <param name="typeFullName">Full name of the type.</param>
            <param name="methodName">Name of the method.</param>
            <param name="constructorParameters">The constructor parameters.</param>
            <param name="methodParameters">The method parameters.</param>
            <returns>Beyova.RemoteInvokeResult.</returns>
        </member>
        <member name="M:Beyova.BaseSandbox.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Beyova.BaseSandbox.CreateInstanceAndUnwrap``1(System.AppDomain)">
            <summary>
            Creates the instance and unwrap.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="appDomain">The application domain.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.BaseSandbox.GetAssemblyFileNameWithExtension(System.String)">
            <summary>
            Gets the assembly file name with extension.
            </summary>
            <param name="pureName">Name of the pure.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.BaseSandbox.WrapToCurrentAppDomain(Beyova.SandboxMarshalInvokeResult)">
            <summary>
            Wraps to current application domain.
            </summary>
            <param name="result">The result.</param>
            <returns>Beyova.SandboxInvokeResult.</returns>
        </member>
        <member name="T:Beyova.RuntimeAssemblySandbox">
            <summary>
            Class RuntimeAssemblySandbox.
            </summary>
        </member>
        <member name="F:Beyova.RuntimeAssemblySandbox._assemblyProvider">
            <summary>
            Gets or sets the assembly provider.
            </summary>
            <value>The assembly provider.</value>
        </member>
        <member name="M:Beyova.RuntimeAssemblySandbox.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RuntimeAssemblySandbox" /> class.
            </summary>
            <param name="applicationDirectory">The application directory.</param>
        </member>
        <member name="M:Beyova.RuntimeAssemblySandbox.#ctor(Beyova.SandboxSetting)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RuntimeAssemblySandbox" /> class.
            </summary>
            <param name="setting">The setting.</param>
        </member>
        <member name="M:Beyova.RuntimeAssemblySandbox.Initialize(Beyova.SandboxSetting)">
            <summary>
            Initializes the specified name.
            </summary>
            <param name="setting">The setting.</param>
        </member>
        <member name="M:Beyova.RuntimeAssemblySandbox.GetDefaultAssembliesToLoad">
            <summary>
            Gets the default assembly to load.
            </summary>
            <returns>HashSet&lt;Assembly&gt;.</returns>
        </member>
        <member name="M:Beyova.RuntimeAssemblySandbox.CreateTempAssembly(System.String[],System.Collections.Generic.HashSet{System.String})">
            <summary>
            Creates the temporary assembly.
            </summary>
            <param name="sourceCodes">The source codes.</param>
            <param name="codeReferencedAssembly">The code referenced assembly.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.RuntimeAssemblySandbox.CreateTempAssembly(System.String,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Creates the temporary assembly.
            </summary>
            <param name="coreCode">The core code.</param>
            <param name="codeReferencedAssembly">The code referenced assembly.</param>
            <param name="usingNameSpaces">The using name spaces.</param>
            <param name="namespace">The namespace.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.RuntimeAssemblySandbox.InvokeRuntimeAssembly(System.String,System.String,System.String,System.Object[])">
            <summary>
            Invokes the runtime assembly.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="typeName">Name of the type.</param>
            <param name="methodName">Name of the method.</param>
            <param name="methodParameters">The method parameters.</param>
            <returns>SandboxInvokeResult.</returns>
        </member>
        <member name="M:Beyova.RuntimeAssemblySandbox.InvokeRuntimeAssembly(System.String,System.String,System.Object[],System.String,System.Object[])">
            <summary>
            Creates the instance and invoke method.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="typeName">Name of the type.</param>
            <param name="constructorParameters">The constructor parameters.</param>
            <param name="methodName">The method.</param>
            <param name="methodParameters">The method parameters.</param>
            <returns>SandboxInvokeResult.</returns>
        </member>
        <member name="T:Beyova.SandboxInvoker">
            <summary>
            Class SandboxInvoker. This class is designed to be called inside sandbox.
            </summary>
        </member>
        <member name="M:Beyova.SandboxInvoker.LoadAssemblyByName(System.String)">
            <summary>
            Loads the name of the assembly by.
            </summary>
            <param name="name">The name.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.SandboxInvoker.CreateInstanceAndInvokeMethod(System.String,System.Object[],System.String,System.Object[])">
            <summary>
            Creates the instance and invoke method.
            </summary>
            <param name="typeFullName">Name of the type.</param>
            <param name="constructorParameters">The constructor parameters.</param>
            <param name="methodName">Name of the method.</param>
            <param name="methodParameters">The method parameters.</param>
            <returns>RemoteInvokeResult.</returns>
            <exception cref="T:Beyova.ExceptionSystem.InvalidObjectException"></exception>
        </member>
        <member name="M:Beyova.SandboxInvoker.InvokeStaticMethod(System.String,System.String,System.Object[])">
            <summary>
            Invokes the static method.
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="methodName">Name of the method.</param>
            <param name="methodParameters">The method parameters.</param>
            <returns>RemoteInvokeResult.</returns>
            <exception cref="T:Beyova.ExceptionSystem.InvalidObjectException"></exception>
        </member>
        <member name="M:Beyova.SandboxInvoker.GetApiContractInterfaces">
            <summary>
            Gets the API contract interfaces.
            </summary>
            <returns>RemoteInvokeResult.</returns>
        </member>
        <member name="T:Beyova.SandboxInvokeResult">
            <summary>
            Class SandboxMarshalInvokeResult.
            </summary>
        </member>
        <member name="P:Beyova.SandboxInvokeResult.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="P:Beyova.SandboxInvokeResult.Type">
            <summary>
            The type
            </summary>
        </member>
        <member name="P:Beyova.SandboxInvokeResult.ExceptionInfo">
            <summary>
            The exception information
            </summary>
        </member>
        <member name="M:Beyova.SandboxInvokeResult.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Beyova.SandboxInvokeResult"/> class from being created.
            </summary>
        </member>
        <member name="M:Beyova.SandboxInvokeResult.#ctor(Beyova.SandboxMarshalInvokeResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SandboxInvokeResult"/> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Beyova.SandboxInvokeResult.GetObject">
            <summary>
            Gets the object.
            </summary>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.SandboxInvokeResult.GetExceptionInfo">
            <summary>
            Gets the exception information.
            </summary>
            <returns>ExceptionInfo.</returns>
        </member>
        <member name="T:Beyova.SandboxWrapperContainer">
            <summary>
            Class SandboxWrapperContainer.
            </summary>
        </member>
        <member name="F:Beyova.SandboxWrapperContainer.wrappers">
            <summary>
            The wrappers
            </summary>
        </member>
        <member name="F:Beyova.SandboxWrapperContainer.locker">
            <summary>
            The locker
            </summary>
        </member>
        <member name="M:Beyova.SandboxWrapperContainer.Register``1(Beyova.SandboxWrapper{``0})">
            <summary>
            Registers the specified wrapper.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="wrapper">The wrapper.</param>
        </member>
        <member name="M:Beyova.SandboxWrapperContainer.GetSandboxWrapper``1(System.Nullable{System.Guid})">
            <summary>
            Gets the sandbox wrapper.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <returns>SandboxWrapper&lt;T&gt;.</returns>
        </member>
        <member name="T:Beyova.SandboxWrapper">
            <summary>
            Class SandboxWrapper.
            </summary>
        </member>
        <member name="P:Beyova.SandboxWrapper.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="M:Beyova.SandboxWrapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SandboxWrapper"/> class.
            </summary>
        </member>
        <member name="T:Beyova.SandboxWrapper`1">
            <summary>
            Class SandboxWrapper.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Beyova.SandboxWrapper`1.Object">
            <summary>
            Gets or sets the object.
            </summary>
            <value>The object.</value>
        </member>
        <member name="M:Beyova.SandboxWrapper`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SandboxWrapper`1"/> class.
            </summary>
            <param name="objectToWrap">The object to wrap.</param>
        </member>
        <member name="M:Beyova.SandboxWrapper`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SandboxWrapper`1"/> class.
            </summary>
        </member>
        <member name="T:Beyova.DiffExtension">
            <summary>
            Class DiffExtension
            </summary>
        </member>
        <member name="M:Beyova.DiffExtension.SimpleStringDiff(System.String,System.String,System.Boolean)">
            <summary>
            Simples the difference.
            </summary>
            <param name="source">The source.</param>
            <param name="destination">The destination.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.DiffExtension.SimpleStringDiff``1(System.Collections.Generic.Dictionary{``0,System.String},System.Collections.Generic.Dictionary{``0,System.String},System.Boolean)">
            <summary>
            Simples the difference.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <param name="source">The source.</param>
            <param name="destination">The destination.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns>Dictionary&lt;TKey, ValueDiffResult&gt;.</returns>
        </member>
        <member name="M:Beyova.DiffExtension.SimpleDiff``1(``0,``0)">
            <summary>
            Simples the difference.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="destination">The destination.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.DiffResult">
            <summary>
            Enum DiffResult
            </summary>
        </member>
        <member name="F:Beyova.DiffResult.NoChange">
            <summary>
            Value indicating it is no change
            </summary>
        </member>
        <member name="F:Beyova.DiffResult.Replace">
            <summary>
            Value indicating it is replace
            </summary>
        </member>
        <member name="F:Beyova.DiffResult.SourceDeleted">
            <summary>
            Value indicating it is source deleted
            </summary>
        </member>
        <member name="F:Beyova.DiffResult.DestinationAdded">
            <summary>
            Value indicating it is destination added
            </summary>
        </member>
        <member name="T:Beyova.ValueDiffResult">
            <summary>
            Class ValueDiffResult
            </summary>
        </member>
        <member name="T:Beyova.ValueDiffResult`1">
            <summary>
            Class ValueDiffResult
            </summary>
        </member>
        <member name="P:Beyova.ValueDiffResult`1.SourceValue">
            <summary>
            Gets or sets the source value.
            </summary>
            <value>
            The source value.
            </value>
        </member>
        <member name="P:Beyova.ValueDiffResult`1.DestinationValue">
            <summary>
            Gets or sets the destination value.
            </summary>
            <value>
            The destination value.
            </value>
        </member>
        <member name="P:Beyova.ValueDiffResult`1.DiffResult">
            <summary>
            Gets or sets the difference result.
            </summary>
            <value>
            The difference result.
            </value>
        </member>
        <member name="T:Beyova.GenericEqualityComparer`2">
            <summary>
            Class GenericEqualityComparer.
            </summary>
            <typeparam name="TOriginal">The type of the t original.</typeparam>
            <typeparam name="TComparer">The type of the t comparer.</typeparam>
        </member>
        <member name="F:Beyova.GenericEqualityComparer`2._convertFunction">
            <summary>
            The _convert function
            </summary>
        </member>
        <member name="F:Beyova.GenericEqualityComparer`2._comparer">
            <summary>
            The _comparer
            </summary>
        </member>
        <member name="M:Beyova.GenericEqualityComparer`2.#ctor(System.Func{`0,`1},System.Collections.Generic.IEqualityComparer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.GenericEqualityComparer`2" /> class.
            </summary>
            <param name="converter">The converter.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:Beyova.GenericEqualityComparer`2.Equals(`0,`0)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type <paramref name="x" /> to compare.</param>
            <param name="y">The second object of type <paramref name="y" /> to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Beyova.GenericEqualityComparer`2.GetHashCode(`0)">
            <summary>
            Gets the hash code.
            </summary>
            <param name="obj">The object.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:Beyova.CharComparer">
            <summary>
            Class CharComparer.
            </summary>
        </member>
        <member name="F:Beyova.CharComparer.ordinal">
            <summary>
            The ordinal
            </summary>
        </member>
        <member name="F:Beyova.CharComparer.ordinalIgnoreCase">
            <summary>
            The ordinal ignore case
            </summary>
        </member>
        <member name="M:Beyova.CharComparer.#ctor(System.Func{System.Char,System.Char})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.CharComparer"/> class.
            </summary>
            <param name="converter">The converter.</param>
        </member>
        <member name="P:Beyova.CharComparer.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>
            The ordinal.
            </value>
        </member>
        <member name="P:Beyova.CharComparer.OrdinalIgnoreCase">
            <summary>
            Gets the ordinal ignore case.
            </summary>
            <value>
            The ordinal ignore case.
            </value>
        </member>
        <member name="T:Beyova.HttpListenerServerBase">
            <summary>
            Class HttpListenerServerBase.
            </summary>
        </member>
        <member name="F:Beyova.HttpListenerServerBase.locker">
            <summary>
            The locker
            </summary>
        </member>
        <member name="F:Beyova.HttpListenerServerBase.listener">
            <summary>
            The listener
            </summary>
        </member>
        <member name="F:Beyova.HttpListenerServerBase.isActive">
            <summary>
            The is active
            </summary>
        </member>
        <member name="M:Beyova.HttpListenerServerBase.#ctor(System.String[],System.Net.AuthenticationSchemes)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.HttpListenerServerBase"/> class.
            </summary>
            <param name="prefixes">The URL prefixes.</param>
            <param name="authenticationSchema">The authentication schema.</param>
            <exception cref="T:Beyova.ExceptionSystem.InvalidObjectException">prefixes</exception>
            <exception cref="T:Beyova.ExceptionSystem.InvalidObjectException">prefixes</exception>
        </member>
        <member name="M:Beyova.HttpListenerServerBase.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Beyova.HttpListenerServerBase.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:Beyova.HttpListenerServerBase.ProcessHttpRequest(System.Net.HttpListenerContext)">
            <summary>
            Processes the HTTP request.
            </summary>
            <param name="httpContext">The HTTP context.</param>
        </member>
        <member name="M:Beyova.HttpListenerServerBase.ProcessException(System.Net.HttpListenerContext,System.Exception)">
            <summary>
            Processes the exception.
            </summary>
            <param name="httpContext">The HTTP context.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Beyova.HttpListenerServerBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Beyova.HttpListenerServerBase.InvokeProcessContext(System.Object)">
            <summary>
            Invokes the process context.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:Beyova.HttpListenerServerBase.WriteResponse(System.Net.HttpListenerResponse,System.String,System.String,System.Text.Encoding)">
            <summary>
            Writes the response.
            </summary>
            <param name="response">The response.</param>
            <param name="content">The content.</param>
            <param name="contentType">Type of the content.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:Beyova.HttpListenerServerBase.DefaultProcessException(System.Net.HttpListenerContext,System.Exception)">
            <summary>
            Processes the exception.
            </summary>
            <param name="httpContext">The HTTP context.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="T:Beyova.EnumStringConverter">
            <summary>
            Class EnumStringConverter.
            </summary>
        </member>
        <member name="T:Beyova.EnumStringConverter.EnumStringNamingRule">
            <summary>
            Enum EnumStringNamingRule
            </summary>
        </member>
        <member name="F:Beyova.EnumStringConverter.EnumStringNamingRule.Default">
            <summary>
            The default
            </summary>
        </member>
        <member name="F:Beyova.EnumStringConverter.EnumStringNamingRule.LowerCamelCase">
            <summary>
            The lower camel case
            </summary>
        </member>
        <member name="F:Beyova.EnumStringConverter.EnumStringNamingRule.BySlash">
            <summary>
            The by slash
            </summary>
        </member>
        <member name="F:Beyova.EnumStringConverter.EnumStringNamingRule.LowerCases">
            <summary>
            The lower cases
            </summary>
        </member>
        <member name="P:Beyova.EnumStringConverter.NamingRule">
            <summary>
            Gets or sets the naming rule.
            </summary>
            <value>
            The naming rule.
            </value>
        </member>
        <member name="M:Beyova.EnumStringConverter.#ctor(Beyova.EnumStringConverter.EnumStringNamingRule)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.EnumStringConverter" /> class.
            </summary>
            <param name="namingRule">The naming rule.</param>
        </member>
        <member name="M:Beyova.EnumStringConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns><c>true</c> if this instance can convert the specified object type; otherwise,
            <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.EnumStringConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Beyova.EnumStringConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:Beyova.LambdaEqualityComparer`1">
            <summary>
            Class LambdaEqualityComparer. This class cannot be inherited.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Beyova.LambdaEqualityComparer`1.Comparer">
            <summary>
            Gets or sets the comparer.
            </summary>
            <value>The comparer.</value>
        </member>
        <member name="P:Beyova.LambdaEqualityComparer`1.HashCodeGetter">
            <summary>
            Gets or sets the hash code getter.
            </summary>
            <value>The hash code getter.</value>
        </member>
        <member name="M:Beyova.LambdaEqualityComparer`1.#ctor(System.Func{`0,`0,System.Boolean},System.Func{`0,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.LambdaEqualityComparer`1"/> class.
            </summary>
            <param name="comparer">The comparer.</param>
            <param name="hashCodeGetter">The hash code getter.</param>
        </member>
        <member name="M:Beyova.LambdaEqualityComparer`1.Equals(`0,`0)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type T to compare.</param>
            <param name="y">The second object of type T to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Beyova.LambdaEqualityComparer`1.GetHashCode(`0)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> for which a hash code is to be returned.</param>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Beyova.LambdaEqualityComparer`1.GetDefaultComparison">
            <summary>
            Gets the default comparison.
            </summary>
            <returns>Func&lt;T, T, System.Boolean&gt;.</returns>
        </member>
        <member name="M:Beyova.LambdaEqualityComparer`1.GetDefaultHashCodeGetter">
            <summary>
            Gets the default hash code getter.
            </summary>
            <returns>Func&lt;T, System.Int32&gt;.</returns>
        </member>
        <member name="T:Beyova.LambdaComparableComparer`2">
            <summary>
            Class LambdaComparableComparer. This class cannot be inherited.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TComparableType">The type of the t comparable type.</typeparam>
        </member>
        <member name="M:Beyova.LambdaComparableComparer`2.#ctor(System.Func{`0,`1},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.LambdaComparer`2" /> class.
            </summary>
            <param name="comparer">The comparer.</param>
            <param name="isDescending">if set to <c>true</c> [is descending].</param>
        </member>
        <member name="M:Beyova.LambdaComparableComparer`2.GetDefaultComparison(System.Boolean)">
            <summary>
            Gets the default comparison.
            </summary>
            <param name="isDescending">if set to <c>true</c> [is descending].</param>
            <returns>Func&lt;TComparableType, TComparableType, System.Int32&gt;.</returns>
        </member>
        <member name="T:Beyova.LambdaComparer`1">
            <summary>
            Class LambdaComparer.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Beyova.LambdaComparer`1.#ctor(System.Func{`0,`0,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.LambdaComparer`1"/> class.
            </summary>
            <param name="comparison">The comparison.</param>
        </member>
        <member name="T:Beyova.LambdaComparer`2">
            <summary>
            Class LambdaComparer.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TCompareType">The type of the t compare type.</typeparam>
        </member>
        <member name="P:Beyova.LambdaComparer`2.Comparer">
            <summary>
            Gets or sets the comparer.
            </summary>
            <value>The comparer.</value>
        </member>
        <member name="P:Beyova.LambdaComparer`2.Comparison">
            <summary>
            Gets the comparison.
            </summary>
            <value>The comparison.</value>
        </member>
        <member name="M:Beyova.LambdaComparer`2.#ctor(System.Func{`0,`1},System.Func{`1,`1,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.LambdaComparer`2" /> class.
            </summary>
            <param name="comparer">The comparer.</param>
            <param name="comparison">The comparison.</param>
        </member>
        <member name="M:Beyova.LambdaComparer`2.Compare(`0,`0)">
            <summary>
            When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.Value Meaning Less than zero <paramref name="x" /> is less than <paramref name="y" />.Zero <paramref name="x" /> equals <paramref name="y" />.Greater than zero <paramref name="x" /> is greater than <paramref name="y" />.</returns>
        </member>
        <member name="T:Beyova.AdaptableEnumConverter`1">
            <summary>
            Class AdaptableEnumConverter. Supports enum and nullable enum.
            </summary>
        </member>
        <member name="P:Beyova.AdaptableEnumConverter`1.IsFlag">
            <summary>
            Gets or sets a value indicating whether this instance is flag.
            </summary>
            <value><c>true</c> if this instance is flag; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Beyova.AdaptableEnumConverter`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.AdaptableEnumConverter`1" /> class.
            </summary>
        </member>
        <member name="M:Beyova.AdaptableEnumConverter`1.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns><c>true</c> if this instance can convert the specified object type; otherwise,
            <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.AdaptableEnumConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Beyova.AdaptableEnumConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:Beyova.DiagnosticFileLogger">
            <summary>
            Class DiagnosticFileLogger. This class cannot be inherited.
            </summary>
        </member>
        <member name="F:Beyova.DiagnosticFileLogger.diagnosticFileLoggers">
            <summary>
            The diagnostic file loggers
            </summary>
        </member>
        <member name="F:Beyova.DiagnosticFileLogger.initializeLocker">
            <summary>
            The initialize locker
            </summary>
        </member>
        <member name="M:Beyova.DiagnosticFileLogger.CreateOrUpdateDiagnosticFileLogger(System.String)">
            <summary>
            Creates the or update diagnostic file logger.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <returns>DiagnosticFileLogger.</returns>
        </member>
        <member name="M:Beyova.DiagnosticFileLogger.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.DiagnosticFileLogger"/> class.
            </summary>
            <param name="applicationName">Name of the application.</param>
        </member>
        <member name="M:Beyova.DiagnosticFileLogger.InternalLogMessageWithTimeStamp(System.String)">
            <summary>
            Logs the message with time stamp.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Beyova.DiagnosticFileLogger.InternalLogMessage(System.String)">
            <summary>
            Logs the message.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Beyova.DiagnosticFileLogger.InternalWriteContent(System.String)">
            <summary>
            Writes the content.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Beyova.DiagnosticFileLogger.InternalLogApiEvent(Beyova.ApiTracking.ApiEventLog)">
            <summary>
            Logs the API event.
            </summary>
            <param name="eventLog">The event log.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:Beyova.DiagnosticFileLogger.InternalLogApiTraceLog(Beyova.ApiTracking.ApiTraceLog)">
            <summary>
            Logs the API trace log.
            </summary>
            <param name="traceLog">The trace log.</param>
        </member>
        <member name="M:Beyova.DiagnosticFileLogger.LogApiEvent(Beyova.ApiTracking.ApiEventLog)">
            <summary>
            Logs the API event asynchronous.
            </summary>
            <param name="eventLog">The event log.</param>
        </member>
        <member name="M:Beyova.DiagnosticFileLogger.InternalLogEvent``1(``0)">
            <summary>
            Logs the event.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="eventLog">The event log.</param>
        </member>
        <member name="M:Beyova.DiagnosticFileLogger.LogEventAsync``1(System.String,``0)">
            <summary>
            Logs the event asynchronous.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="container">The container.</param>
            <param name="eventLog">The event log.</param>
        </member>
        <member name="M:Beyova.DiagnosticFileLogger.LogApiTraceLog(Beyova.ApiTracking.ApiTraceLog)">
            <summary>
            Logs the API trace log asynchronous.
            </summary>
            <param name="traceLog">The trace log.</param>
        </member>
        <member name="M:Beyova.DiagnosticFileLogger.LogException(Beyova.ExceptionSystem.ExceptionInfo)">
            <summary>
            Logs the exception asynchronous.
            </summary>
            <param name="exceptionInfo">The exception information.</param>
        </member>
        <member name="M:Beyova.DiagnosticFileLogger.LogMessage(System.String)">
            <summary>
            Logs the message asynchronous.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Beyova.SandboxMarshalInvokeResult">
            <summary>
            Class SandboxMarshalInvokeResult.
            </summary>
        </member>
        <member name="P:Beyova.SandboxMarshalInvokeResult.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="P:Beyova.SandboxMarshalInvokeResult.Type">
            <summary>
            The type
            </summary>
        </member>
        <member name="P:Beyova.SandboxMarshalInvokeResult.ExceptionInfo">
            <summary>
            The exception information
            </summary>
        </member>
        <member name="M:Beyova.SandboxMarshalInvokeResult.SetValue``1(``0)">
            <summary>
            Sets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value.</param>
        </member>
        <member name="M:Beyova.SandboxMarshalInvokeResult.SetException(Beyova.ExceptionSystem.ExceptionInfo)">
            <summary>
            Sets the exception.
            </summary>
            <param name="exceptionInfo">The exception information.</param>
        </member>
        <member name="M:Beyova.SandboxMarshalInvokeResult.SetException(Beyova.ExceptionSystem.BaseException)">
            <summary>
            Sets the exception.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="T:Beyova.RemoteAssemblyProvider">
            <summary>
            Class RemoteAssemblyProvider.
            </summary>
        </member>
        <member name="F:Beyova.RemoteAssemblyProvider.provider">
            <summary>
            The provider
            </summary>
        </member>
        <member name="F:Beyova.RemoteAssemblyProvider.tempAssemblies">
            <summary>
            The temporary assemblies
            </summary>
        </member>
        <member name="M:Beyova.RemoteAssemblyProvider.CreateRemoteTempAssembly(System.String[],System.Collections.Generic.HashSet{System.String})">
            <summary>
            Creates the temporary assembly.
            </summary>
            <param name="sourceCodes">The source codes.</param>
            <param name="codeReferencedAssembly">The referenced assembly.</param>
            <returns>TempAssembly.</returns>
        </member>
        <member name="M:Beyova.RemoteAssemblyProvider.CreateRemoteTempAssembly(System.String,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Creates the temporary assembly.
            </summary>
            <param name="coreCode">The core code.</param>
            <param name="codeReferencedAssembly">The referenced assembly.</param>
            <param name="usingNameSpaces">The using name spaces.</param>
            <param name="namespace">The namespace.</param>
            <returns>Beyova.TempAssembly.</returns>
        </member>
        <member name="M:Beyova.RemoteAssemblyProvider.CreateInstanceAndInvokeMethod(System.String,System.String,System.String,System.Object[])">
            <summary>
            Creates the instance and invoke method.
            NOTE: items in parameters should all inherited from <see cref="T:System.MarshalByRefObject" /> and set <see cref="T:System.SerializableAttribute" /> in class for proxy transfer.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="typeName">Name of the type.</param>
            <param name="method">The method.</param>
            <param name="methodParameters">The parameters.</param>
            <returns>RemoteInvokeResult.</returns>
        </member>
        <member name="M:Beyova.RemoteAssemblyProvider.CreateInstanceAndInvokeMethod(System.String,System.String,System.Object[],System.String,System.Object[])">
            <summary>
            Creates the instance and invoke method.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="typeName">Name of the type.</param>
            <param name="constructorParameters">The constructor parameters.</param>
            <param name="method">The method.</param>
            <param name="methodParameters">The method parameters.</param>
            <returns>RemoteInvokeResult.</returns>
        </member>
        <member name="T:Beyova.SandboxMarshalObject">
            <summary>
            Class SandboxMarshalObject.
            </summary>
        </member>
        <member name="M:Beyova.SandboxMarshalObject.InitializeLifetimeService">
            <summary>
            Obtains a lifetime service object to control the lifetime policy for this instance.
            </summary>
            <returns>An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance. This is the current lifetime service object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" /> property.</returns>
        </member>
        <member name="T:Beyova.SandboxSetting">
            <summary>
            Class SandboxSetting.
            </summary>
        </member>
        <member name="P:Beyova.SandboxSetting.ApplicationBaseDirectory">
            <summary>
            Gets or sets the application base directory.
            </summary>
            <value>The application base directory.</value>
        </member>
        <member name="P:Beyova.SandboxSetting.AssemblyNameListToLoad">
            <summary>
            Gets or sets the assembly name list to load. Names do NOT need to include ".dll" extension.
            </summary>
            <value>The assembly name list to load.</value>
        </member>
        <member name="P:Beyova.SandboxSetting.ExternalAssemblyToLoad">
            <summary>
            Gets or sets the external assembly to load.
            </summary>
            <value>The external assembly to load.</value>
        </member>
        <member name="T:Beyova.TempAssemblyProvider">
            <summary>
            Class TempAssemblyProvider.
            </summary>
        </member>
        <member name="M:Beyova.TempAssemblyProvider.CreateTempAssembly(System.String[],System.Collections.Generic.HashSet{System.String})">
            <summary>
            Creates the temporary assembly.
            </summary>
            <param name="sourceCodes">The source codes.</param>
            <param name="codeReferencedAssembly">The referenced assembly. If not specified, use <see cref="M:Beyova.TempAssemblyProvider.GetDefaultAdditionalAssembly"/> instead as default.</param>
            <returns>
            TempAssembly instance.
            </returns>
            <exception cref="T:Beyova.ExceptionSystem.DynamicCompileException"></exception>
        </member>
        <member name="M:Beyova.TempAssemblyProvider.CreateTempAssembly(System.String,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Creates the temporary assembly.
            </summary>
            <param name="codeReferencedAssembly">The referenced assembly.</param>
            <param name="usingNameSpaces">The using name spaces.</param>
            <param name="namespace">The namespace.</param>
            <param name="coreCode">The core code.</param>
            <returns>Beyova.TempAssembly.</returns>
        </member>
        <member name="M:Beyova.TempAssemblyProvider.GetDefaultUsingNamespaces">
            <summary>
            Gets the default using namespaces.
            </summary>
            <returns>HashSet&lt;System.String&gt;.</returns>
        </member>
        <member name="M:Beyova.TempAssemblyProvider.GetDefaultAdditionalAssembly">
            <summary>
            Gets the default additional assembly.
            </summary>
            <returns>HashSet&lt;Assembly&gt;.</returns>
        </member>
        <member name="M:Beyova.TempAssemblyProvider.GetCurrentAppDomainAssemblyLocations">
            <summary>
            Gets the current application domain assembly locations.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Beyova.TempAssembly">
            <summary>
            Class TempAssembly.
            </summary>
        </member>
        <member name="F:Beyova.TempAssembly._assembly">
            <summary>
            Gets or sets the assembly.
            </summary>
            <value>The assembly.</value>
        </member>
        <member name="P:Beyova.TempAssembly.Namespace">
            <summary>
            Gets or sets the namespace.
            </summary>
            <value>The namespace.</value>
        </member>
        <member name="F:Beyova.TempAssembly._appDomain">
            <summary>
            The _app domain
            </summary>
        </member>
        <member name="P:Beyova.TempAssembly.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="M:Beyova.TempAssembly.#ctor(System.CodeDom.Compiler.CompilerResults,System.String,System.AppDomain)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.TempAssembly" /> class.
            </summary>
            <param name="compilerResults">The compiler results.</param>
            <param name="_namespace">The _namespace.</param>
            <param name="appDomain">The application domain.</param>
        </member>
        <member name="M:Beyova.TempAssembly.CreateInstance(System.String,System.Object[])">
            <summary>
            Creates the instance.
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="T:Beyova.IPlaceHolderMember">
            <summary>
            Interface IPlaceHolderMember
            </summary>
        </member>
        <member name="P:Beyova.IPlaceHolderMember.SupportedPlaceKeys">
            <summary>
            Gets the supported place keys.
            </summary>
            <value>
            The supported place keys.
            </value>
        </member>
        <member name="M:Beyova.IPlaceHolderMember.GetPlaceValueByKey(Beyova.StringPlaceHolder)">
            <summary>
            Gets the place value by key.
            </summary>
            <param name="stringPlaceHolder">The string place holder.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.StringHolderReplacement">
            <summary>
            Class StringHolderReplacement.
            </summary>
        </member>
        <member name="T:Beyova.StringHolderReplacement.TranslateValueDelegate">
            <summary>
            Delegate TranslateValueDelegate
            </summary>
            <param name="stringPlaceHolder">The string place holder.</param>
            <param name="objects">The objects.</param>
            <returns>System.String.</returns>
        </member>
        <member name="F:Beyova.StringHolderReplacement.placeHolderSignFormat">
            <summary>
            The place holder sign format
            </summary>
        </member>
        <member name="F:Beyova.StringHolderReplacement.plainPlaceHolderSignFormat">
            <summary>
            The plain place holder sign format
            </summary>
        </member>
        <member name="F:Beyova.StringHolderReplacement.holderKeyVariable">
            <summary>
            The holder key variable
            </summary>
        </member>
        <member name="F:Beyova.StringHolderReplacement.holderKeyResult">
            <summary>
            The holder key result
            </summary>
        </member>
        <member name="F:Beyova.StringHolderReplacement.additionalParameterVariable">
            <summary>
            The additional parameter variable
            </summary>
        </member>
        <member name="F:Beyova.StringHolderReplacement.additionalParameterResult">
            <summary>
            The additional parameter result
            </summary>
        </member>
        <member name="F:Beyova.StringHolderReplacement.keyRegex">
            <summary>
            The key regex
            </summary>
        </member>
        <member name="F:Beyova.StringHolderReplacement.additionalParameterRegex">
            <summary>
            The additional parameter regex
            </summary>
        </member>
        <member name="F:Beyova.StringHolderReplacement.placeHolderSyntaxRegex">
            <summary>
            The place holder syntax regex
            </summary>
        </member>
        <member name="F:Beyova.StringHolderReplacement.placeHolderStatementRegex">
            <summary>
            The place holder statement regex
            </summary>
        </member>
        <member name="M:Beyova.StringHolderReplacement.GeneratePlaceHolderSign(System.String)">
            <summary>
            Generates the place holder sign.
            </summary>
            <param name="placeKey">The place key.</param>
            <returns>The sign string for specific <c>placeKey</c>.
            <example>
            e.g.: [@UserName]
            </example></returns>
        </member>
        <member name="M:Beyova.StringHolderReplacement.GeneratePlaceHolderSign(System.String,System.String[])">
            <summary>
            Generates the place holder sign.
            <remarks>
            <example>
            e.g.: [@UserName], [@Parameter(1)], etc.
            </example>
            </remarks>
            </summary>
            <param name="placeKey">The place key.</param>
            <param name="additionalParameterArray">The additional parameters.</param>
            <returns>The sign string for specific <c>placeKey</c> and <c>additionalParameters</c>.
            </returns>
        </member>
        <member name="M:Beyova.StringHolderReplacement.TranslatePlaceHolderSign(System.String)">
            <summary>
            Translates the place holder sign.
            </summary>
            <param name="statement">The statement.</param>
            <returns>The <see cref="T:Beyova.StringPlaceHolder" /> instance if the input statement is valid for translating.</returns>
        </member>
        <member name="M:Beyova.StringHolderReplacement.FigurePlaceKeysInContent(System.String)">
            <summary>
            Figures the content of the place keys in.
            </summary>
            <param name="content">The content.</param>
            <returns>ICollection{System.String}.</returns>
        </member>
        <member name="M:Beyova.StringHolderReplacement.FigureStringPlaceHoldersInContent(System.String)">
            <summary>
            Figures the content of the string place holders in.
            </summary>
            <param name="content">The content.</param>
            <returns>ICollection{StringPlaceHolder}.</returns>
        </member>
        <member name="M:Beyova.StringHolderReplacement.ReplaceContent(System.String,Beyova.StringHolderReplacement.TranslateValueDelegate,System.Object[])">
            <summary>
            Replaces the content.
            </summary>
            <param name="originalContent">Content of the original.</param>
            <param name="translateValueDelegate">The translate value delegate.</param>
            <param name="objects">The objects.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringHolderReplacement.ReplaceContent(System.String,Beyova.StringPlaceHolder,Beyova.StringHolderReplacement.TranslateValueDelegate,System.Object[])">
            <summary>
            Replaces the content.
            </summary>
            <param name="originalContent">Content of the original.</param>
            <param name="placeHolder">The place holder.</param>
            <param name="translateValueDelegate">The translate value delegate.</param>
            <param name="objects">The objects.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringHolderReplacement.StandardTranslateValueDelegate(Beyova.StringPlaceHolder,System.Object[])">
            <summary>
            Standards the replace delegate.
            </summary>
            <param name="stringPlaceHolder">The string place holder.</param>
            <param name="objects">The objects.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Beyova.StringPlaceHolder">
            <summary>
            Class StringPlaceHolder.
            <remarks>This class is used for <see cref="T:Beyova.StringHolderReplacement"/>.</remarks>
            </summary>
        </member>
        <member name="P:Beyova.StringPlaceHolder.PlaceKey">
            <summary>
            Gets or sets the place key.
            </summary>
            <value>
            The place key.
            </value>
        </member>
        <member name="P:Beyova.StringPlaceHolder.AdditionalParameters">
            <summary>
            Gets or sets the additional parameters.
            </summary>
            <value>
            The additional parameters.
            </value>
        </member>
        <member name="M:Beyova.StringPlaceHolder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.StringPlaceHolder"/> class.
            </summary>
        </member>
        <member name="M:Beyova.StringPlaceHolder.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.StringPlaceHolder"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="additionalParameters">The additional parameters.</param>
        </member>
        <member name="M:Beyova.StringPlaceHolder.ToStatement">
            <summary>
            To the statement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Beyova.StringPlaceHolder.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Beyova.StringPlaceHolder.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Beyova.StrickJsonSerializer">
            <summary>
            Class StrickJsonSerializer.
            </summary>
        </member>
        <member name="F:Beyova.StrickJsonSerializer.NullJToken">
            <summary>
            The null j token
            </summary>
        </member>
        <member name="F:Beyova.StrickJsonSerializer.UndefinedJToken">
            <summary>
            The undefined j token
            </summary>
        </member>
        <member name="M:Beyova.StrickJsonSerializer.ToStickJson``1(System.Object,System.Boolean,System.Boolean)">
            <summary>
            To the XML.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="anyObject">Any object.</param>
            <param name="indentedFormat">if set to <c>true</c> [indented format].</param>
            <param name="ignoreNullFields">if set to <c>true</c> [ignore null fields].</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.StrickJsonSerializer.WriteData(Newtonsoft.Json.JsonWriter,System.Object,System.Type,System.Boolean)">
            <summary>
            Writes the data.
            </summary>
            <param name="writer">The writer.</param>
            <param name="anyObject">Any object.</param>
            <param name="type">The type.</param>
            <param name="ignoreNullFields">if set to <c>true</c> [ignore null fields].</param>
        </member>
        <member name="T:Beyova.Framework">
            <summary>
            Class Framework.
            </summary>
        </member>
        <member name="F:Beyova.Framework.ConfigurationReader">
            <summary>
            The configuration reader
            </summary>
        </member>
        <member name="F:Beyova.Framework.GlobalCultureResourceCollection">
            <summary>
            The global culture resource collection
            </summary>
        </member>
        <member name="F:Beyova.Framework.AssemblyVersion">
            <summary>
            The assembly version
            </summary>
        </member>
        <member name="P:Beyova.Framework.PrimarySqlConnection">
            <summary>
            Gets the primary SQL connection.
            </summary>
            <value>
            The primary SQL connection.
            </value>
        </member>
        <member name="M:Beyova.Framework.SetGlobalDefaultApiTracking(Beyova.IApiTracking)">
            <summary>
            Sets the global default api tracking.
            </summary>
            <param name="apiTracking">The API tracking.</param>
        </member>
        <member name="M:Beyova.Framework.AboutService">
            <summary>
            Abouts the service.
            </summary>
            <returns>ServiceVersion.</returns>
        </member>
        <member name="M:Beyova.Framework.GetResourceString(System.String,System.Boolean)">
            <summary>
            Gets the resource by key.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <param name="languageCompatibility">The language compatibility.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.Framework.GetConfiguration``1(System.String,``0)">
            <summary>
            Gets the configuration.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.Framework.GetConfiguration(System.String,System.String)">
            <summary>
            Gets the configuration.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:Beyova.Framework.ConfigurationSettingCount">
            <summary>
            Gets the configuration setting count.
            </summary>
            <value>The configuration setting count.</value>
        </member>
        <member name="P:Beyova.Framework.ApiTracking">
            <summary>
            The API tracking
            </summary>
        </member>
        <member name="P:Beyova.Framework.CurrentCultureInfo">
            <summary>
            Gets the current culture information.
            </summary>
            <value>The current culture information.</value>
        </member>
        <member name="M:Beyova.Framework.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Beyova.Framework"/> class.
            </summary>
        </member>
        <member name="M:Beyova.Framework.Initialize">
            <summary>
            Initializes the configuration.
            </summary>
        </member>
        <member name="M:Beyova.Framework.InitializeAssemblyVersion">
            <summary>
            Initializes the assembly version.
            </summary>
            <returns>System.Collections.Generic.Dictionary&lt;System.String, System.Object&gt;.</returns>
        </member>
        <member name="M:Beyova.Framework.InitializeApiTracking(System.Collections.Generic.List{System.Reflection.Assembly})">
            <summary>
            Initializes the API tracking.
            </summary>
            <param name="list">The list.</param>
            <returns>Beyova.IApiTracking.</returns>
        </member>
        <member name="T:Beyova.IConfigurationReader">
            <summary>
            Interface IConfigurationReader
            </summary>
        </member>
        <member name="P:Beyova.IConfigurationReader.SettingsCount">
            <summary>
            Gets the settings count.
            </summary>
            <value>The settings count.</value>
        </member>
        <member name="P:Beyova.IConfigurationReader.PrimarySqlConnection">
            <summary>
            Gets the primary SQL connection.
            </summary>
            <value>
            The primary SQL connection.
            </value>
        </member>
        <member name="P:Beyova.IConfigurationReader.ConfigurationBelongs">
            <summary>
            Gets the configuration belongs.
            </summary>
            <value>The configuration belongs.</value>
        </member>
        <member name="M:Beyova.IConfigurationReader.GetConfiguration``1(System.String,``0)">
            <summary>
            Gets the configuration.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.IConfigurationReader.GetConfiguration(System.String,System.String)">
            <summary>
            Gets the configuration.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.IConfigurationReader.GetValues">
            <summary>
            Gets the values.
            </summary>
            <returns>IEnumerable&lt;KeyValuePair&lt;System.String, System.Object&gt;&gt;.</returns>
        </member>
        <member name="M:Beyova.IConfigurationReader.RefreshSettings">
            <summary>
            Refreshes the settings.
            </summary>
        </member>
        <member name="T:Beyova.ICriteria">
            <summary>
            Interface ICriteria
            </summary>
        </member>
        <member name="P:Beyova.ICriteria.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Beyova.IApiTracking">
            <summary>
            Interface IApiTracking
            </summary>
        </member>
        <member name="M:Beyova.IApiTracking.LogApiEvent(Beyova.ApiTracking.ApiEventLog)">
            <summary>
            Logs the API event asynchronous.
            </summary>
            <param name="eventLog">The event log.</param>
        </member>
        <member name="M:Beyova.IApiTracking.LogException(Beyova.ExceptionSystem.ExceptionInfo)">
            <summary>
            Logs the exception asynchronous.
            </summary>
            <param name="exceptionInfo">The exception information.</param>
        </member>
        <member name="M:Beyova.IApiTracking.LogApiTraceLog(Beyova.ApiTracking.ApiTraceLog)">
            <summary>
            Logs the API trace log asynchronous.
            </summary>
            <param name="traceLog">The trace log.</param>
        </member>
        <member name="M:Beyova.IApiTracking.LogMessage(System.String)">
            <summary>
            Logs the message asynchronous.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Beyova.ClientEnvironment">
            <summary>
            Class ClientEnvironment
            </summary>
        </member>
        <member name="P:Beyova.ClientEnvironment.Device">
            <summary>
            Gets or sets Value indicating it is device.
            </summary>
            <value>Value indicating it is device.</value>
        </member>
        <member name="P:Beyova.ClientEnvironment.Platform">
            <summary>
            Gets or sets Value indicating it is platform.
            </summary>
            <value>Value indicating it is platform.</value>
        </member>
        <member name="P:Beyova.ClientEnvironment.UserAgent">
            <summary>
            Gets or sets Value indicating it is user agent.
            </summary>
            <value>Value indicating it is user agent.</value>
        </member>
        <member name="P:Beyova.ClientEnvironment.AppVersion">
            <summary>
            Gets or sets Value indicating it is application version.
            e.g.: 1.2.3.123, 1.2.3
            </summary>
            <value>Value indicating it is application version.</value>
        </member>
        <member name="T:Beyova.Gender">
            <summary>
            Enum Gender
            </summary>
        </member>
        <member name="F:Beyova.Gender.Undefined">
            <summary>
            Value indicating it is Undefined
            </summary>
        </member>
        <member name="F:Beyova.Gender.Male">
            <summary>
            Value indicating it is male
            </summary>
        </member>
        <member name="F:Beyova.Gender.Female">
            <summary>
            Value indicating it is female
            </summary>
        </member>
        <member name="T:Beyova.ObjectState">
            <summary>
                Enum values for object status.
            </summary>
        </member>
        <member name="F:Beyova.ObjectState.Normal">
            <summary>
                The value indicating that object is normal.(0x0)
            </summary>
        </member>
        <member name="F:Beyova.ObjectState.Deleted">
            <summary>
                The value indicating that object is deleted logically. (0x1)
            </summary>
        </member>
        <member name="F:Beyova.ObjectState.Invisible">
            <summary>
                The value indicating that object is invisible. (0x2)
            </summary>
        </member>
        <member name="F:Beyova.ObjectState.ReadOnly">
            <summary>
                The value indicating that object is readonly. (0x4)
            </summary>
        </member>
        <member name="F:Beyova.ObjectState.Disabled">
            <summary>
                The value indicating that object is disabled. (0x8)
            </summary>
        </member>
        <member name="T:Beyova.DrawingExtension">
            <summary>
            Extension class for drawing
            </summary>
        </member>
        <member name="M:Beyova.DrawingExtension.PadImage(System.Drawing.Image)">
            <summary>
            Pads the image.
            </summary>
            <param name="originalImage">The original image.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Beyova.DrawingExtension.GetImageEncoder(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Gets the image encoder.
            </summary>
            <param name="format">The format.</param>
            <returns>ImageCodecInfo.</returns>
        </member>
        <member name="M:Beyova.DrawingExtension.ToBitmap(System.Byte[])">
            <summary>
            To the bitmap.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>Bitmap.</returns>
        </member>
        <member name="M:Beyova.DrawingExtension.Resize(System.Drawing.Bitmap,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Resizes the specified image.
            </summary>
            <param name="image">The image.</param>
            <param name="maxWidth">The maximum width.</param>
            <param name="maxHeight">The maximum height.</param>
            <param name="keepRatio">if set to <c>true</c> [keep ratio].</param>
            <returns>Bitmap.</returns>
        </member>
        <member name="M:Beyova.DrawingExtension.GetBytes(System.Drawing.Bitmap,System.Drawing.Imaging.ImageFormat,System.Int64)">
            <summary>
            Gets the bytes.
            </summary>
            <param name="image">The image.</param>
            <param name="imageFormat">The image format.</param>
            <param name="qualityLevel">The quality level.
            <remarks>
            A quality level of 0 corresponds to the greatest compression, and a quality level of 100 corresponds to the least compression.
            https://msdn.microsoft.com/library/bb882583(v=vs.110).aspx
            </remarks></param>
            <returns>System.Byte[].</returns>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">GetBytes</exception>
        </member>
        <member name="M:Beyova.DrawingExtension.Crop(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Crops the specified image.
            </summary>
            <param name="image">The image.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>Bitmap.</returns>
        </member>
        <member name="T:Beyova.I18NResourceCollection">
            <summary>
            Class I18NResourceCollection.
            </summary>
        </member>
        <member name="F:Beyova.I18NResourceCollection.resourceManager">
            <summary>
            The resource manager
            </summary>
        </member>
        <member name="P:Beyova.I18NResourceCollection.ResourceManager">
            <summary>
            Gets or sets the resource manager.
            </summary>
            <value>The resource manager.</value>
        </member>
        <member name="M:Beyova.I18NResourceCollection.#ctor(System.String,System.Reflection.Assembly)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.I18NResourceCollection" /> class.
            </summary>
            <param name="resourceBaseName">Name of the resource.</param>
            <param name="resourceAssembly">The resource assembly.</param>
        </member>
        <member name="P:Beyova.I18NResourceCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.String"/> with the specified resource key.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.I18NResourceCollection.GetResourceString(System.String,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Gets the resource string.
            If cultureCode is specified, then use that.
            Otherwise, use Thread UI culture (the default behavior by .NET) instead.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <param name="cultureInfo">The culture information.</param>
            <param name="languageCompatibility">if set to <c>true</c> [language compatibility].</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.I18NResourceCollection.GetResourceObject(System.String,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Gets the resource.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <param name="cultureInfo">The culture information.</param>
            <param name="languageCompatibility">if set to <c>true</c> [language compatibility].</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.I18NResourceCollection.GetResourceStringsByCultureCode(System.String)">
            <summary>
            Gets the resource strings by culture code.
            </summary>
            <param name="cultureCode">The culture code.</param>
            <returns>Dictionary&lt;System.String, System.String&gt;.</returns>
        </member>
        <member name="M:Beyova.I18NResourceCollection.GetResourceSet">
            <summary>
            Gets the resource string set.
            </summary>
            <returns>Dictionary&lt;CultureInfo, Dictionary&lt;System.String, System.String&gt;&gt;.</returns>
        </member>
        <member name="M:Beyova.I18NResourceCollection.GetResourceSets">
            <summary>
            Gets the resource sets.
            </summary>
            <returns>Dictionary&lt;CultureInfo, ResourceSet&gt;.</returns>
        </member>
        <member name="M:Beyova.I18NResourceCollection.HasCultureResource(System.Globalization.CultureInfo)">
            <summary>
            Determines whether [has culture resource] [the specified culture information].
            </summary>
            <param name="cultureInfo">The culture information.</param>
            <returns><c>true</c> if [has culture resource] [the specified culture information]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Beyova.IBaseObject">
            <summary>
            Interface IBaseObject
            </summary>
        </member>
        <member name="P:Beyova.IBaseObject.CreatedBy">
            <summary>
            Gets or sets the created by.
            </summary>
            <value>
            The created by.
            </value>
        </member>
        <member name="P:Beyova.IBaseObject.LastUpdatedBy">
            <summary>
            Gets or sets the last updated by.
            </summary>
            <value>
            The last updated by.
            </value>
        </member>
        <member name="T:Beyova.IGlobalObjectName">
            <summary>
            Interface IGlobalObjectName
            </summary>
        </member>
        <member name="P:Beyova.IGlobalObjectName.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Beyova.IGlobalObjectName.CultureCode">
            <summary>
            Gets or sets the culture code.
            </summary>
            <value>
            The culture code.
            e.g.: zh-CN, en-US, pt-PT, etc.
            </value>
        </member>
        <member name="T:Beyova.IIdentifier">
            <summary>
            Interface for object IIdentifier.
            </summary>
        </member>
        <member name="P:Beyova.IIdentifier.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="T:Beyova.BaseObject">
            <summary>
            Abstract class for base object, with key, created stamp and last updated stamp.
            </summary>
        </member>
        <member name="P:Beyova.BaseObject.CreatedBy">
            <summary>
            Gets or sets the created by.
            </summary>
            <value>
            The created by.
            </value>
        </member>
        <member name="P:Beyova.BaseObject.LastUpdatedBy">
            <summary>
            Gets or sets the last updated by.
            </summary>
            <value>
            The last updated by.
            </value>
        </member>
        <member name="T:Beyova.BaseObject`1">
            <summary>
            Class BaseObject.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Beyova.BaseObject`1.Object">
            <summary>
            Gets or sets the object.
            </summary>
            <value>The object.</value>
        </member>
        <member name="M:Beyova.BaseObject`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BaseObject`1"/> class.
            </summary>
        </member>
        <member name="M:Beyova.BaseObject`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BaseObject`1"/> class.
            </summary>
            <param name="genricObject">The genric object.</param>
        </member>
        <member name="T:Beyova.BaseCriteria">
            <summary>
            Class BaseCriteria.
            </summary>
        </member>
        <member name="P:Beyova.BaseCriteria.Key">
            <summary>
            Gets or sets the key of the object.
            If this value is assigned, other criteria would be ignored.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Beyova.BaseCriteria.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Beyova.BaseCriteria.OrderDescending">
            <summary>
            Gets or sets a value indicating whether [order descending].
            </summary>
            <value><c>true</c> if [order descending]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Beyova.BaseCriteria.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.BaseCriteria" /> class.
            </summary>
        </member>
        <member name="T:Beyova.EnvironmentInfo">
            <summary>
            Class EnvironmentInfo.
            </summary>
        </member>
        <member name="P:Beyova.EnvironmentInfo.AssemblyVersion">
            <summary>
            Gets or sets the assembly version.
            </summary>
            <value>The assembly version.</value>
        </member>
        <member name="P:Beyova.EnvironmentInfo.SqlDatabaseEnvironment">
            <summary>
            Gets or sets the server environment.
            </summary>
            <value>The server environment.</value>
        </member>
        <member name="P:Beyova.EnvironmentInfo.ConfigurationBelongs">
            <summary>
            Gets or sets the configuration belongs.
            </summary>
            <value>The configuration belongs.</value>
        </member>
        <member name="P:Beyova.EnvironmentInfo.GCMemory">
            <summary>
            Gets or sets the gc memory.
            </summary>
            <value>The gc memory.</value>
        </member>
        <member name="P:Beyova.EnvironmentInfo.AssemblyHash">
            <summary>
            Gets or sets the assembly hash.
            </summary>
            <value>The assembly hash.</value>
        </member>
        <member name="M:Beyova.EnvironmentInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.EnvironmentInfo"/> class.
            </summary>
        </member>
        <member name="M:Beyova.EnvironmentInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Beyova.CollectionExtension">
            <summary>
            Extension class for collection type object.
            </summary>
        </member>
        <member name="F:Beyova.CollectionExtension.keyValueFormat">
            <summary>
            The format
            </summary>
        </member>
        <member name="M:Beyova.CollectionExtension.AddIfNotExists``1(System.Collections.Generic.ICollection{``0},``0,System.Func{``0,``0,System.Boolean})">
            <summary>
            Adds if not exists.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="item">The item.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:Beyova.CollectionExtension.AddIfNotNullOrEmpty(System.Collections.Generic.ICollection{System.String},System.String)">
            <summary>
            Adds if not null.
            </summary>
            <param name="collection">The collection.</param>
            <param name="item">The item.</param>
            <returns><c>true</c> if succeed to add, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.AddIfNotNull(System.Xml.Linq.XElement,System.Xml.Linq.XContainer)">
            <summary>
            Adds if not null.
            </summary>
            <param name="container">The container.</param>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CollectionExtension.AddIfNotNull``1(System.Collections.Generic.ICollection{``0},System.Nullable{``0})">
            <summary>
            Adds if not null.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="item">The item.</param>
            <returns><c>true</c> if succeed to add, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.AddIfNotNull``1(System.Collections.Generic.ICollection{``0},``0)">
            <summary>
            Adds if not null.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="item">The item.</param>
            <returns><c>true</c> if succeed to add, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.AddIfNotNull``1(System.Collections.Generic.HashSet{``0},System.Nullable{``0})">
            <summary>
            Adds if not null.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Beyova.CollectionExtension.AddIfNotNull``1(System.Collections.Generic.HashSet{``0},``0)">
            <summary>
            Adds if not null.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Beyova.CollectionExtension.AddIfNotNullOrEmpty(System.Collections.Specialized.NameValueCollection,System.String,System.String)">
            <summary>
            Adds if not null.
            </summary>
            <param name="collection">The collection.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Beyova.CollectionExtension.AddIfNotExists``1(System.Collections.Generic.HashSet{``0},``0,System.Func{``0,``0,System.Boolean})">
            <summary>
            Adds if not exists.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="item">The item.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:Beyova.CollectionExtension.AddIfNotNull``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Adds if not null.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Beyova.CollectionExtension.AddIfNotNullOrEmpty(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Adds if not null or empty. Key and value would be added only when neither of them is null or empty.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Beyova.CollectionExtension.ToJArray``2(System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,``1,Newtonsoft.Json.Linq.JToken})">
            <summary>
            To the j array.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="eachObjectGenerateFunc">The each object generate function.</param>
            <returns>JArray.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.ToJArray``2(System.Collections.Generic.IDictionary{``0,``1},System.String,System.String)">
            <summary>
            To the j array.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="keyPropertyName">Name of the key property.</param>
            <param name="valuePropertyName">Name of the value property.</param>
            <returns>JArray.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.MergeTo``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IList{``0},System.Boolean,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Merges to.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="destination">The destination.</param>
            <param name="overrideIfExists">if set to <c>true</c> [override if exists].</param>
            <param name="equalityComparer">The equality comparer.</param>
        </member>
        <member name="M:Beyova.CollectionExtension.MatchAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Matches any.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="hitSubjects">The hit subjects.</param>
            <param name="equalityComparer">The equality comparer.</param>
            <returns><c>true</c> if exists any match between <c>source</c> and <c>hitSubjects</c>, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.MatchAll``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Matches all.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="hitSubjects">The hit subjects.</param>
            <param name="equalityComparer">The equality comparer.</param>
            <returns><c>true</c> if match all from <c>source</c> and <c>hitSubjects</c> (including <c>hitSubjects</c> has no item), <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.SubCollection``1(System.Collections.Generic.IList{``0},System.Int32,System.Nullable{System.Int32})">
            <summary>
            Subs the collection.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>List&lt;T&gt;.</returns>
            <exception cref="T:Beyova.ExceptionSystem.InvalidObjectException">
            startIndex
            or
            count
            </exception>
        </member>
        <member name="M:Beyova.CollectionExtension.RemoveFrom``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            Removes from.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The list.</param>
            <param name="startIndex">The start index.</param>
            <exception cref="T:Beyova.ExceptionSystem.InvalidObjectException">startIndex</exception>
        </member>
        <member name="M:Beyova.CollectionExtension.GetByLastIndexOf``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Gets the by last index of. (index should >= 1)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="lastIndex">The last index. (should >= 1)</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.GetByIndexOf``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Gets the by index of. (index should >= 1)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="index">The index.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Indexes the of.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CollectionExtension.IndexOf``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``0,``1,System.Boolean})">
            <summary>
            Indexes the of.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <typeparam name="TFactor">The type of the factor.</typeparam>
            <param name="collection">The collection.</param>
            <param name="factorValue">The factor value.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CollectionExtension.Sort``2(System.Collections.Generic.List{``0},System.Func{``0,``1},System.Boolean)">
            <summary>
            Sorts the specified comparable selector.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TComparableType">The type of the t comparable type.</typeparam>
            <param name="list">The list.</param>
            <param name="comparableSelector">The comparable selector.</param>
            <param name="isDescending">if set to <c>true</c> [is descending].</param>
        </member>
        <member name="M:Beyova.CollectionExtension.Sort``2(System.Collections.Generic.List{``0},System.Func{``0,``1},System.Func{``1,``1,System.Int32})">
            <summary>
            Sorts the specified list.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TComparableType">The type of the t comparable type.</typeparam>
            <param name="list">The list.</param>
            <param name="comparableSelector">The comparable selector.</param>
            <param name="comparison">The comparison.</param>
        </member>
        <member name="M:Beyova.CollectionExtension.SortAs``2(System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Func{``0,``1})">
            <summary>
            Sorts as.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TSortFactor">The type of the sort factor.</typeparam>
            <param name="list">The list.</param>
            <param name="sortFactors">The sort factors.</param>
            <param name="getSortFactor">The get sort factor.</param>
        </member>
        <member name="M:Beyova.CollectionExtension.TryReplace``2(System.Collections.Generic.IList{``0},``0,``1,System.Func{``0,``1,System.Boolean})">
            <summary>
            Try to the replace with specific item. Replaced index would be returned.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TComparerIdentifier">The type of the t comparer identifier.</typeparam>
            <param name="collection">The collection.</param>
            <param name="itemToReplace">The item to replace.</param>
            <param name="comparerIdentifier">The comparer identifier.</param>
            <param name="comparer">The comparer.</param>
            <returns>System.Nullable&lt;System.Int32&gt; for replaced index.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.TryReplaceAll``2(System.Collections.Generic.IList{``0},``0,``1,System.Func{``0,``1,System.Boolean})">
            <summary>
            Try to the replace all with specific item. Replaced count would be returned.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TComparerIdentifier">The type of the t comparer identifier.</typeparam>
            <param name="collection">The collection.</param>
            <param name="itemToReplace">The item to replace.</param>
            <param name="comparerIdentifier">The comparer identifier.</param>
            <param name="comparer">The comparer.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.TryGetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Tries the get value.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>TValue.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            To the hash set.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items">The items.</param>
            <param name="comparer">The comparer.</param>
            <returns>HashSet&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            To the dictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="items">The items.</param>
            <param name="comparer">The comparer.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CollectionExtension.ListToXml``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Object})">
            <summary>
            Converts list to XML.
            <remarks>Serialize object to &lt;List&gt;&lt;Item&gt;Value&lt;/Item&gt;&lt;/List&gt;</remarks>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="convertFunc">The convert function.</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.ListToXml``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Xml.Linq.XElement,System.Boolean})">
            <summary>
            Converts list to XML.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="fillXmlItemFunc">The fill XML item function. XElement item is for fill, bool is to indicating needs to add it into list as result or not.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CollectionExtension.DictionaryToXml``1(System.Collections.Generic.IDictionary{System.String,``0},System.Func{``0,System.String})">
            <summary>
            Dictionaries to XML.
            </summary>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="convertFunc">The convert function.</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.DictionaryToXml``2(System.Collections.Generic.IDictionary{``0,``1},System.Func{System.Collections.Generic.KeyValuePair{``0,``1},System.Xml.Linq.XElement})">
            <summary>
            Dictionaries to XML.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="convertFunc">The convert function.</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.XmlToList``1(System.Xml.Linq.XElement,System.Func{System.Xml.Linq.XElement,``0})">
            <summary>
            Converts XML to list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xml">The XML.</param>
            <param name="xmlNodeToEntity">The XML node to entity.</param>
            <returns>List{System.String}.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.XmlToDictionary``1(System.Xml.Linq.XElement,System.Func{System.Xml.Linq.XElement,``0})">
            <summary>
            XMLs to dictionary.
            </summary>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="xml">The XML.</param>
            <param name="xmlNodeToEntity">The XML node to entity.</param>
            <returns>Dictionary&lt;System.String, TValue&gt;.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.XmlToDictionary``2(System.Xml.Linq.XElement,System.Func{System.Xml.Linq.XElement,System.Collections.Generic.KeyValuePair{``0,``1}})">
            <summary>
            XMLs to dictionary.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="xml">The XML.</param>
            <param name="xmlNodeToEntity">The XML node to entity.</param>
            <returns>Dictionary&lt;TKey, TValue&gt;.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.XmlToList(System.Xml.Linq.XElement)">
            <summary>
            Converts XML to list.
            </summary>
            <param name="xml">The XML.</param>
            <returns>List&lt;System.String&gt;.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.XmlToList(System.String)">
            <summary>
            Converts XML to list.
            </summary>
            <param name="xmlString">The XML string.</param>
            <returns>List{System.String}.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.SqlJsonToList``1(System.Object)">
            <summary>
            SQLs the json to list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sqlJson">The SQL json.</param>
            <returns>System.Collections.Generic.List&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.SqlJsonToSimpleList``1(System.Object,System.String)">
            <summary>
            Converts SQL the json to simple list.
            Example: Input [{item:x},{item:y}] + "item", then get [x,y]
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sqlJson">The SQL json.</param>
            <param name="propertyName">Name of the property.</param>
            <returns>System.Collections.Generic.List&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.SqlJsonToDictionary``2(System.Object,System.String,System.String,System.Collections.Generic.IEqualityComparer{``0},System.Boolean)">
            <summary>
            SQLs the json to dictionary.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="sqlJson">The SQL json.</param>
            <param name="keyPropertyName">Name of the key property.</param>
            <param name="valuePropertyName">Name of the value property.</param>
            <param name="equalityComparer">The equality comparer.</param>
            <param name="useMerge">if set to <c>true</c> [use merge].</param>
            <returns>Dictionary&lt;TKey, TValue&gt;.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.JoinWithinFormat``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Joins the within format.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance">The instance.</param>
            <param name="format">The format. {0} would be used for index, {1} would be used as value.</param>
            <returns>
            System.String.
            </returns>
        </member>
        <member name="M:Beyova.CollectionExtension.HasItem``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether the specified instance has item.
            <remarks><c>Instance</c> can be null. Return true only when instance is not null and has item.</remarks>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance">The instance.</param>
            <returns><c>true</c> if the specified instance has item; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.HasItem``1(System.Collections.Generic.IList{``0},``0)">
            <summary>
            Determines whether the specified instance has item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance">The instance.</param>
            <param name="objToMatch">The object to match.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.Join``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.String})">
            <summary>
            Joins the specified instance.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance">The instance.</param>
            <param name="separator">The separator.</param>
            <param name="valueSelector">The value selector.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.ToKeyValueString(System.Collections.Specialized.NameValueCollection,System.Boolean)">
            <summary>
            To the key value string.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="encodeHtml">if set to <c>true</c> [encode HTML].</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.FillValuesByKeyValueString(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Fills the values by key value string.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="keyValueString">The key value string.</param>
        </member>
        <member name="M:Beyova.CollectionExtension.Contains(System.String,System.Char,System.Boolean)">
            <summary>
            Determines whether [contains] [the specified any string].
            </summary>
            <param name="anyString">Any string.</param>
            <param name="value">The value.</param>
            <param name="ignoreCase">The ignore case.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.Contains(System.String[],System.String,System.Boolean)">
            <summary>
            Determines whether [contains] [the specified string array].
            </summary>
            <param name="stringArray">The string array.</param>
            <param name="value">The value.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns>
              <c>true</c> if [contains] [the specified string array]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.Contains``1(``0[],``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Determines whether [contains] [the specified array].
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array">The array.</param>
            <param name="value">The value.</param>
            <param name="equalityComparer">The equality comparer.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.HasItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Determines whether the specified predicate has item.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="collection">The collection.</param>
            <param name="predicate">The predicate.</param>
            <returns>
              <c>true</c> if the specified predicate has item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.CollectionExtension.HasItem``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Determines whether [contains] [the specified collection]. Rules: exists any item where equalityComparer.Equals(selector(x), factor) == true
            </summary>
            <typeparam name="TEntity">The type of the t entity.</typeparam>
            <typeparam name="TFactor">The type of the t factor.</typeparam>
            <param name="collection">The collection.</param>
            <param name="factor">The factor.</param>
            <param name="selector">The selector.</param>
            <param name="equalityComparer">The equality comparer.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.Contains``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``0,``1},System.Func{``1,``1,System.Boolean})">
            <summary>
            Determines whether [contains] [the specified collection].
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <typeparam name="TFactor">The type of the factor.</typeparam>
            <param name="collection">The collection.</param>
            <param name="factor">The factor.</param>
            <param name="selector">The selector.</param>
            <param name="equalityComparer">The equality comparer.</param>
            <returns>
              <c>true</c> if [contains] [the specified collection]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.CollectionExtension.Contains``3(System.Collections.Generic.IDictionary{``0,``1},``2,System.Func{``1,``2},System.Collections.Generic.IEqualityComparer{``2})">
            <summary>
            Determines whether [contains] [the specified dictionary].
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <typeparam name="TFactor">The type of the t factor.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="factor">The factor.</param>
            <param name="selector">The selector.</param>
            <param name="equalityComparer">The equality comparer.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.TryGetValue(System.Web.HttpCookieCollection,System.String)">
            <summary>
            Tries the get value.
            </summary>
            <param name="cookieCollection">The cookie collection.</param>
            <param name="key">The key.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.SafeFirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Safe to get first or default. If instance is null, return default(T);
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumerable">The enumerable.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.SafeFirstOrDefaultValue``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Safes the first or default value.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <returns>TValue.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.FirstOrDefault``1(``0[])">
            <summary>
            Firsts the or default.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array">The array.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.FirstOrDefault``1(System.Array)">
            <summary>
            Firsts the or default.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array">The array.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.SafeFirstOrDefault``1(System.Array)">
            <summary>
            Safes the first or default.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array">The array.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.SafeFirstOrDefault``1(``0[])">
            <summary>
            Safes the first or default.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array">The array.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.AsList``1(``0)">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="anyObject">Any object.</param>
            <returns>List&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.AsCollection``1(``0)">
            <summary>
            Ases the collection.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="anyObject">Any object.</param>
            <returns>Collection&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.AsHashSet``1(``0)">
            <summary>
            Ases the hash set.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="anyObject">Any object.</param>
            <returns>System.Collections.Generic.HashSet&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.AsArray``1(``0)">
            <summary>
            Ases the array.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="anyObject">Any object.</param>
            <returns>T[].</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.AsDictionary``2(``1,``0)">
            <summary>
            Ases the dictionary.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="anyObject">Any object.</param>
            <param name="key">The key.</param>
            <returns>Dictionary&lt;TKey, TValue&gt;.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.AsDictionary``2(System.Collections.Generic.IEnumerable{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)">
            <summary>
            Ases the dictionary.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="anyObject">Any object.</param>
            <param name="keyGetter">The key getter.</param>
            <param name="keyEqualityComparer">The key equality comparer.</param>
            <param name="overrideIfExists">The override if exists.</param>
            <returns>System.Collections.Generic.Dictionary&lt;TKey, TValue&gt;.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.AddRange``1(System.Collections.Generic.HashSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds the range.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="hashSet">The hash set.</param>
            <param name="items">The items.</param>
        </member>
        <member name="M:Beyova.CollectionExtension.AddRange``2(System.Collections.Generic.Dictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Boolean)">
            <summary>
            Adds the range.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="items">The items.</param>
            <param name="overrideIfExists">if set to <c>true</c> [override if exists].</param>
        </member>
        <member name="M:Beyova.CollectionExtension.AddRange(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Adds the range.
            </summary>
            <param name="nameValueCollection">The name value collection.</param>
            <param name="items">The items.</param>
        </member>
        <member name="M:Beyova.CollectionExtension.Merge(System.Collections.Specialized.NameValueCollection,System.String,System.String,System.Boolean)">
            <summary>
            Merges the specified name value collection.
            </summary>
            <param name="nameValueCollection">The name value collection.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="overrideIfExists">if set to <c>true</c> [override if exists].</param>
        </member>
        <member name="M:Beyova.CollectionExtension.AddRange(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds the range.
            </summary>
            <param name="nameValueCollection">The name value collection.</param>
            <param name="items">The items.</param>
        </member>
        <member name="M:Beyova.CollectionExtension.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Unions the specified item2.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item1">The item1.</param>
            <param name="item2">The item2.</param>
            <param name="allowDuplicated">if set to <c>true</c> [allow duplicated].</param>
            <param name="equalityComparer">The equality comparer.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CollectionExtension.FindAndRemove``2(System.Collections.Generic.List{``0},``1,System.Func{``0,``1,System.Boolean})">
            <summary>
            Finds the first match and remove it from list.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TComparerIdentifier">The type of the t comparer identifier.</typeparam>
            <param name="collection">The collection.</param>
            <param name="comparerIdentifier">The comparer identifier.</param>
            <param name="comparer">The comparer.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.SafeGetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Safe to get value. Only when instance is not null and key is contained, return value. Otherwise return default(T).
            </summary>
            <typeparam name="TKey">T of the key.</typeparam>
            <typeparam name="TValue">T of the value.</typeparam>
            <param name="instance">The instance.</param>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CollectionExtension.GetOrCreate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Gets the or create.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="instance">The instance.</param>
            <param name="key">The key.</param>
            <param name="valueForCreate">The value for create.</param>
            <returns>TValue.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Boolean)">
            <summary>
            Merges the specified instance.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="instance">The instance.</param>
            <param name="keyValueCollection">The key value collection.</param>
            <param name="overrideIfExists">if set to <c>true</c> [override if exists].</param>
        </member>
        <member name="M:Beyova.CollectionExtension.Load``2(System.Collections.Generic.Dictionary{``0,``1},System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{``0,``1}})">
            <summary>
            Loads the specified instance.
            </summary>
            <typeparam name="TKey">T of the key.</typeparam>
            <typeparam name="TValue">T of the value.</typeparam>
            <param name="instance">The instance.</param>
            <param name="keyValueCollection">The key value collection.</param>
        </member>
        <member name="M:Beyova.CollectionExtension.Merge``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Boolean)">
            <summary>
            Merges the specified instance.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="instance">The instance.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="overrideIfExists">if set to <c>true</c> [override if exists].</param>
            <returns><c>true</c> if value is inserted, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.Merge``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Func{``0,``1,``1,System.Boolean})">
            <summary>
            Merges the specified key.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="instance">The instance.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="determineOverride">The determine override.</param>
            <returns><c>true</c> if it is added, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)">
            <summary>
            Merges the specified instance.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="instance">The instance.</param>
            <param name="mergeObject">The merge object.</param>
            <param name="overrideIfExists">if set to <c>true</c> [override if exists].</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,``1,``1,System.Boolean})">
            <summary>
            Merges the specified merge object.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="instance">The instance.</param>
            <param name="mergeObject">The merge object.</param>
            <param name="determineOverride">The determine override.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.SafeTryGetValue``2(System.Collections.Generic.Dictionary{``0,``1},``0,``1@)">
            <summary>
            Safes the try get value.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="instance">The instance.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns><c>true</c> if succeed to get value, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.CollectionExtension.ToKeyValuePairString``2(System.Collections.Generic.Dictionary{``0,``1},System.Char,System.Boolean)">
            <summary>
            To the key value pair string.
            </summary>
            <typeparam name="TKey">The type of the t key.</typeparam>
            <typeparam name="TValue">The type of the t value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="separatorChar">The separator character.</param>
            <param name="encodeKeyValue">if set to <c>true</c> [encode key value].</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Beyova.ExceptionExtension">
            <summary>
            Class ExceptionExtension.
            </summary>
        </member>
        <member name="M:Beyova.ExceptionExtension.ToHttpOperationException(System.Net.WebException,System.Net.HttpWebRequest,System.Net.CookieCollection@,System.Net.WebHeaderCollection@)">
            <summary>
            To the HTTP operation exception.
            </summary>
            <param name="webException">The web exception.</param>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="cookies">The cookies.</param>
            <param name="headers">The headers.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.ConvertExceptionToBaseException(System.Exception,System.Object,System.String,System.String,System.Int32)">
            <summary>
            Converts the exception to base exception.
            </summary>
            <param name="exception">The exception.</param>
            <param name="data">The data.</param>
            <param name="memberName">Name of the member.</param>
            <param name="sourceFilePath">The source file path.</param>
            <param name="sourceLineNumber">The source line number.</param>
            <returns>BaseException.</returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.RootException(System.Exception)">
            <summary>
            Roots the exception.
            </summary>
            <param name="exception">The exception.</param>
            <returns>Exception.</returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.FormatToString(System.Exception)">
            <summary>
            Formats to string.
            </summary>
            <param name="exception">The exception.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.FormatToString(System.Text.StringBuilder,System.Exception,System.Int32)">
            <summary>
            Formats to string.
            </summary>
            <param name="stringBuilder">The string builder.</param>
            <param name="exception">The exception.</param>
            <param name="level">The level.</param>
        </member>
        <member name="M:Beyova.ExceptionExtension.AppendIndent(System.Text.StringBuilder,System.Int32)">
            <summary>
            Appends the indent.
            Returns  the same <see cref="T:System.Text.StringBuilder"/> instance to make sure it supports chain based actions.
            </summary>
            <param name="stringBuilder">The string builder.</param>
            <param name="level">The level.</param>
            <returns>System.Text.StringBuilder.</returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.GenerateDataString(System.Web.HttpContext)">
            <summary>
            Generates the data string.
            </summary>
            <param name="obj">The object.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.GenerateDataString(System.Net.HttpListenerContext)">
            <summary>
            Generates the data string.
            </summary>
            <param name="obj">The object.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.GenerateDataString(System.Object)">
            <summary>
            Generates the data string.
            </summary>
            <param name="obj">The obj.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.Handle(System.Exception,System.Object,Beyova.ExceptionSystem.FriendlyHint,System.String,System.String,System.Int32)">
            <summary>
            Handles the specified exception.
            </summary>
            <param name="exception">The exception.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
            <param name="operationName">Name of the operation.</param>
            <param name="sourceFilePath">The source file path.</param>
            <param name="sourceLineNumber">The source line number.</param>
            <returns>Beyova.ExceptionSystem.BaseException.</returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.Handle(System.Exception,Beyova.ExceptionSystem.ExceptionScene,System.Object,Beyova.ExceptionSystem.FriendlyHint)">
            <summary>
            Handles the exception.
            </summary>
            <param name="exception">The exception.</param>
            <param name="scene">The scene.</param>
            <param name="data">The data.</param>
            <param name="hint">The hint.</param>
            <returns>BaseServiceException.</returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.ToExceptionInfo(System.Exception,Beyova.ExceptionSystem.ExceptionInfo.ExceptionCriticality,System.String)">
            <summary>
            To the exception information.
            </summary>
            <param name="exception">The exception.</param>
            <param name="level">The level.</param>
            <param name="operatorIdentifier">The operator identifier.</param>
            <returns>ExceptionInfo.</returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.ToExceptionInfo(System.Exception,System.Nullable{System.Guid},Beyova.ExceptionSystem.ExceptionInfo.ExceptionCriticality)">
            <summary>
            To the exception information.
            </summary>
            <param name="exception">The exception.</param>
            <param name="key">The key.</param>
            <param name="level">The level.</param>
            <returns>ExceptionInfo.</returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.ToSimpleExceptionInfo(Beyova.ExceptionSystem.BaseException)">
            <summary>
            To the simple exception information.
            </summary>
            <param name="exception">The exception.</param>
            <returns>Beyova.ExceptionSystem.ExceptionInfo.</returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.ToException(Beyova.ExceptionSystem.ExceptionInfo)">
            <summary>
            To the exception.
            </summary>
            <param name="exceptionInfo">The exception information.</param>
            <returns>System.Exception.</returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.ConvertTo(Beyova.ExceptionSystem.SqlStoredProcedureException)">
            <summary>
            Converts to.
            </summary>
            <param name="sqlException">The SQL exception.</param>
            <returns>Beyova.ExceptionSystem.BaseException.</returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.ToExceptionScene(System.Web.HttpRequest,System.String)">
            <summary>
            To the exception scene.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="controllerOrServiceName">Name of the controller or service.</param>
            <returns>Beyova.ExceptionSystem.ExceptionScene.</returns>
        </member>
        <member name="M:Beyova.ExceptionExtension.ToExceptionScene(System.Web.HttpRequestBase,System.String)">
            <summary>
            To the exception scene.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="controllerOrServiceName">Name of the controller or service.</param>
            <returns>Beyova.ExceptionSystem.ExceptionScene.</returns>
        </member>
        <member name="T:Beyova.JsonExtension">
            <summary>
            Class JsonExtension.
            </summary>
        </member>
        <member name="F:Beyova.JsonExtension.IsoDateTimeConverter">
            <summary>
            The iso date time converter
            </summary>
        </member>
        <member name="F:Beyova.JsonExtension.SafeJsonSerializationSettings">
            <summary>
            The safe json serialization settings
            </summary>
        </member>
        <member name="M:Beyova.JsonExtension.ToJson(System.Object,System.Boolean,Newtonsoft.Json.JsonConverter[])">
            <summary>
            To the json.
            If <c>converters</c> is not specified, isoDateTimeConverter (DateTimeFormat = "yyyy-MM-ddTHH:mm:ss.fffZ" and DateTimeStyles = DateTimeStyles.AdjustToUniversal) would be used by default.
            </summary>
            <param name="anyObject">Any object.</param>
            <param name="indentedFormat">The indented format.</param>
            <param name="converters">The converters.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.JsonExtension.ToJson(System.Object)">
            <summary>
            To the json.
            </summary>
            <param name="anyObject">Any object.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.JsonExtension.SafeToObject``1(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Safes to object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json">The json.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.JsonExtension.TryConvertJsonToObject``1(System.String,System.Exception@)">
            <summary>
            Tries the convert json to object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="jsonString">The json string.</param>
            <param name="exception">The exception.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.JsonExtension.TryConvertJsonToObject(System.String,System.Exception@)">
            <summary>
            Tries the convert json to object.
            </summary>
            <param name="jsonString">The json string.</param>
            <param name="exception">The exception.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.JsonExtension.TryConvertJsonToObject``1(System.String)">
            <summary>
            Tries the convert json to object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="jsonString">The json string.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.JsonExtension.TryConvertJsonToObject(System.String)">
            <summary>
            Tries the convert json to object.
            </summary>
            <param name="jsonString">The json string.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.JsonExtension.GetJTokenByXPath(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            Gets the JSON object by specific x-path.
            </summary>
            <param name="jObject">The JSON object in <see cref="T:Newtonsoft.Json.Linq.JObject" /> type.</param>
            <param name="xPath">The x-path.</param>
            <returns>
            The matched <see cref="T:Newtonsoft.Json.Linq.JToken" /> instance. If not found, return null.
            </returns>
            <example>
            Samples below show you how to <c>XPath</c> method and the expected result.
              <code>
            string json = @"{Property1: {Array:['item1','item2','item3'],Count:3}, Property2: 'hello'}".Replace('\'', '"');
            var obj = JToken.Parse(json);   //Parse JSON object from string.
            obj = obj.XPath("Property1/Array"); //obj = {Array:['item1','item2','item3']}
            var result = obj.XPath("/Property1/Count"); // obj = {Count:3}
            var result2 = obj.XPath("/Property1/Array[2]"); //obj = "item3"
              </code>
            Note that, if the xPath starts "/", it means to be from the root node, otherwise, from current node.
              </example>
        </member>
        <member name="M:Beyova.JsonExtension.XPath(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Gets the JSON object by specific x-path.
            </summary>
            <param name="jObject">The JSON object in <see cref="T:Newtonsoft.Json.Linq.JObject" /> type.</param>
            <param name="xPath">The x-path.</param>
            <returns>
            The matched <see cref="T:Newtonsoft.Json.Linq.JToken" /> instance. If not found, return null.
            </returns>
            <example>
            Samples below show you how to <c>XPath</c> method and the expected result.
              <code>
            string json = @"{Property1: {Array:['item1','item2','item3'],Count:3}, Property2: 'hello'}".Replace('\'', '"');
            var obj = JToken.Parse(json);   //Parse JSON object from string.
            obj = obj.XPath("Property1/Array"); //obj = {Array:['item1','item2','item3']}
            var result = obj.XPath("/Property1/Count"); // obj = {Count:3}
            var result2 = obj.XPath("/Property1/Array[2]"); //obj = "item3"
              </code>
            Note that, if the xPath starts "/", it means to be from the root node, otherwise, from current node.
              </example>
        </member>
        <member name="M:Beyova.JsonExtension.XPath(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            Gets the JSON object by specific x-path.
            </summary>
            <param name="jObject">The JSON object in <see cref="T:Newtonsoft.Json.Linq.JToken" /> type.</param>
            <param name="xPath">The x-path.</param>
            <returns>
            The matched <see cref="T:Newtonsoft.Json.Linq.JToken" /> instance. If not found, return null.
            </returns>
            <example>
            Samples below show you how to <c>XPath</c> method and the expected result.
              <code>
            string json = @"{Property1: {Array:['item1','item2','item3'],Count:3}, Property2: 'hello'}".Replace('\'', '"');
            var obj = JToken.Parse(json);   //Parse JSON object from string.
            obj = obj.XPath("Property1/Array"); //obj = {Array:['item1','item2','item3']}
            var result = obj.XPath("/Property1/Count"); // obj = {Count:3}
            var result2 = obj.XPath("/Property1/Array[2]"); //obj = "item3"
              </code>
            Note that, if the xPath starts "/", it means to be from the root node, otherwise, from current node.
              </example>
        </member>
        <member name="M:Beyova.JsonExtension.TryGetValue``1(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Tries to get value.
            If jObject is null, return default value of T.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="jObject">The j object.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.JsonExtension.TryDeserializeAsObject``1(System.String)">
            <summary>
            Tries to deserialize object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.JsonExtension.TryParseToJToken(System.String)">
            <summary>
            Tries the parse to JTOKEN.
            </summary>
            <param name="jsonString">The json string.</param>
            <returns>JToken.</returns>
        </member>
        <member name="M:Beyova.JsonExtension.ParseToJToken(System.String)">
            <summary>
            Parses to j token.
            </summary>
            <param name="jsonString">The json string.</param>
            <returns>JToken.</returns>
        </member>
        <member name="M:Beyova.JsonExtension.ParseToJObject(System.String)">
            <summary>
            Parses to j object.
            </summary>
            <param name="jsonString">The json string.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.JsonExtension.ObjectToJToken(System.Object)">
            <summary>
            Objects to json token.
            </summary>
            <param name="obj">The object.</param>
            <returns>
            JToken.
            </returns>
        </member>
        <member name="M:Beyova.JsonExtension.ObjectToJObject(System.Object)">
            <summary>
            Objects to json object.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.JsonExtension.GetProperty(Newtonsoft.Json.Linq.JObject,System.String,System.Boolean)">
            <summary>
            Finds the object.
            </summary>
            <param name="jObject">The j object.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns>JToken.</returns>
        </member>
        <member name="M:Beyova.JsonExtension.SafeGetValue``1(Newtonsoft.Json.Linq.JObject,System.String,System.Boolean,``0)">
            <summary>
            Safes the get value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="jObject">The j object.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <param name="defaultValue">The default value.</param>
            <returns>T.</returns>
        </member>
        <member name="T:Beyova.SerializationExtension">
            <summary>
            Extension class for mail.
            </summary>
        </member>
        <member name="F:Beyova.SerializationExtension.formatter">
            <summary>
            The formatter
            </summary>
        </member>
        <member name="M:Beyova.SerializationExtension.SerializeToStream(System.Object)">
            <summary>
            Serializes to stream.
            </summary>
            <param name="objectToSerialize">The object to serialize.</param>
            <returns>MemoryStream.</returns>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">SerializeToStream</exception>
        </member>
        <member name="M:Beyova.SerializationExtension.SerializeToByteArray(System.Object)">
            <summary>
            Serializes to byte array.
            </summary>
            <param name="objectToSerialize">The object to serialize.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.SerializationExtension.SerializeToBase64String(System.Object)">
            <summary>
            Serializes to base64 string.
            </summary>
            <param name="objectToSerialize">The object to serialize.</param>
            <returns>System.String.</returns>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">SerializeToBase64String</exception>
        </member>
        <member name="M:Beyova.SerializationExtension.SerializeToXml``1(``0,System.Text.Encoding,System.Boolean,System.Boolean)">
            <summary>
            Serializes to XML.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objectToSerialize">The object to serialize.</param>
            <param name="encoding">The encoding.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> [omit XML declaration].</param>
            <param name="indentedXml">if set to <c>true</c> [indented XML].</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.SerializationExtension.DeserializeToObject(System.IO.MemoryStream,System.Boolean)">
            <summary>
            Deserializes to object.
            </summary>
            <param name="stream">The stream.</param>
            <param name="closeStream">if set to <c>true</c> [close stream].</param>
            <returns>System.Object.</returns>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">DeserializeToObject</exception>
        </member>
        <member name="M:Beyova.SerializationExtension.DeserializeFromBase64StringToObject(System.String)">
            <summary>
            Deserializes from base64 string to object.
            </summary>
            <param name="base64String">The base64 string.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.SerializationExtension.DeserializeToObject(System.Byte[])">
            <summary>
            Deserializes to object.
            </summary>
            <param name="byteArray">The byte array.</param>
            <returns>System.Object.</returns>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">DeserializeToObject</exception>
        </member>
        <member name="M:Beyova.SerializationExtension.DeserializeToObject``1(System.IO.MemoryStream)">
            <summary>
            Deserializes to object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="stream">The stream.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.SerializationExtension.DeserializeToObject``1(System.Byte[])">
            <summary>
            Deserializes to object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bytes">The bytes.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.SerializationExtension.DeserializeToObject``1(System.String)">
            <summary>
            Deserailizes to object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="base64String">The base64 string.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.SerializationExtension.DeserializeXmlToObject``1(System.String,System.Text.Encoding)">
            <summary>
            Deserializes to object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xml">The XML.</param>
            <param name="encoding">The encoding.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.SerializationExtension.DeserializeXmlToObject``1(System.Xml.Linq.XElement,System.Text.Encoding)">
            <summary>
            Deserializes to object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xml">The XML.</param>
            <param name="encoding">The encoding.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.SerializationExtension.PureXmlToObject``1(System.Xml.Linq.XElement)">
            <summary>
            Converts from pure XML to object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xmlObject">The XML object.</param>
            <returns>T.</returns>
        </member>
        <member name="T:Beyova.SerializableDictionary`2">
            <summary>
            Class for Serializable Dictionary, which is inherited from <see cref="T:System.Collections.Generic.Dictionary`2"/>.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:Beyova.SerializableDictionary`2.xml_Root">
            <summary>
            The XML_ root
            </summary>
        </member>
        <member name="M:Beyova.SerializableDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SerializableDictionary`2"/> class.
            </summary>
        </member>
        <member name="M:Beyova.SerializableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SerializableDictionary`2"/> class.
            </summary>
            <param name="dictionary">The dictionary.</param>
        </member>
        <member name="M:Beyova.SerializableDictionary`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SerializableDictionary`2"/> class.
            </summary>
            <param name="capacity">The initial number of elements that the <see cref="T:System.Collections.Generic.Dictionary`2" /> can contain.</param>
        </member>
        <member name="M:Beyova.SerializableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SerializableDictionary`2"/> class.
            </summary>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:Beyova.SerializableDictionary`2.GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> to the class.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.
            </returns>
        </member>
        <member name="M:Beyova.SerializableDictionary`2.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="xmlReader">The XML reader.</param>
        </member>
        <member name="M:Beyova.SerializableDictionary`2.FillByXml(System.String)">
            <summary>
            Fills the by XML.
            </summary>
            <param name="xmlString">The XML string.</param>
        </member>
        <member name="M:Beyova.SerializableDictionary`2.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="xmlWriter">The XML writer.</param>
        </member>
        <member name="M:Beyova.SerializableDictionary`2.ToXmlString">
            <summary>
            Serializes to string.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.SerializableDictionary`2.ToXml">
            <summary>
            To the XML.
            </summary>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.SerializableDictionary`2.FillByXml(System.Xml.Linq.XElement)">
            <summary>
            Fills the by XML.
            </summary>
            <param name="xml">The XML.</param>
        </member>
        <member name="T:Beyova.WinFormUIExtension">
            <summary>
            Win form UI extensions.
            </summary>
        </member>
        <member name="M:Beyova.WinFormUIExtension.BindTreeNodeCheckboxEvent(System.Windows.Forms.TreeView)">
            <summary>
            Binds the tree node checkbox event.
            </summary>
            <param name="treeViewInstance">The tree view instance.</param>
        </member>
        <member name="M:Beyova.WinFormUIExtension.TreeNodeAfterCheck(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Handles the AfterCheck event of the tree view controls.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.TreeViewEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Beyova.WinFormUIExtension.CheckAllSubItems(System.Windows.Forms.TreeNode,System.Boolean)">
            <summary>
            Checks all sub items.
            </summary>
            <param name="node">The node.</param>
            <param name="isChecked">if set to <c>true</c> [is checked].</param>
        </member>
        <member name="M:Beyova.WinFormUIExtension.CheckAllParentItems(System.Windows.Forms.TreeNode,System.Boolean)">
            <summary>
            Checks all parent items.
            </summary>
            <param name="node">The node.</param>
            <param name="isChecked">if set to <c>true</c> [is checked].</param>
        </member>
        <member name="M:Beyova.WinFormUIExtension.IsAllSubItemsChecked(System.Windows.Forms.TreeNode)">
            <summary>
            Determines whether [is all sub items checked] [the specified node].
            </summary>
            <param name="node">The node.</param>
            <returns>
              <c>true</c> if [is all sub items checked] [the specified node]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Beyova.StringRegexExtension">
            <summary>
            Extension class for string format validation.
            </summary>
        </member>
        <member name="F:Beyova.StringRegexExtension.startSymbol">
            <summary>
            The start symbol
            </summary>
        </member>
        <member name="F:Beyova.StringRegexExtension.endSymbol">
            <summary>
            The end symbol
            </summary>
        </member>
        <member name="M:Beyova.StringRegexExtension.AsQuotedString(System.String)">
            <summary>
            Ases the quoted string.
            </summary>
            <param name="anyString">Any string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.StartWithRegularExpressionString(System.String,System.String,System.Boolean)">
            <summary>
            Starts the with regular expression string.
            </summary>
            <param name="text">The text.</param>
            <param name="regularExpressionString">The regular expression string.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns><c>true</c> if given text starts with specific regular expression string, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.EndWithRegularExpressionString(System.String,System.String,System.Boolean)">
            <summary>
            Ends the with regular expression string.
            </summary>
            <param name="text">The text.</param>
            <param name="regularExpressionString">The regular expression string.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns><c>true</c> if given text ends with specific regular expression string, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.SplitWithRegularExpressionString(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Splits the with regular expression string.
            </summary>
            <param name="text">The text.</param>
            <param name="regularExpressionString">The regular expression string.</param>
            <param name="includeCapture">if set to <c>true</c> [include capture].</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns>System.String[].</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.ToRegularExpression(System.Char)">
            <summary>
            To the regular expression.
            </summary>
            <param name="anyChar">Any character.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.ToRegularExpression(System.String)">
            <summary>
            To the regular expression.
            </summary>
            <param name="anyString">Any string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="F:Beyova.StringRegexExtension.cellPhoneRegex">
            <summary>
            The cell phone regex
            </summary>
        </member>
        <member name="F:Beyova.StringRegexExtension.emailRegex">
            <summary>
            The email regex
            </summary>
        </member>
        <member name="F:Beyova.StringRegexExtension.macAddressRegex">
            <summary>
            The mac address regex
            </summary>
        </member>
        <member name="M:Beyova.StringRegexExtension.InternalTrim(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Internals the trim.
            </summary>
            <param name="source">The source.</param>
            <param name="factor">The factor.</param>
            <param name="trimStart">if set to <c>true</c> [trim start].</param>
            <param name="trimEnd">if set to <c>true</c> [trim end].</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.TrimEnd(System.String,System.String,System.Boolean)">
            <summary>
            Trims the end.
            </summary>
            <param name="anyString">Any string.</param>
            <param name="factor">The factor.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.TrimStart(System.String,System.String,System.Boolean)">
            <summary>
            Trims the start.
            </summary>
            <param name="anyString">Any string.</param>
            <param name="factor">The factor.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.Trim(System.String,System.String,System.Boolean)">
            <summary>
            Trims the specified any string.
            </summary>
            <param name="anyString">Any string.</param>
            <param name="factor">The factor.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.AsSecureString(System.String)">
            <summary>
            As secure string.
            </summary>
            <param name="anyString">Any string.</param>
            <returns>SecureString.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.EnsureStartWith(System.String,System.String)">
            <summary>
            Ensures the start with.
            </summary>
            <param name="anyString">Any string.</param>
            <param name="factor">The factor.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.EnsureEndWith(System.String,System.String)">
            <summary>
            Ensures the end with.
            </summary>
            <param name="anyString">Any string.</param>
            <param name="factor">The factor.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.ContainsAnyOf(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Determines whether [contains any of] [the specified items].
            </summary>
            <param name="sourceString">The source string.</param>
            <param name="items">The items.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns>
              <c>true</c> if [contains any of] [the specified items]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.Like(System.String,System.String,System.Boolean)">
            <summary>
            Likes the specified term.
            </summary>
            <param name="sourceString">The source string.</param>
            <param name="term">The term.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.SplitByUpperCases(System.String,System.String)">
            <summary>
            Splits the by upper cases.
            </summary>
            <param name="anyString">Any string.</param>
            <param name="seperator">The seperator.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.ToHexString(System.Nullable{System.Guid})">
            <summary>
            To the hexadecimal string.
            </summary>
            <param name="anyGuid">Any unique identifier.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.ToHexString(System.Guid)">
            <summary>
            To the hexadecimal string.
            </summary>
            <param name="anyGuid">Any unique identifier.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.IsNumeric(System.String,System.Decimal)">
            <summary>
            Determines whether the specified string obj is number.
            </summary>
            <param name="stringObj">The string obj.</param>
            <param name="min">The min.</param>
            <returns><c>true</c> if the specified string obj is number; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.IsEmailAddress(System.String)">
            <summary>
            Determines whether [is email address] [the specified string object].
            </summary>
            <param name="stringObject">The string object.</param>
            <returns><c>true</c> if [is email address] [the specified string object]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.IsCellphone(System.String)">
            <summary>
            Determines whether [is cellphone] [the specified string object].
            </summary>
            <param name="stringObject">The string object.</param>
            <returns><c>true</c> if [is cell phone] [the specified string object]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.IndexOfChineseCharset(System.String)">
            <summary>
            Indexes the of chinese charset.
            </summary>
            <param name="stringToCheck">The string to check.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.ContainsChineseCharset(System.String)">
            <summary>
            Determines whether [contains chinese charset] [the specified string to check].
            </summary>
            <param name="stringToCheck">The string to check.</param>
            <returns><c>true</c> if [contains chinese charset] [the specified string to check]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.IsIpV4Address(System.String)">
            <summary>
            Determines whether [is ip v4 address] [the specified ip string].
            </summary>
            <param name="ipString">The ip string.</param>
            <returns><c>true</c> if [is ip v4 address] [the specified ip string]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.IsMacAddress(System.String)">
            <summary>
            Determines whether [is mac address] [the specified mac address].
            </summary>
            <param name="macAddress">The mac address.</param>
            <returns><c>true</c> if [is mac address] [the specified mac address]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.Replace(System.String,System.Char[],System.Char)">
            <summary>
            Replaces the specified old values.
            </summary>
            <param name="anyString">Any string.</param>
            <param name="oldValues">The old values.</param>
            <param name="newValue">The new value.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.Replace(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Replaces the specified replacements.
            </summary>
            <param name="anyString">Any string.</param>
            <param name="replacements">The replacements.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.Replace(System.String,System.String[],System.String)">
            <summary>
            Replaces the specified old values.
            </summary>
            <param name="anyString">Any string.</param>
            <param name="oldValues">The old values.</param>
            <param name="newValue">The new value.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.SafeToUpper(System.String)">
            <summary>
            Safes to upper.
            </summary>
            <param name="anyString">Any string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.SafeToLower(System.String)">
            <summary>
            Safes to lower.
            </summary>
            <param name="anyString">Any string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.ToFirstUpper(System.String)">
            <summary>
            To the first upper.
            </summary>
            <param name="anyString">Any string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.GetTopNCharacter(System.String,System.Int32,System.String)">
            <summary>
            Gets the top n character.
            </summary>
            <param name="anyString">Any string.</param>
            <param name="maxLength">The maximum length. The length does not contain suffix.</param>
            <param name="suffix">The suffix.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.ToRegularCaseIgnoringExpression(System.String)">
            <summary>
            To the regular case ignoring expression.
            </summary>
            <param name="anyString">Any string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.ToCultureInfo(System.String,System.Boolean)">
            <summary>
            To the culture information.
            </summary>
            <param name="cultureCode">The culture code.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns>CultureInfo.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.Capitalize(System.String)">
            <summary>
            Capitalizes the specified any string.
            </summary>
            <param name="anyString">Any string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.Proper(System.String)">
            <summary>
            Propers the specified any string. Capitalizes the first letter in a text string and any other letters in text that follow any character other than a letter. Converts all other letters to lowercase letters.
            </summary>
            <param name="anyString">Any string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.SubStringBeforeFirstMatch(System.String,System.String,System.StringComparison)">
            <summary>
            Subs the string before first match.
            </summary>
            <param name="original">The original.</param>
            <param name="firstMatch">The first match.</param>
            <param name="comparison">The comparison.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.SubStringBeforeLastMatch(System.String,System.String,System.StringComparison)">
            <summary>
            Subs the string before first match.
            </summary>
            <param name="original">The original.</param>
            <param name="lastMatch">The last match.</param>
            <param name="comparison">The comparison.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.SubStringAfterFirstMatch(System.String,System.String,System.StringComparison)">
            <summary>
            Subs the string after first match.
            </summary>
            <param name="original">The original.</param>
            <param name="firstMatch">The first match.</param>
            <param name="comparison">The comparison.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.SubStringAfterLastMatch(System.String,System.String,System.StringComparison)">
            <summary>
            Subs the string after last match.
            </summary>
            <param name="original">The original.</param>
            <param name="lastMatch">The last match.</param>
            <param name="comparison">The comparison.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.SubStringBeforeFirstMatch(System.String,System.Char)">
            <summary>
            Subs the string before first match.
            </summary>
            <param name="original">The original.</param>
            <param name="firstMatch">The first match.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.SubStringAfterFirstMatch(System.String,System.Char)">
            <summary>
            Subs the string after first match.
            </summary>
            <param name="original">The original.</param>
            <param name="afterMatch">The after match.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.FindCommonStartSubString(System.String,System.String,System.Boolean)">
            <summary>
            Finds the common start string.
            </summary>
            <param name="string1">The string1.</param>
            <param name="string2">The string2.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.AppendLine(System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            Appends the line.
            </summary>
            <param name="builder">The builder.</param>
            <param name="indent">The indent.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Beyova.StringRegexExtension.AppendIndent(System.Text.StringBuilder,System.Int32)">
            <summary>
            Appends the indent.
            </summary>
            <param name="builder">The builder.</param>
            <param name="indent">The indent.</param>
        </member>
        <member name="M:Beyova.StringRegexExtension.AppendIndent(System.Text.StringBuilder,System.Char,System.Int32)">
            <summary>
            Appends the indent.
            </summary>
            <param name="builder">The builder.</param>
            <param name="indentChar">The indent character.</param>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:Beyova.StringRegexExtension.AppendIndent(System.Text.StringBuilder,System.String,System.Int32)">
            <summary>
            Appends the indent.
            </summary>
            <param name="builder">The builder.</param>
            <param name="indentString">The indent string.</param>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:Beyova.StringRegexExtension.AppendLineWithFormat(System.Text.StringBuilder,System.String,System.Object[])">
            <summary>
            Appends the line with format.
            </summary>
            <param name="builder">The builder.</param>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Beyova.StringRegexExtension.AppendLineWithFormat(System.Text.StringBuilder,System.Int32,System.String,System.Object[])">
            <summary>
            Appends the line with format.
            </summary>
            <param name="builder">The builder.</param>
            <param name="indentAmount">The indent amount.</param>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Beyova.StringRegexExtension.AppendWithFormat(System.Text.StringBuilder,System.Int32,System.String,System.Object[])">
            <summary>
            Appends the with format.
            </summary>
            <param name="builder">The builder.</param>
            <param name="indentAmount">The indent amount.</param>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Beyova.StringRegexExtension.AppendWithFormat(System.Text.StringBuilder,System.String,System.Object[])">
            <summary>
            Appends the with format.
            </summary>
            <param name="builder">The builder.</param>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Beyova.StringRegexExtension.Last(System.Text.StringBuilder,System.Int32)">
            <summary>
            Get last N char. If given count is larger than builder count, return string.Empty.
            </summary>
            <param name="builder">The builder.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.RemoveLast(System.Text.StringBuilder,System.Int32)">
            <summary>
            Removes the last.
            </summary>
            <param name="builder">The builder.</param>
            <param name="count">The count.</param>
        </member>
        <member name="F:Beyova.StringRegexExtension.spaceLines">
            <summary>
            The space lines
            </summary>
        </member>
        <member name="M:Beyova.StringRegexExtension.RemoveLastIfMatch(System.Text.StringBuilder,System.Char,System.Boolean)">
            <summary>
            Removes the last char if it equals to specific char from parameter.
            </summary>
            <param name="builder">The builder.</param>
            <param name="charToMatch">The character to match.</param>
            <param name="trimEndSpacesOrLines">if set to <c>true</c> [trim end spaces].</param>
            <returns>StringBuilder.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.RemoveLastIfMatch(System.Text.StringBuilder,System.String,System.StringComparison,System.Boolean)">
            <summary>
            Removes the last if match.
            </summary>
            <param name="builder">The builder.</param>
            <param name="stringToMatch">The string to match.</param>
            <param name="stringComparison">The string comparison.</param>
            <param name="trimEndSpacesOrLines">if set to <c>true</c> [trim end spaces or lines].</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.TrimEnd(System.Text.StringBuilder,System.Char[])">
            <summary>
            Trims the end.
            </summary>
            <param name="builder">The builder.</param>
            <param name="charToTrim">The character to trim.</param>
            <returns>StringBuilder.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.InnerString(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            Inners the string.
            </summary>
            <param name="anyString">Any string.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="comparison">The comparison.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.StaticStringToRegexPattern(System.String)">
            <summary>
            Converts static string to regex pattern.
            </summary>
            <param name="staticString">The static string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.WildCardToRegex(System.String)">
            <summary>
            Converts wild card string to regex.
            </summary>
            <param name="wildCard">The wild card.</param>
            <returns>Regex.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.SafeMatch(System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Safes the match.
            </summary>
            <param name="regex">The regex.</param>
            <param name="input">The input.</param>
            <returns>Match.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.SafeMatches(System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Safes the matches.
            </summary>
            <param name="regex">The regex.</param>
            <param name="input">The input.</param>
            <returns>MatchCollection.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.SafeFormat(System.String,System.Object[])">
            <summary>
            Safes the format.
            </summary>
            <param name="formatString">The format string.</param>
            <param name="args">The arguments.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringRegexExtension.ToRegexShad(System.String)">
            <summary>
            To the regex shad.
            </summary>
            <param name="anyString">Any string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Beyova.HttpExtension">
            <summary>
            Extension class for http operations.
            </summary>
        </member>
        <member name="M:Beyova.HttpExtension.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Beyova.HttpExtension"/> class.
            </summary>
        </member>
        <member name="F:Beyova.HttpExtension.domainCredentialRegex">
            <summary>
            The domain credential regex
            </summary>
        </member>
        <member name="F:Beyova.HttpExtension.uriCredentialRegex">
            <summary>
            The URI credential regex
            </summary>
        </member>
        <member name="M:Beyova.HttpExtension.GetPrimaryUri(System.Uri)">
            <summary>
            Gets the primary URI. Get primary part like: http://google.com/, ignore the rest.
            </summary>
            <param name="uri">The URI.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.ToFullRawUrl(System.Web.HttpRequest)">
            <summary>
            To the full raw URL.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.ToFullRawUrl(Beyova.RestApi.RuntimeContext)">
            <summary>
            To the full raw URL.
            </summary>
            <param name="runtimeContext">The runtime context.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.ParseToAccessCredential(System.String)">
            <summary>
            Parses to access credential. Acceptable string samples: cnsh\rynn.wang:12345, cnsh\rynn.wang, rynn.wang:12345, rynn.wang, rynn.wang@cnsh, rynn.wang:12345@cnsh
            </summary>
            <param name="accountString">The account string.</param>
            <returns>AccessCredential.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.ReadResponseAsT``1(System.Net.HttpWebRequest,System.Func{System.Net.WebResponse,``0},System.Net.HttpStatusCode@,System.Net.WebHeaderCollection@,System.Net.CookieCollection@)">
            <summary>
            Reads the response as t.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="responseDelegate">The response delegate.</param>
            <param name="statusCode">The status code.</param>
            <param name="headers">The headers.</param>
            <param name="cookieCollection">The cookie collection.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.ReadResponseAsRedirection(System.Net.HttpWebRequest,System.Net.HttpStatusCode@)">
            <summary>
            Reads the response as redirection.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="statusCode">The status code.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.HttpExtension.ReadResponseAsText(System.Net.HttpWebRequest,System.Text.Encoding,System.Net.HttpStatusCode@,System.Net.WebHeaderCollection@,System.Net.CookieCollection@)">
            <summary>
            Reads the response as text.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="encoding">The encoding.</param>
            <param name="statusCode">The status code.</param>
            <param name="headers">The headers.</param>
            <param name="cookieCollection">The cookie collection.</param>
            <returns>System.String.</returns>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">ReadResponseAsText</exception>
        </member>
        <member name="M:Beyova.HttpExtension.ReadResponseAsText(System.Net.HttpWebRequest,System.Text.Encoding,System.Net.HttpStatusCode@)">
            <summary>
            Reads the response as text.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="encoding">The encoding.</param>
            <param name="statusCode">The status code.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.HttpExtension.ReadResponseAsBytes(System.Net.HttpWebRequest,System.Net.HttpStatusCode@,System.Net.WebHeaderCollection@,System.Net.CookieCollection@)">
            <summary>
            Reads the response as bytes.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="statusCode">The status code.</param>
            <param name="headers">The headers.</param>
            <param name="cookieCollection">The cookie collection.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.HttpExtension.ReadResponseAsText(System.Net.HttpWebRequest,System.Text.Encoding)">
            <summary>
            Reads the response as text.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.ReadResponseAsBytes(System.Net.HttpWebRequest)">
            <summary>
            Reads the response as bytes.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.HttpExtension.ReadResponseAsTextAsync(System.Net.HttpWebRequest,System.Text.Encoding,System.Nullable{System.Int32})">
            <summary>
            Reads the response as text asynchronous.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="encoding">The encoding.</param>
            <param name="timeout">The timeout.</param>
            <returns>Task&lt;System.String&gt;.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.ReadResponseAsTextUsingTraditionalAsync(System.Net.HttpWebRequest,System.Action{System.String},System.Text.Encoding,System.Nullable{System.Int32})">
            <summary>
            Reads the asynchronous response as text.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="callback">The callback.</param>
            <param name="encoding">The encoding.</param>
            <param name="timeout">The timeout.</param>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">ReadResponseAsTextAsTraditionalAsync</exception>
        </member>
        <member name="M:Beyova.HttpExtension.ReadAsText(System.Net.WebResponse,System.Text.Encoding,System.Boolean)">
            <summary>
            Reads as text. This method would try to detect GZip and decode it correctly.
            </summary>
            <param name="webResponse">The web response.</param>
            <param name="encoding">The encoding.</param>
            <param name="closeResponse">The close response.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.InternalReadAsText(System.Net.WebResponse,System.Text.Encoding,System.Boolean)">
            <summary>
            Reads as text.
            </summary>
            <param name="webResponse">The web response.</param>
            <param name="encoding">The encoding.</param>
            <param name="closeResponse">if set to <c>true</c> [close response].</param>
            <returns>System.String.</returns>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">ReadAsText</exception>
        </member>
        <member name="M:Beyova.HttpExtension.InternalReadAsGZipText(System.Net.WebResponse,System.Text.Encoding,System.Boolean)">
            <summary>
            Reads as GZip text.
            </summary>
            <param name="webResponse">The web response.</param>
            <param name="encoding">The encoding.</param>
            <param name="closeResponse">if set to <c>true</c> [close response].</param>
            <returns>System.String.</returns>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">ReadAsGZipText</exception>
        </member>
        <member name="M:Beyova.HttpExtension.InternalReadAsBytes(System.Net.WebResponse,System.Boolean)">
            <summary>
            Reads as bytes.
            </summary>
            <param name="webResponse">The web response.</param>
            <param name="closeResponse">if set to <c>true</c> [close response].</param>
            <returns>System.Byte[].</returns>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">ReadAsBytes</exception>
        </member>
        <member name="M:Beyova.HttpExtension.FillFileData(System.Net.HttpWebRequest,System.Collections.Specialized.NameValueCollection,System.Collections.Generic.Dictionary{System.String,System.Byte[]},System.String)">
            <summary>
            Fills the file data.
            <remarks>
            Reference: http://stackoverflow.com/questions/566462/upload-files-with-httpwebrequest-multipart-form-data
            </remarks>
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="postData">The post data.</param>
            <param name="fileCollection">The file collection.
            Key: file name. e.g.: sample.txt
            Value: file data in byte array.</param>
            <param name="paramName">Name of the parameter.</param>
        </member>
        <member name="M:Beyova.HttpExtension.FillFileData(System.Net.HttpWebRequest,System.Collections.Specialized.NameValueCollection,System.String,System.String)">
            <summary>
            Fills the file data on HTTP web request.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="postData">The post data.</param>
            <param name="fileFullName">Full name of the file.</param>
            <param name="paramName">Name of the param.</param>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">FillFileData</exception>
        </member>
        <member name="M:Beyova.HttpExtension.FillData(System.Net.HttpWebRequest,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding)">
            <summary>
            Fills post data on HttpWebRequest.
            </summary>
            <param name="httpWebRequest">The HttpWebRequest instance.</param>
            <param name="method">The method.</param>
            <param name="dataMappings">The data mappings.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:Beyova.HttpExtension.FillData(System.Net.HttpWebRequest,System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding)">
            <summary>
            Fills the data.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="dataMappings">The data mappings.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:Beyova.HttpExtension.InternalFillData(System.Net.HttpWebRequest,System.String,System.Byte[],System.String)">
            <summary>
            Internals the fill data.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="method">The method.</param>
            <param name="data">The data.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.HttpExtension.InternalFillData(System.Net.HttpWebRequest,System.String,System.IO.Stream,System.String)">
            <summary>
            Internals the fill data.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="method">The method.</param>
            <param name="stream">The stream.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.HttpExtension.InternalFillData(System.Net.HttpWebRequest,System.String,System.String,System.Text.Encoding,System.String)">
            <summary>
            Internals the fill data.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="method">The method.</param>
            <param name="data">The data.</param>
            <param name="encodingToByte">The encoding to byte.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.HttpExtension.FillData(System.Net.HttpWebRequest,System.String,System.Byte[],System.String)">
            <summary>
            Fills the data on HTTP web request.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="method">The method.</param>
            <param name="data">The data.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.HttpExtension.FillData(System.Net.HttpWebRequest,System.Byte[],System.String)">
            <summary>
            Fills the data.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="data">The data.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.HttpExtension.FillData(System.Net.HttpWebRequest,System.IO.Stream,System.String,System.String)">
            <summary>
            Fills the data.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="stream">The stream.</param>
            <param name="contentType">Type of the content.</param>
            <param name="method">The method.</param>
        </member>
        <member name="M:Beyova.HttpExtension.FillData(System.Net.HttpWebRequest,System.String,System.String,System.String)">
            <summary>
            Fills the data on HTTP web request.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="method">The method.</param>
            <param name="data">The data.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.HttpExtension.FillData(System.Net.HttpWebRequest,System.String,System.Text.Encoding,System.String)">
            <summary>
            Fills the data.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="data">The data.</param>
            <param name="encoding">The encoding.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.HttpExtension.FillData(System.Net.HttpWebRequest,System.String,System.String,System.Text.Encoding,System.String)">
            <summary>
            Fills the data on HTTP web request.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="method">The method.</param>
            <param name="data">The data.</param>
            <param name="encodingToByte">The encoding to byte.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.HttpExtension.FillFileDataAsync(System.Net.HttpWebRequest,System.Collections.Specialized.NameValueCollection,System.Collections.Generic.Dictionary{System.String,System.Byte[]},System.String)">
            <summary>
            Fills the file data.
            <remarks>
            Reference: http://stackoverflow.com/questions/566462/upload-files-with-httpwebrequest-multipart-form-data
            </remarks>
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="postData">The post data.</param>
            <param name="fileCollection">The file collection.
            Key: file name. e.g.: sample.txt
            Value: file data in byte array.</param>
            <param name="paramName">Name of the parameter.</param>
        </member>
        <member name="M:Beyova.HttpExtension.FillFileDataAsync(System.Net.HttpWebRequest,System.Collections.Specialized.NameValueCollection,System.String,System.String)">
            <summary>
            Fills the file data on HTTP web request.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="postData">The post data.</param>
            <param name="fileFullName">Full name of the file.</param>
            <param name="paramName">Name of the param.</param>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">FillFileData</exception>
        </member>
        <member name="M:Beyova.HttpExtension.FillDataAsync(System.Net.HttpWebRequest,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding)">
            <summary>
            Fills post data on HttpWebRequest.
            </summary>
            <param name="httpWebRequest">The HttpWebRequest instance.</param>
            <param name="method">The method.</param>
            <param name="dataMappings">The data mappings.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:Beyova.HttpExtension.InternalFillDataAsync(System.Net.HttpWebRequest,System.String,System.Byte[],System.String)">
            <summary>
            Internals the fill data.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="method">The method.</param>
            <param name="data">The data.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.HttpExtension.InternalFillDataAsync(System.Net.HttpWebRequest,System.String,System.String,System.Text.Encoding,System.String)">
            <summary>
            Internals the fill data.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="method">The method.</param>
            <param name="data">The data.</param>
            <param name="encodingToByte">The encoding to byte.</param>
            <param name="contentType">Type of the content.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.FillDataAsync(System.Net.HttpWebRequest,System.Byte[],System.String)">
            <summary>
            Fills the data.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="data">The data.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.HttpExtension.FillDataAsync(System.Net.HttpWebRequest,System.String,System.Text.Encoding,System.String)">
            <summary>
            Fills the data.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="data">The data.</param>
            <param name="encoding">The encoding.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.HttpExtension.FillDataAsync(System.Net.HttpWebRequest,System.String,System.String,System.Text.Encoding,System.String)">
            <summary>
            Fills the data on HTTP web request.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
            <param name="method">The method.</param>
            <param name="data">The data.</param>
            <param name="encodingToByte">The encoding to byte.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Beyova.HttpExtension.GetPostData(System.Web.HttpRequest)">
            <summary>
            Gets the post data from HTTP web request.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.HttpExtension.GetPostData(System.Web.HttpRequestBase)">
            <summary>
            Gets the post data.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.HttpExtension.GetPostData(System.Net.HttpListenerRequest)">
            <summary>
            Gets the post data.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.HttpExtension.GetPostJson(System.Web.HttpRequest,System.Text.Encoding)">
            <summary>
            Gets the post json.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">GetPostJson</exception>
        </member>
        <member name="M:Beyova.HttpExtension.GetPostJson(System.Web.HttpRequestBase,System.Text.Encoding)">
            <summary>
            Gets the post json.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.GetPostJson(System.Net.HttpListenerRequest,System.Text.Encoding)">
            <summary>
            Gets the post json.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.WriteAllContent(System.Net.HttpListenerResponse,System.String,System.Text.Encoding,System.String,System.Boolean)">
            <summary>
            Writes the content.
            </summary>
            <param name="httpResponse">The HTTP response.</param>
            <param name="content">The content.</param>
            <param name="encoding">The encoding.</param>
            <param name="contentType">Type of the content.</param>
            <param name="closeStream">if set to <c>true</c> [close stream].</param>
            <exception cref="T:Beyova.ExceptionSystem.InvalidObjectException">WriteContent</exception>
            <exception cref="T:Beyova.ExceptionSystem.InvalidObjectException">WriteContent</exception>
        </member>
        <member name="M:Beyova.HttpExtension.WriteContent(System.Web.HttpResponseBase,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Writes the content.
            </summary>
            <param name="httpResponse">The HTTP response.</param>
            <param name="content">The content.</param>
            <param name="encoding">The encoding.</param>
            <param name="closeStream">if set to <c>true</c> [close stream].</param>
            <exception cref="T:Beyova.ExceptionSystem.InvalidObjectException">WriteContent</exception>
        </member>
        <member name="M:Beyova.HttpExtension.WriteContent(System.Web.HttpResponse,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Writes the content.
            </summary>
            <param name="httpResponse">The HTTP response.</param>
            <param name="content">The content.</param>
            <param name="encoding">The encoding.</param>
            <param name="closeStream">if set to <c>true</c> [close stream].</param>
            <exception cref="T:Beyova.ExceptionSystem.InvalidObjectException">WriteContent</exception>
        </member>
        <member name="F:Beyova.HttpExtension.rawRequestSeparatorRegex">
            <summary>
            The raw request separator regex
            </summary>
        </member>
        <member name="F:Beyova.HttpExtension.headerRegex">
            <summary>
            The header regex
            </summary>
        </member>
        <member name="F:Beyova.HttpExtension.destinationUrlRegex">
            <summary>
            The destination URL regex
            </summary>
        </member>
        <member name="M:Beyova.HttpExtension.CreateHttpWebRequestByRaw(System.String,System.Text.Encoding)">
            <summary>
            Creates the HTTP web request by raw. <c>Raw</c> can be from Fiddler.
            </summary>
            <param name="raw">The raw.</param>
            <param name="encoding">The encoding.</param>
            <returns>HttpWebRequest.</returns>
            <exception cref="T:Beyova.ExceptionSystem.InvalidObjectException">
            raw
            or
            raw.destination
            </exception>
        </member>
        <member name="M:Beyova.HttpExtension.OmitRemoteCertificateValidationCallback(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Omits the remote certificate validation callback.
            </summary>
            <param name="sender">The sender.</param>
            <param name="certificate">The certificate.</param>
            <param name="chain">The chain.</param>
            <param name="sslPolicyErrors">The SSL policy errors.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.CreateHttpWebRequest(System.String,System.String,System.String,System.String,System.Net.CookieContainer,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates the HTTP web request.
            </summary>
            <param name="destinationUrl">The destination URL.</param>
            <param name="httpMethod">Type of the method.</param>
            <param name="referrer">The referrer.</param>
            <param name="userAgent">The user agent.</param>
            <param name="cookieContainer">The cookie container.</param>
            <param name="cookieString">The cookie string.</param>
            <param name="accept">The accept.</param>
            <param name="acceptGZip">The accept g zip.</param>
            <param name="omitServerCertificateValidation">The omit server certificate validation.</param>
            <returns>HttpWebRequest.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.CreateHttpWebRequest(System.Uri,System.String)">
            <summary>
            Creates the HTTP web request.
            </summary>
            <param name="uriObject">The URI object.</param>
            <param name="method">The method.</param>
            <returns>HttpWebRequest.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.FillHeaders(System.Text.StringBuilder,System.Net.WebHeaderCollection)">
            <summary>
            Fills the headers.
            </summary>
            <param name="builder">The builder.</param>
            <param name="headerCollection">The header collection.</param>
        </member>
        <member name="M:Beyova.HttpExtension.ToRaw(System.Net.HttpWebRequest)">
            <summary>
            To the raw.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.SetBasicAuthentication(System.Net.HttpWebRequest,System.String,System.String)">
            <summary>
            Sets the basic authentication.
            </summary>
            <param name="request">The request.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:Beyova.HttpExtension.SetCookieByString(System.Net.CookieCollection,System.String,System.String)">
            <summary>
            Sets the cookie by string.
            </summary>
            <param name="cookieCollection">The cookie collection.</param>
            <param name="cookieString">The cookie string.</param>
            <param name="hostDomain">The host domain.</param>
        </member>
        <member name="M:Beyova.HttpExtension.SetCookieByString(System.Net.CookieContainer,System.String,System.Uri)">
            <summary>
            Sets the cookie by string.
            </summary>
            <param name="cookieContainer">The cookie container.</param>
            <param name="cookieString">The cookie string.</param>
            <param name="hostDomain">The host domain.</param>
        </member>
        <member name="M:Beyova.HttpExtension.ExpireAll(System.Net.CookieCollection)">
            <summary>
            Expires all cookie.
            </summary>
            <param name="cookies">The cookies.</param>
        </member>
        <member name="M:Beyova.HttpExtension.ToCookieRawString(System.Net.CookieCollection)">
            <summary>
            Automatics the cookie raw string.
            </summary>
            <param name="cookieCollection">The cookie collection.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.ToKeyValueStringWithUrlEncode(System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>
            To the key value string.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="needUrlEncode">if set to <c>true</c> [need URL encode]. Using <c>HttpUtility.UrlEncode</c> inside for encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.SupplyBinaryDownload(System.Web.HttpResponse,System.String,System.String)">
            <summary>
            Supply binary download via HttpResponse
            </summary>
            <param name="response">The response.</param>
            <param name="physicalPath">The physical path.</param>
            <param name="originalFullFileName">Name of the original full file.</param>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">SupplyBinaryDownload</exception>
        </member>
        <member name="M:Beyova.HttpExtension.SupplyBinaryDownload(System.Web.HttpContext,System.String,System.String)">
            <summary>
            Supplies the binary download.
            </summary>
            <param name="context">The context.</param>
            <param name="physicalPath">The physical path.</param>
            <param name="originalFullFileName">Name of the original full file.</param>
        </member>
        <member name="M:Beyova.HttpExtension.ParseToNameValueCollection(System.String,System.Char)">
            <summary>
            Parses to key value pair collection.
            <remarks>
            Define separator = '&amp;',
            Parse string like a=1&amp;b=2&amp;c=3 into name value collection.
            Define separator = ';',
            Parse string like a=1;b=2;c=3 into name value collection.
            </remarks></summary>
            <param name="keyValuePairString">The key value pair string.</param>
            <param name="separator">The separator. Default is '&amp;'.</param>
            <returns>System.Collections.Specialized.NameValueCollection.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.ParseToKeyValuePairCollection(System.String,System.Char)">
            <summary>
            Parses to key value pair collection.
            </summary>
            <param name="keyValuePairString">The key value pair string.</param>
            <param name="separator">The separator.</param>
            <returns>System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;System.String, System.String&gt;&gt;.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.ParseToDictonary(System.String,System.Char,System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Parses to dictonary.
            </summary>
            <param name="keyValuePairString">The key value pair string.</param>
            <param name="separator">The separator.</param>
            <param name="keyEqualityComparer">The key equality comparer.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.HttpExtension.AsyncHttpState">
            <summary>
            Class AsyncHttpState.
            </summary>
        </member>
        <member name="F:Beyova.HttpExtension.AsyncHttpState.allDone">
            <summary>
            All done
            </summary>
        </member>
        <member name="F:Beyova.HttpExtension.AsyncHttpState.responseCallback">
            <summary>
            The response callback
            </summary>
        </member>
        <member name="P:Beyova.HttpExtension.AsyncHttpState.Timeout">
            <summary>
            Gets or sets the timeout.
            </summary>
            <value>The timeout.</value>
        </member>
        <member name="P:Beyova.HttpExtension.AsyncHttpState.RequestUri">
            <summary>
            Gets the request URI.
            </summary>
            <value>The request URI.</value>
        </member>
        <member name="P:Beyova.HttpExtension.AsyncHttpState.RequestUrl">
            <summary>
            Gets the request URL.
            </summary>
            <value>The request URL.</value>
        </member>
        <member name="P:Beyova.HttpExtension.AsyncHttpState.Request">
            <summary>
            Gets or sets the request.
            </summary>
            <value>The request.</value>
        </member>
        <member name="P:Beyova.HttpExtension.AsyncHttpState.Response">
            <summary>
            Gets or sets the response.
            </summary>
            <value>The response.</value>
        </member>
        <member name="M:Beyova.HttpExtension.AsyncHttpState.#ctor(System.Net.HttpWebRequest,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.HttpExtension.AsyncHttpState" /> class.
            </summary>
            <param name="request">The request.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Beyova.HttpExtension.AsyncHttpState.GetResponseAsync(System.Action{System.Net.WebResponse})">
            <summary>
            Gets the response asynchronous.
            </summary>
            <param name="callback">The callback.</param>
            <exception cref="T:Beyova.ExceptionSystem.DataConflictException">callback;AsyncHttpState;null</exception>
        </member>
        <member name="M:Beyova.HttpExtension.AsyncHttpState.TimeoutCallback(System.Object,System.Boolean)">
            <summary>
            Timeouts the callback.
            </summary>
            <param name="state">The state.</param>
            <param name="timedOut">if set to <c>true</c> [timed out].</param>
        </member>
        <member name="M:Beyova.HttpExtension.AsyncHttpState.ResponseCallback(System.IAsyncResult)">
            <summary>
            Responses the callback.
            </summary>
            <param name="asynchronousResult">The asynchronous result.</param>
            <exception cref="T:Beyova.ExceptionSystem.OperationFailureException">ResponseCallback</exception>
        </member>
        <member name="M:Beyova.HttpExtension.ProceedResponseAsync(System.Net.HttpWebRequest,System.Action{System.Net.WebResponse})">
            <summary>
            Proceeds the response asynchronous.
            </summary>
            <param name="request">The request.</param>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Beyova.HttpExtension.TryGetHeader(System.Web.HttpRequest,System.String)">
            <summary>
            Tries the get header.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="headerKey">The header key.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.TryGetHeader(System.Web.HttpRequestBase,System.String)">
            <summary>
            Tries the get header.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="headerKey">The header key.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.TryGetHeader(System.Net.HttpWebRequest,System.String)">
            <summary>
            Tries the get header.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="headerKey">The header key.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.CopyHttpRequestToHttpWebRequest(System.Web.HttpRequest,System.String,System.Func{System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Exception})">
            <summary>
            Copies the HTTP request to HTTP web request.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="destinationHost">The destination host.</param>
            <param name="rewriteDelegate">The rewrite delegate.</param>
            <returns>
            HttpWebRequest.
            </returns>
        </member>
        <member name="F:Beyova.HttpExtension.ignoredHeaders">
            <summary>
            The ignored headers
            </summary>
        </member>
        <member name="M:Beyova.HttpExtension.TransportHttpResponse(System.Net.HttpWebResponse,System.Web.HttpResponse)">
            <summary>
            Transports the HTTP response.
            </summary>
            <param name="sourceResponse">The source response.</param>
            <param name="destinationResponse">The destination response.</param>
        </member>
        <member name="M:Beyova.HttpExtension.TransportHttpResponse(System.Net.WebResponse,System.Web.HttpResponse)">
            <summary>
            Transports the HTTP response.
            </summary>
            <param name="sourceResponse">The source response.</param>
            <param name="destinationResponse">The destination response.</param>
        </member>
        <member name="M:Beyova.HttpExtension.FillHttpRequestToHttpWebRequest(System.Web.HttpRequest,System.Net.HttpWebRequest,System.Func{System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Exception})">
            <summary>
            Fills the HTTP request to HTTP web request.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="request">The request.</param>
            <param name="rewriteDelegate">The rewrite delegate.</param>
        </member>
        <member name="M:Beyova.HttpExtension.SafeSetHttpHeader(System.Net.HttpWebRequest,System.String,System.Object,System.Boolean)">
            <summary>
            Safes the set HTTP header.
            <remarks>This method would help you to set values for header, especially for those need to be set by property. But following items would be ignored.
            <list type="bullet"><item>host</item><item>connection</item><item>close</item><item>content-length</item><item>proxy-connection</item><item>range</item></list></remarks>
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="headerKey">The header key.</param>
            <param name="value">The value.</param>
            <param name="ignoreIfNullOrEmpty">if set to <c>true</c> [ignore if null or empty].</param>
        </member>
        <member name="M:Beyova.HttpExtension.SafeSetHttpHeader(System.Web.HttpResponse,System.String,System.Object)">
            <summary>
            Safes the set HTTP header.
            </summary>
            <param name="httpResponse">The HTTP response.</param>
            <param name="headerKey">The header key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Beyova.HttpExtension.ConvertHttpStatusCodeToExceptionCode(System.Net.HttpStatusCode,System.Net.WebExceptionStatus)">
            <summary>
            Converts the HTTP status code to exception code.
            </summary>
            <param name="httpStatusCode">The HTTP status code.</param>
            <param name="webExceptionStatus">The web exception status.</param>
            <returns>ExceptionCode.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.IsGZip(System.Net.WebResponse)">
            <summary>
            Determines whether [is g zip] [the specified web response].
            </summary>
            <param name="webResponse">The web response.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:Beyova.HttpExtension.IsMobileUserAgent(System.String)">
            <summary>
            Determines whether [is mobile user agent].
            </summary>
            <param name="userAgent">The user agent.</param>
            <returns>
              <c>true</c> if [is mobile user agent] [the specified user agent]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.HttpExtension.FormDataToBytes(System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding)">
            <summary>
            Forms the data to bytes.
            </summary>
            <param name="dataMappings">The data mappings.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.HttpExtension.SetQueryString(System.Uri,System.String,System.String)">
            <summary>
            Sets the query string.
            </summary>
            <param name="uri">The URI.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.HttpExtension.SetQueryString(System.Uri,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sets the query string.
            </summary>
            <param name="uri">The URI.</param>
            <param name="updates">The updates.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.HttpExtension.SetQueryString(System.String,System.String,System.String)">
            <summary>
            Sets the query string.
            </summary>
            <param name="uriOrPath">The URI or path.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.HttpExtension.SetQueryString(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sets the query string.
            </summary>
            <param name="uriOrPath">The URI.</param>
            <param name="updates">The updates.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.HttpExtension.InternalGenerateNewQueryString(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Internals the generate new query string.
            </summary>
            <param name="originalPureQueryString">The original pure query string. Like: a=b&amp;c=d</param>
            <param name="updates">The updates.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.CommonExtension">
            <summary>
            Extensions for common type and common actions
            </summary>
        </member>
        <member name="F:Beyova.CommonExtension.dateTimeFormat">
            <summary>
            The date time format for commonly use. Format can be used in ToString method of <c>DateTime</c>, whose result should be like 2012-12-01 12:01:02.
            </summary>
        </member>
        <member name="F:Beyova.CommonExtension.localDateTimeFormat">
            <summary>
            The local date time format
            </summary>
        </member>
        <member name="F:Beyova.CommonExtension.fullDateTimeFormat">
            <summary>
            The full date time format. Format can be used in ToString method of <c>DateTime</c>, whose result should be like 2012-12-01 12:01:02.027.
            </summary>
        </member>
        <member name="F:Beyova.CommonExtension.dateFormat">
            <summary>
            The date time format for commonly use. Format can be used in ToString method of <c>DateTime</c>, whose result should be like 2012-12-01.
            </summary>
        </member>
        <member name="F:Beyova.CommonExtension.fullDateTimeTZFormat">
            <summary>
            The full date time tz format
            </summary>
        </member>
        <member name="M:Beyova.CommonExtension.Or``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Ors the specified match object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="matchObject">The match object.</param>
            <param name="collection">The collection.</param>
            <param name="comparer">The comparer.</param>
            <returns><c>true</c> if match object is NOT null and equals any of given collection, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.And``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Ands the specified collection.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="matchObject">The match object.</param>
            <param name="collection">The collection.</param>
            <param name="comparer">The comparer.</param>
            <returns>
              <c>true</c> if match object is NOT null and equals all of given collection, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Beyova.CommonExtension.SafeDispose(System.IDisposable)">
            <summary>
            Safes the dispose.
            </summary>
            <param name="disposableObject">The disposable object.</param>
        </member>
        <member name="M:Beyova.CommonExtension.SafeEquals(System.String,System.String,System.StringComparison)">
            <summary>
            Safe equals. Difference with Equals: If both null or value equals, return true, otherwise false. Would not throw NullReferenceException.
            </summary>
            <param name="stringA">The string a.</param>
            <param name="stringB">The string b.</param>
            <param name="comparisonType">Type of the comparison. Default: StringComparison.Ordinal</param>
            <returns><c>true</c> if equals, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.MeaningfulEquals(System.String,System.String,System.StringComparison)">
            <summary>
            Meaningful equals. Return true if both of them are null/empty, or neither is null/empty + text equals.
            </summary>
            <param name="stringA">The string a.</param>
            <param name="stringB">The string b.</param>
            <param name="comparisonType">Type of the comparison.</param>
            <returns><c>true</c> if is meaningful, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.SafeEquals``1(``0,``0)">
            <summary>
            Safe equals. Difference with Equals: If both null or value equals, return true, otherwise false. Would not throw NullReferenceException.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objectA">The object a.</param>
            <param name="objectB">The object b.</param>
            <returns><c>true</c> if equals, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.IsInValues``1(``0,System.Collections.Generic.ICollection{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Determines whether [is in values] [the specified values].
            </summary>
            <typeparam name="T"></typeparam>
            <param name="anyObject">Any object.</param>
            <param name="values">The values.</param>
            <param name="comparer">The comparer.</param>
            <returns><c>true</c> if [is in values] [the specified values]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.IsInString(System.String,System.Collections.Generic.ICollection{System.String},System.Boolean)">
            <summary>
            Determines whether [is in string] [the specified values].
            </summary>
            <param name="anyString">Any string.</param>
            <param name="values">The values.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns><c>true</c> if [is in string] [the specified values]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.IsInString(System.String,System.String[])">
            <summary>
            Determines whether [is in specific string] case un-sensitively
            </summary>
            <param name="anyString">Any string.</param>
            <param name="values">The values.</param>
            <returns><c>true</c> if [is in string] [the specified values]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.IsInStringExplicitly(System.String,System.String[])">
            <summary>
            Determines whether [is in specific string] explicitly (case sensitively)
            </summary>
            <param name="anyString">Any string.</param>
            <param name="values">The values.</param>
            <returns><c>true</c> if [is in string explicitly] [the specified values]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.CopyInheritedPropertyValueTo``2(``0,``1)">
            <summary>
            Copies the inherited property value to.
            </summary>
            <typeparam name="TSource">The type of the t source.</typeparam>
            <typeparam name="TDestination">The type of the t destination.</typeparam>
            <param name="anyObject">Any object.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Beyova.CommonExtension.CreateXml(System.String)">
            <summary>
            Creates the XML.
            </summary>
            <param name="nodeName">Name of the node.</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.CreateChildNode(System.Xml.Linq.XElement,System.String,System.Object)">
            <summary>
            Creates the child node.
            </summary>
            <param name="parentNode">The parent node.</param>
            <param name="childNodeName">Name of the child node.</param>
            <param name="value">The value.</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.SafeToString(System.String,System.String)">
            <summary>
            Safe to string.
            </summary>
            <param name="anyObject">Any object.</param>
            <param name="defaultString">The default string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.SafeToString(System.Object,System.String)">
            <summary>
            Safe to string.
            </summary>
            <param name="anyObject">Any object.</param>
            <param name="defaultString">The default string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.CheckXmlNodeName(System.Xml.Linq.XElement,System.String,System.Boolean)">
            <summary>
            Checks the name of the XML node.
            <remarks>
            If <c>nodeName</c> is specified, then method would check null and whether node name is matched.
            Otherwise null check only.
            </remarks>
            </summary>
            <param name="anyXml">Any XML.</param>
            <param name="nodeName">Name of the node.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToNullableEnum``1(System.Object,System.Nullable{``0})">
            <summary>
            Objects to nullable enum.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToEnum``1(System.Object,``0)">
            <summary>
            Objects to enum.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToDouble(System.Object,System.Double)">
            <summary>
            To double.
            </summary>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToFloat(System.Object,System.Single)">
            <summary>
            DBs to float.
            </summary>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToInt32(System.Object,System.Int32)">
            <summary>
            To the int32.
            </summary>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToInt64(System.Object,System.Int64)">
            <summary>
            Databases to int64.
            </summary>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.Int64.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToNullableInt32(System.Object,System.Nullable{System.Int32})">
            <summary>
            To the nullable int32.
            </summary>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.Nullable{System.Int32}.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToNullableInt64(System.Object,System.Nullable{System.Int64})">
            <summary>
            Databases to nullable int64.
            </summary>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.Nullable&lt;Int64&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToNullableFloat(System.Object,System.Nullable{System.Single})">
            <summary>
            Databases to nullable float.
            </summary>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.Nullable&lt;System.Single&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToNullableDouble(System.Object,System.Nullable{System.Double})">
            <summary>
            Databases to nullable double.
            </summary>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.Nullable&lt;System.Double&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToNullableDecimal(System.Object,System.Nullable{System.Decimal})">
            <summary>
            Databases to nullable decimal.
            </summary>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.Nullable&lt;System.Decimal&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToDateTime(System.Object)">
            <summary>
            DBs to date time.
            </summary>
            <param name="data">The data.</param>
            <returns>System.Nullable{DateTime}.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToDateTime(System.Object,System.DateTime)">
            <summary>
            To the date time.
            </summary>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns>DateTime.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToDateTime(System.String,System.String,System.Globalization.DateTimeStyles)">
            <summary>
            To the date time.
            </summary>
            <param name="data">The data.</param>
            <param name="format">The format.</param>
            <param name="style">The style.</param>
            <returns>System.Nullable&lt;System.DateTime&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToDateTime(System.String,System.DateTime,System.String,System.Globalization.DateTimeStyles)">
            <summary>
            To the date time.
            </summary>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <param name="format">The format.</param>
            <param name="style">The style.</param>
            <returns>System.DateTime.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToGuid(System.Object,System.Nullable{System.Guid})">
            <summary>
            To GUID.
            </summary>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.Nullable{Guid}.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToDecimal(System.Object,System.Decimal)">
            <summary>
            Databases the automatic decimal.
            </summary>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.Decimal.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToNullableBoolean(System.Object,System.Nullable{System.Boolean})">
            <summary>
            To nullable boolean
            </summary>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The nullable boolean value.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToBoolean(System.Object)">
            <summary>
            DBs to boolean.
            </summary>
            <param name="data">The data.</param>
            <returns>The boolean value. If failed to convert, return <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToString(System.Object,System.String)">
            <summary>
            To string.
            </summary>
            <param name="data">The data.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ObjectToXml(System.Object,System.Xml.Linq.XElement)">
            <summary>
            Databases to XML.
            </summary>
            <param name="data">The data.</param>
            <param name="defaultXml">The default XML.</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToInt32(System.Guid)">
            <summary>
            To the int32.
            </summary>
            <param name="guid">The unique identifier.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.EnumToString``1(System.Nullable{``0})">
            <summary>
            Enums to string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumValue">The enum value.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.EnumToString``1(``0)">
            <summary>
            Enums to string. Format: {int} ({string})
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumValue">The enum value.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.EnumToInt32``1(``0)">
            <summary>
            Enums to int32. Format: {int} ({string})
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumValue">The enum value.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.EnumToInt32``1(System.Nullable{``0})">
            <summary>
            Enums to int32.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumValue">The enum value.</param>
            <returns>System.Nullable{System.Int32}.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.Int32ToEnum``1(System.Int32)">
            <summary>
            Int32s to enum.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="intValue">The int value.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.Int32ToEnum``1(System.Nullable{System.Int32})">
            <summary>
            Int32s to enum.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="intValue">The int value.</param>
            <returns>System.Nullable&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToBoolean(System.String,System.Boolean)">
            <summary>
            To boolean.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="defaultValue">if set to <c>true</c> [default value].</param>
            <returns>The boolean result. If failed to concert, return <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToInt32(System.String,System.Int32)">
            <summary>
            To the int32.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="defaultValue">The default value.</param>
            <returns>Int32.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToInt64(System.String,System.Int64)">
            <summary>
            To the int64.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="defaultValue">The default value.</param>
            <returns>Int64.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToNullableInt32(System.String,System.Nullable{System.Int32})">
            <summary>
            To nullable int32.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="defaultValue">The default value.</param>
            <returns>Int32.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToNullableDecimal(System.String,System.Nullable{System.Decimal})">
            <summary>
            To the nullable decimal.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.Nullable&lt;System.Decimal&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToNullableBoolean(System.String,System.Nullable{System.Boolean})">
            <summary>
            To the nullable boolean.
            </summary>
            <param name="stringObject">The data.</param>
            <param name="defaultValue">if set to <c>true</c> [default value].</param>
            <returns>The nullable boolean value.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToDouble(System.String,System.Double)">
            <summary>
            To the double.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="defaultValue">The default value.</param>
            <returns>Double.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToDecimal(System.String,System.Decimal)">
            <summary>
            To the decimal.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.Decimal.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToGuid(System.String,System.Nullable{System.Guid})">
            <summary>
            To the grid.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="defaultGuid">The default GUID.</param>
            <returns>System.Nullable{Guid}.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.FromStringToDateTime(System.String,System.Nullable{System.DateTime})">
            <summary>
            Converts from the string to date time.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="defaultDateTime">The default date time.</param>
            <returns>System.Nullable{DateTime}.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.FromStringToDate(System.String,System.Nullable{System.DateTime})">
            <summary>
            Converts from the string to date.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="defaultDate">The default date.</param>
            <returns>System.Nullable{DateTime}.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.TimeZoneMinuteOffsetToTimeZoneString(System.Nullable{System.Int32})">
            <summary>
            Times the zone minute offset to time zone string.
            </summary>
            <param name="minuteOffset">The minute offset.</param>
            <returns>
            System.String.
            </returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToUtc(System.DateTime,System.TimeSpan)">
            <summary>
            To the UTC.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <param name="currentTimeZoneOffset">The current time zone offset.</param>
            <returns>
            DateTime.
            </returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToUtc(System.DateTime)">
            <summary>
            To the UTC.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <returns>
            DateTime.
            </returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToUtc(System.DateTime,System.Int32)">
            <summary>
            To the UTC.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <param name="currentTimeZoneOffsetInMinute">The current time zone offset information minute.</param>
            <returns>
            DateTime.
            </returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToUnixMillisecondsDateTime(System.Nullable{System.DateTime})">
            <summary>
            To the unix milliseconds date time.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <returns>System.Nullable&lt;System.Int64&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToUnixMillisecondsDateTime(System.DateTime)">
            <summary>
            To the unix milliseconds date time.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <returns>System.Int64.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.UnixMillisecondsToDateTime(System.Int64,System.DateTimeKind)">
            <summary>
            Converts Unix milliseconds to date time.
            </summary>
            <param name="unixMilliseconds">The unix milliseconds.</param>
            <param name="dateTimeKind">Kind of the date time.</param>
            <returns>System.DateTime.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.UnixMillisecondsToDateTime(System.Nullable{System.Int64},System.DateTimeKind)">
            <summary>
            Converts Unix milliseconds to date time.
            </summary>
            <param name="unixMilliseconds">The unix milliseconds.</param>
            <param name="dateTimeKind">Kind of the date time.</param>
            <returns>System.Nullable&lt;System.DateTime&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ConvertTimeZoneMinuteToTimeZone(System.Nullable{System.Int32})">
            <summary>
            Converts the time zone minute to time zone.
            </summary>
            <param name="timeZone">The time zone.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ConvertTimeZoneMinuteToTimeZone(System.Int32)">
            <summary>
            Converts the time zone minute to time zone. Output sample: +08:30
            </summary>
            <param name="timeZone">The time zone.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToDifferentTimeZone(System.DateTime,System.TimeSpan,System.TimeSpan)">
            <summary>
            To different time zone.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <param name="targetTimeZoneOffset">The target time zone offset.</param>
            <param name="currentTimeZoneOffset">The current time zone offset.</param>
            <returns>DateTime.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToDifferentTimeZone(System.Nullable{System.DateTime},System.TimeSpan,System.TimeSpan)">
            <summary>
            To the different time zone.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <param name="targetTimeZoneOffset">The target time zone offset.</param>
            <param name="currentTimeZoneOffset">The current time zone offset.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToDifferentTimeZone(System.DateTime,System.TimeZoneInfo)">
            <summary>
            To the different time zone.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <param name="timeZone">The time zone.</param>
            <returns>DateTime.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToDifferentTimeZone(System.Nullable{System.DateTime},System.TimeZoneInfo)">
            <summary>
            To the different time zone.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <param name="timeZone">The time zone.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToDifferentTimeZone(System.DateTime,System.Int32,System.Int32)">
            <summary>
            To the different time zone.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <param name="targetTimeZoneOffsetInMinute">The target time zone offset information minute.</param>
            <param name="currentTimeZoneOffsetInMinute">The current time zone offset information minute.</param>
            <returns>
            DateTime.
            </returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToDifferentTimeZone(System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            To the different time zone.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <param name="targetTimeZoneOffsetInMinute">The target time zone offset in minute.</param>
            <param name="currentTimeZoneOffsetInMinute">The current time zone offset in minute.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToDateTimeString(System.Nullable{System.DateTime})">
            <summary>
            To the date time string.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToDateString(System.Nullable{System.DateTime})">
            <summary>
            To the date string.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToLocalDateString(System.DateTime)">
            <summary>
            To the local date string.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToLocalDateString(System.Nullable{System.DateTime})">
            <summary>
            To the local date string.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToFullDateTimeString(System.DateTime)">
            <summary>
            To the full date time string.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <returns>
            System.String.
            </returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToFullDateTimeString(System.Nullable{System.DateTime})">
            <summary>
            To the full date time string.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToFullDateTimeTzString(System.DateTime)">
            <summary>
            To the full date time tz string.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToFullDateTimeTzString(System.Nullable{System.DateTime})">
            <summary>
            To the full date time tz string.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToLogStampString(System.DateTime)">
            <summary>
            To the log stamp string.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonExtension.ToLogStampString(System.Nullable{System.DateTime})">
            <summary>
            To the log stamp string.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.GetFirstDayOfMonth(System.DateTime)">
            <summary>
            Gets the first day of month.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <returns>DateTime.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.GetLastDayOfMonth(System.DateTime)">
            <summary>
            Gets the last day of month.
            </summary>
            <param name="dateTimeObject">The date time object.</param>
            <returns>DateTime.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.TryGetChildElement(System.Xml.Linq.XElement,System.String[])">
            <summary>
            Tries the get child element.
            </summary>
            <param name="xElement">The x element.</param>
            <param name="elementNames">The element names.</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.TryGetChildElements(System.Xml.Linq.XElement,System.String[])">
            <summary>
            Tries the get child elements.
            </summary>
            <param name="xElement">The x element.</param>
            <param name="elementNames">The element names.</param>
            <returns>List&lt;XElement&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.TryParseXml(System.String,System.Boolean)">
            <summary>
            Tries the parse XML.
            </summary>
            <param name="xmlString">The XML string.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.TryLoadXml(System.String,System.Boolean)">
            <summary>
            Tries the load XML.
            </summary>
            <param name="xmlPath">The XML path.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns>XDocument.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.GetXmlValue(System.Xml.Linq.XElement,System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="xElement">The executable element.</param>
            <param name="nodeName">Name of the node.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.SetXmlValue(System.Xml.Linq.XElement,System.String,System.String,System.Boolean)">
            <summary>
            Sets the value.
            </summary>
            <param name="container">The container.</param>
            <param name="nodeName">Name of the node.</param>
            <param name="value">The value.</param>
            <param name="omitCDATA">if set to <c>true</c> [omit CDATA].</param>
        </member>
        <member name="M:Beyova.CommonExtension.TryGetChildValue(System.Xml.Linq.XElement,System.String)">
            <summary>
            Tries the get the value of the first child element by childNodeName. If node is found, return node value, otherwise return string.Empty.
            </summary>
            <param name="anyXml">Any XML.</param>
            <param name="childNodeName">Name of the child node.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.FindChildElementsByTagWithAttribute(System.Xml.Linq.XElement,System.String,System.String,System.String)">
            <summary>
            Finds the child elements by tag with attribute.
            </summary>
            <param name="anyXml">Any XML.</param>
            <param name="tagName">Name of the tag.</param>
            <param name="attributeName">Name of the attribute.</param>
            <param name="attributeValue">The attribute value.</param>
            <returns>List{XElement}.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.FindChildElementsByTagWithAttribute(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Finds the child elements by tag with attribute.
            </summary>
            <param name="anyXml">Any XML.</param>
            <param name="tagName">Name of the tag.</param>
            <param name="hasAttributeName">Name of the has attribute.</param>
            <returns>List{XElement}.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.FindChildElementsByAttribute(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Finds the child elements by attribute.
            </summary>
            <param name="anyXml">Any XML.</param>
            <param name="attributeName">Name of the attribute.</param>
            <param name="attributeValue">The attribute value.</param>
            <returns>List{XElement}.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.FindFirstChildElementByAttribute(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Finds the first child element by attribute.
            </summary>
            <param name="anyXml">Any XML.</param>
            <param name="attributeName">Name of the attribute.</param>
            <param name="attributeValue">The attribute value.</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.FindFirstChildElementByTagWithAttribute(System.Xml.Linq.XElement,System.String,System.String,System.String)">
            <summary>
            Finds the first child element by tag with attribute.
            </summary>
            <param name="anyXml">Any XML.</param>
            <param name="tagName">Name of the tag.</param>
            <param name="attributeName">Name of the attribute.</param>
            <param name="attributeValue">The attribute value.</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.FindChildElements(System.Xml.Linq.XElement,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Finds the child elements by tag with attribute.
            </summary>
            <param name="anyXml">Any XML.</param>
            <param name="tagName">Name of the tag.</param>
            <param name="attributeName">Name of the attribute.</param>
            <param name="attributeValue">The attribute value.</param>
            <param name="findOnlyOne">if set to <c>true</c> [find only one].</param>
            <returns>List{XElement}.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.HasElements(System.Xml.Linq.XElement,System.String)">
            <summary>
            Gets the string value.
            </summary>
            <param name="element">The element.</param>
            <param name="name">The name.</param>
            <returns><c>true</c> if the specified element has elements; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.GetAttributeValue(System.Xml.Linq.XElement,System.String)">
            <summary>
            Gets the attribute value.
            </summary>
            <param name="xElement">The x element.</param>
            <param name="attribute">The attribute.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.SetValueAsSubElement(System.Xml.Linq.XElement,System.String,System.Object)">
            <summary>
            Sets the value as sub element.
            </summary>
            <param name="xElement">The x element.</param>
            <param name="subNodeName">Name of the sub node.</param>
            <param name="innerValue">The inner value.</param>
            <returns>The added element in sub.</returns>
        </member>
        <member name="F:Beyova.CommonExtension.random">
            <summary>
            The random
            </summary>
        </member>
        <member name="F:Beyova.CommonExtension.alpha">
            <summary>
            The alpha
            </summary>
        </member>
        <member name="M:Beyova.CommonExtension.GetRandom(System.Object,System.Int32,System.Int32)">
            <summary>
            Gets the random. [min, max)
            </summary>
            <param name="anyObject">Any object.</param>
            <param name="max">The maximum. (Can not reach)</param>
            <param name="min">The minimum. (Can reach)</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.CreateRandomNumberString(System.Object,System.Int32)">
            <summary>
            Gets the random number only.
            </summary>
            <param name="anyObject">Any object.</param>
            <param name="length">The length.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.CreateRandomHexString(System.Object,System.Int32)">
            <summary>
            Gets the random hex string.
            </summary>
            <param name="anyObject">Any object.</param>
            <param name="length">The length.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.CreateRandomHex(System.Object,System.Int32)">
            <summary>
            Gets the random hex.
            </summary>
            <param name="anyObject">Any object.</param>
            <param name="length">The length.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.CommonExtension.CreateRandomString(System.Object,System.Int32)">
            <summary>
            Gets the random string.
            </summary>
            <param name="anyObject">Any object.</param>
            <param name="length">The length.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.GetEnumDescriptionText``1(``0)">
            <summary>
            Gets the enum contract text.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumValue">The enum value.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ParseToEnum``1(System.String,``0)">
            <summary>
            Parses to enum.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumString">The enum string.</param>
            <param name="defaultValue">The default value.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.ParseToEnum``1(System.Int32,``0)">
            <summary>
            Parses to enum.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumValue">The enum value.</param>
            <param name="defaultValue">The default value.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.AddEnumFlag``1(``0,``0)">
            <summary>
            Adds the enum flag.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumValue">The enum value.</param>
            <param name="value">The value.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.RemoveEnumFlag``1(``0,``0)">
            <summary>
            Removes the enum flag.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumValue">The enum value.</param>
            <param name="value">The value.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.GetEnumFlagValues``1(``0)">
            <summary>
            Gets the enum flag values.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumValue">The enum value.</param>
            <returns>System.Collections.Generic.IList&lt;T&gt;.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.Ensure``1(``0,System.Func{``0,System.Boolean},``0)">
            <summary>
            Ensures the specified object. If <c>ensureCondition</c> output is false, use <c>defaultValue</c> instead.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">The object.</param>
            <param name="ensureCondition">The ensure condition.</param>
            <param name="defaultValue">The default value.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.Testify``1(``0,System.String,System.Func{``0,System.Boolean})">
            <summary>
            Testifies the specified object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">The object.</param>
            <param name="objectName">Name of the object.</param>
            <param name="ensureCondition">The ensure condition.</param>
        </member>
        <member name="F:Beyova.CommonExtension.isInt32Natural">
            <summary>
            The is int32 natural
            </summary>
        </member>
        <member name="F:Beyova.CommonExtension.isInt64Natural">
            <summary>
            The is int64 natural
            </summary>
        </member>
        <member name="M:Beyova.CommonExtension.EnsureNaturalNumber(System.Int32,System.Int32)">
            <summary>
            Ensures the natural number.
            </summary>
            <param name="value">The value.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.TestifyNaturalNumber(System.Int32,System.String)">
            <summary>
            Testifies the natural number.
            </summary>
            <param name="value">The value.</param>
            <param name="objectName">Name of the object.</param>
        </member>
        <member name="M:Beyova.CommonExtension.EnsureNaturalNumber(System.Int64,System.Int32)">
            <summary>
            Ensures the natural number.
            </summary>
            <param name="value">The value.</param>
            <param name="defaultValue">The default value.</param>
            <returns>System.Int64.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.TestifyNaturalNumber(System.Int64,System.String)">
            <summary>
            Testifies the natural number.
            </summary>
            <param name="value">The value.</param>
            <param name="objectName">Name of the object.</param>
        </member>
        <member name="M:Beyova.CommonExtension.ToString(System.Nullable{System.DateTime},System.String)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="dateTime">The date time.</param>
            <param name="format">The format.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.CommonExtension.GetUnderlyingObjects``1(System.Collections.Generic.IEnumerable{Beyova.BaseObject{``0}})">
            <summary>
            Gets the underlying objects.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objects">The objects.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.CommonExtension.GetUnderlyingObjects``1(System.Collections.Generic.IEnumerable{Beyova.SimpleBaseObject{``0}})">
            <summary>
            Gets the underlying objects.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objects">The objects.</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.ReflectionExtension">
            <summary>
            Class ReflectionExtension.
            </summary>
        </member>
        <member name="T:Beyova.ReflectionExtension.PropertyInfoEquailtyComparer">
            <summary>
            Class PropertyInfoEquailtyComparer
            </summary>
        </member>
        <member name="M:Beyova.ReflectionExtension.PropertyInfoEquailtyComparer.Equals(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type <see cref="T:System.Reflection.PropertyInfo"/> to compare.</param>
            <param name="y">The second object of type <see cref="T:System.Reflection.PropertyInfo"/> to compare.</param>
            <returns>
            true if the specified objects are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.PropertyInfoEquailtyComparer.GetHashCode(System.Reflection.PropertyInfo)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The object.</param>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="F:Beyova.ReflectionExtension.Path_BinFolder">
            <summary>
            The path_ bin folder
            </summary>
        </member>
        <member name="F:Beyova.ReflectionExtension.genericClassRegex">
            <summary>
            The generic regex
            </summary>
        </member>
        <member name="F:Beyova.ReflectionExtension.genericCodeLookClassRegex">
            <summary>
            The generic code look class regex
            </summary>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetAppDomainAssemblies(System.AppDomain)">
            <summary>
            Gets the application domain assemblies.
            </summary>
            <param name="appDomain">The application domain.</param>
            <returns>IEnumerable{Assembly}.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetType(System.Reflection.Assembly,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the type.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="typeName">Name of the type.</param>
            <param name="ignoreCase">The ignore case.</param>
            <param name="throwException">The throw exception.</param>
            <returns>System.Type.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.TryGetType(System.Reflection.Assembly,System.String,System.Boolean,System.Type@)">
            <summary>
            Tries the type of the get.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="typeName">Name of the type.</param>
            <param name="ignoreCase">The ignore case.</param>
            <param name="type">The type.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetAssemblyPublicKeyToken(System.Reflection.Assembly)">
            <summary>
            Gets the assembly public key token.
            </summary>
            <param name="anyAssembly">Any assembly.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsSystemAssembly(System.Reflection.Assembly)">
            <summary>
            Determines whether [is system assembly] [the specified assembly].
            </summary>
            <param name="assembly">The assembly.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsSystemAssembly(System.Reflection.AssemblyName)">
            <summary>
            Determines whether [is system assembly] [the specified assembly name].
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetPublicProperties(System.Type)">
            <summary>
            Gets the public properties.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetProperties(System.Type,System.Reflection.BindingFlags,System.Boolean,System.Func{System.Reflection.PropertyInfo,System.Boolean})">
            <summary>
            Gets the properties.
            </summary>
            <param name="type">The type.</param>
            <param name="bindingFlags">The binding flags.</param>
            <param name="inherit">if set to <c>true</c> [inherit].</param>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.InternalFillProperties(System.Collections.Generic.HashSet{System.Reflection.PropertyInfo},System.Type,System.Reflection.BindingFlags,System.Func{System.Reflection.PropertyInfo,System.Boolean})">
            <summary>
            Internals the fill properties.
            </summary>
            <param name="properties">The properties.</param>
            <param name="type">The type.</param>
            <param name="bindingFlags">The binding flags.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsOverride(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the specified property information is override.
            </summary>
            <param name="propertyInfo">The property information.</param>
            <returns><c>true</c> if the specified property information is override; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsVirtual(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the specified property information is virtual.
            </summary>
            <param name="propertyInfo">The property information.</param>
            <returns><c>true</c> if the specified property information is virtual; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetActualAffectedProperties(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Gets the actual affected properties. This method helps to get properties without duplication.
            </summary>
            <param name="anyType">Any type.</param>
            <param name="bindingFlags">The binding flags.</param>
            <returns>List&lt;PropertyInfo&gt;.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetActualAffectedFields(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Gets the actual affected fields. This method helps to get fields without duplication.
            </summary>
            <param name="anyType">Any type.</param>
            <param name="bindingFlags">The binding flags.</param>
            <returns>List&lt;FieldInfo&gt;.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.CreateInstance(System.Type,System.Object[])">
            <summary>
            Creates the instance.
            </summary>
            <param name="type">The type.</param>
            <param name="arguments">The arguments.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.CreateInstance``1">
            <summary>
            Creates the instance.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.CreateGenericInstance(System.Type,System.Type[],System.Object[])">
            <summary>
            Creates the generic instance.
            </summary>
            <param name="type">The type.</param>
            <param name="genericTypes">The generic types.</param>
            <param name="arguments">The arguments.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetAssemblyFileVersion(System.Reflection.Assembly)">
            <summary>
            Gets the assembly file version.
            </summary>
            <param name="assemblyObject">The assembly object.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetAssemblyComponentVersion(System.Reflection.Assembly)">
            <summary>
            Gets the assembly component version.
            </summary>
            <param name="assemblyObject">The assembly object.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetAssemblyVersion(System.Reflection.Assembly)">
            <summary>
            Gets the assembly version.
            </summary>
            <param name="assemblyObject">The assembly object.</param>
            <returns>Version.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetGenericTypeName(System.String,System.Boolean,System.String[]@,System.String@)">
            <summary>
            Gets the name of the generic type. e.g.: System.Collections.Generic.List`1[Beyova.ServiceCredential]
            </summary>
            <param name="fullName">The full name.</param>
            <param name="isCodeLook">The is code look.</param>
            <param name="genericTypeNames">The generic type names.</param>
            <param name="typeName">Name of the type.</param>
            <returns>
              <c>true</c> if succeed to get, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.SmartGetType(System.String,System.Boolean)">
            <summary>
            Gets the type smartly. It would find type in all related assemblies. And even if type name is generic based, it can still give right result.
            e.g.: System.Collections.Generic.List`1[Beyova.ServiceCredential]
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="isCodeLook">The is code look.</param>
            <returns>Type.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.MatchInterfaceMethod(System.Reflection.MethodInfo,System.Type,System.Boolean)">
            <summary>
            Matches the interface method.
            </summary>
            <param name="methodInfo">The method information.</param>
            <param name="attributeType">Type of the attribute.</param>
            <param name="attributeInherit">if set to <c>true</c> [attribute inherit].</param>
            <returns><c>true</c> if matches interface method, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetInterfaceMethod(System.Type,System.String,System.Boolean,System.Type,System.Boolean)">
            <summary>
            Gets the interface method. This method would try to find methods in inheritance.
            </summary>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <param name="attributeType">Type of the attribute.</param>
            <param name="attributeInherit">if set to <c>true</c> [attribute inherit].</param>
            <returns>MethodInfo.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetInterfaceMethods(System.Type,System.Type,System.Boolean)">
            <summary>
            Gets the interface methods. This method would try to find methods in inheritance.
            </summary>
            <param name="type">The type.</param>
            <param name="attributeType">Type of the attribute.</param>
            <param name="attributeInherit">if set to <c>true</c> [attribute inherit].</param>
            <returns>List&lt;MethodInfo&gt;.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetGenericType(System.String,System.String[])">
            <summary>
            Gets the type of the generic.
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="genericTypeNames">The generic type names.</param>
            <returns>Type.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsBaseObject(System.Type)">
            <summary>
            Determines whether this type is <see cref="T:Beyova.IBaseObject"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>
              <c>true</c> if type is <see cref="T:Beyova.IBaseObject"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsSimpleBaseObject(System.Type)">
            <summary>
            Determines whether this type is <see cref="T:Beyova.ISimpleBaseObject"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>
              <c>true</c> if type is <see cref="T:Beyova.ISimpleBaseObject"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsNullable(System.Type)">
            <summary>
            Determines whether this type is <see cref="T:System.Nullable"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>
              <c>true</c> if type is <see cref="T:System.Nullable"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.EnsureUnderlyingType(System.Type)">
            <summary>
            Ensures the type of the underlying.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.ActOnTypeWithNullableUnderlying``1(System.Type,System.Func{System.Type,``0})">
            <summary>
            Acts the on type with nullable underlying.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type">The type.</param>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.CheckTypeWithNullableUnderlying(System.Type,System.Func{System.Type,System.Boolean})">
            <summary>
            Checks the type with nullable underlying. return action(type) || action(Nullable.GetUnderlyingType(type));
            </summary>
            <param name="type">The type.</param>
            <param name="action">The action.</param>
            <returns>
            return action(type) || action(Nullable.GetUnderlyingType(type));
            </returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsEnum(System.Type)">
            <summary>
            Determines whether this instance is enum.
            </summary>
            <param name="type">The type.</param>
            <returns>
              <c>true</c> if the specified type is enum; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.CanBeNull``1(``0)">
            <summary>
            Determines whether this instance [can be null] the specified object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">The object.</param>
            <returns>
              <c>true</c> if this instance [can be null] the specified object; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.CanBeNull(System.Type)">
            <summary>
            Determines whether this instance [can be null] the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns>
              <c>true</c> if this instance [can be null] the specified type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsDictionary(System.Type)">
            <summary>
            Determines whether the specified type is dictionary.
            </summary>
            <param name="type">The type.</param>
            <returns><c>true</c> if the specified type is dictionary; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsCollection(System.Type)">
            <summary>
            Determines whether the specified type is collection.
            </summary>
            <param name="type">The type.</param>
            <returns>
              <c>true</c> if the specified type is collection; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.TryGetNullableType(System.Type)">
            <summary>
            Gets the type of the nullable.
            <remarks>
            If specific type is not Nullable, return type itself.
            </remarks>
            </summary>
            <param name="type">The type.</param>
            <returns>Type.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetNullableType(System.Type)">
            <summary>
            Gets the type of the nullable.
            <remarks>
            If specific type is not Nullable, return null.
            </remarks>
            </summary>
            <param name="type">The type.</param>
            <returns>Type.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.InheritsFrom(System.Type,System.Type)">
            <summary>
            Inheritses from.
            </summary>
            <param name="type">The type.</param>
            <param name="inheritedType">Type of the inherited.</param>
            <returns><c>true</c> if inherits from specific type, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsSimpleType(System.Type)">
            <summary>
            Determines whether [is simple type] [the specified type]. Like: Guid, string, int32, int64, etc.
            If it is Nullable&lt;T&gt;, it would detect T directly.
            </summary>
            <param name="type">The type.</param>
            <returns><c>true</c> if [is simple type] [the specified type]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsPrimitiveType(System.Type)">
            <summary>
            Determines whether [is primitive type].
            </summary>
            <param name="type">The type.</param>
            <returns>
              <c>true</c> if [is primitive type] [the specified type]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.InternalIsPrimitiveType(System.Type)">
            <summary>
            Internals the type of the is primitive.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsIntegerBasedType(System.Type)">
            <summary>
            Determines whether [is integer based type].
            </summary>
            <param name="type">The type.</param>
            <returns>
              <c>true</c> if [is integer based type] [the specified type]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.InternalIsIntegerBasedType(System.Type)">
            <summary>
            Internals the type of the is integer based.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsNumericPrimitiveType(System.Type)">
            <summary>
            Determines whether [is numeric primitive type].
            </summary>
            <param name="type">The type.</param>
            <returns>
              <c>true</c> if [is numeric primitive type] [the specified type]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.InternalIsNumericPrimitiveType(System.Type)">
            <summary>
            Internals the type of the is numeric primitive.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.HasAttribute``1(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
            Determines whether the specified method has attribute.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="method">The method.</param>
            <param name="inherit">The inherit.</param>
            <returns><c>true</c> if the specified method has attribute; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.HasAttribute(System.Reflection.MethodInfo,System.Attribute,System.Boolean)">
            <summary>
            Determines whether the specified method has attribute.
            </summary>
            <param name="method">The method.</param>
            <param name="attribute">The attribute.</param>
            <param name="inherit">if set to <c>true</c> [inherit].</param>
            <returns><c>true</c> if the specified method has attribute; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.HasAttribute``1(System.Type,System.Boolean)">
            <summary>
            Determines whether the specified type has attribute.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type">The type.</param>
            <param name="inherit">if set to <c>true</c> [inherit].</param>
            <returns><c>true</c> if the specified type has attribute; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.HasAttribute(System.Type,System.Attribute,System.Boolean)">
            <summary>
            Determines whether the specified type has attribute.
            </summary>
            <param name="type">The type.</param>
            <param name="attribute">The attribute.</param>
            <param name="inherit">if set to <c>true</c> [inherit].</param>
            <returns><c>true</c> if the specified type has attribute; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.HasInterface(System.Type,System.Type)">
            <summary>
            Determines whether the specified type has interface.
            </summary>
            <param name="type">The type.</param>
            <param name="interfaceType">Type of the interface.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetParameterType(System.Reflection.MethodInfo,System.Int32)">
            <summary>
            Gets the parameter type from method info.
            </summary>
            <param name="methodInfo">The method info.</param>
            <param name="index">The index.</param>
            <returns>Type.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetPropertyValue(System.Object,System.String)">
            <summary>
            Gets the property value.
            </summary>
            <param name="anyObject">Any object.</param>
            <param name="propertyName">Name of the property.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetCurrentExecutingMethod">
            <summary>
            Gets the current executing method.
            </summary>
            <returns>MethodBase.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetMethodInfoWithinAttribute``1(System.Type,System.Boolean,System.Reflection.BindingFlags)">
            <summary>
            Gets the method information within attribute. As MSDN said, you have to assign either <see cref="F:System.Reflection.BindingFlags.Instance"/> or <see cref="F:System.Reflection.BindingFlags.Static"/> for bindingFlags, so that you can get right result.
            </summary>
            <typeparam name="TAttribute">The type of the t attribute.</typeparam>
            <param name="type">The type.</param>
            <param name="inherit">The inherit.</param>
            <param name="bindingFlags">The binding flags.</param>
            <returns>IEnumerable&lt;MethodInfo&gt;.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsVoid(System.Type)">
            <summary>
            Determines whether the specified type is void.
            </summary>
            <param name="type">The type.</param>
            <returns><c>true</c> if the specified type is void; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsVoid(System.Type,System.Boolean)">
            <summary>
            Determines whether the specified default value is void.
            </summary>
            <param name="type">The type.</param>
            <param name="defaultValue">if set to <c>true</c> [default value].</param>
            <returns>
              <c>true</c> if the specified default value is void; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsAsync(System.Reflection.MethodInfo)">
            <summary>
            Determines whether this instance is asynchronous.
            </summary>
            <param name="method">The method.</param>
            <returns>
              <c>true</c> if the specified method is asynchronous; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.IsTask(System.Type)">
            <summary>
            Determines whether this instance is task.
            </summary>
            <param name="type">The type.</param>
            <returns>
              <c>true</c> if the specified type is task; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetTaskUnderlyingType(System.Type)">
            <summary>
            Gets the type of the task underlying. If given Task%lt;x%gt;, return x; given Task, return Void, otherwise return null.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetGenericParameterNames(System.Type,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Gets the generic parameter names.
            </summary>
            <param name="type">The type.</param>
            <param name="genericParameterTypeNames">The generic parameter type names.</param>
            <returns>System.Collections.Generic.List&lt;System.String&gt;.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetConstantFields(System.Type,System.Boolean)">
            <summary>
            Gets the constant fields.
            </summary>
            <param name="type">The type.</param>
            <param name="isPublic">if set to <c>true</c> [is public].</param>
            <returns></returns>
        </member>
        <member name="T:Beyova.ReflectionExtension.AssemblyDependency">
            <summary>
            Class AssemblyDependency.
            </summary>
        </member>
        <member name="P:Beyova.ReflectionExtension.AssemblyDependency.Last">
            <summary>
            Gets or sets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:Beyova.ReflectionExtension.AssemblyDependency.Next">
            <summary>
            Gets or sets the next.
            </summary>
            <value>The next.</value>
        </member>
        <member name="P:Beyova.ReflectionExtension.AssemblyDependency.Assembly">
            <summary>
            Gets or sets the assembly.
            </summary>
            <value>The assembly.</value>
        </member>
        <member name="P:Beyova.ReflectionExtension.AssemblyDependency.Level">
            <summary>
            Gets or sets the level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="P:Beyova.ReflectionExtension.AssemblyDependency.ReferencedCount">
            <summary>
            Gets or sets the referenced count.
            </summary>
            <value>The referenced count.</value>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetAssemblyDependencyChain(System.Collections.Generic.ICollection{System.Reflection.Assembly},System.Boolean)">
            <summary>
            Gets the assembly dependency chain. Descending is for referenced count. So if descending is true, then Json.NET should be ahead of common.
            </summary>
            <param name="assemblies">The assemblies.</param>
            <param name="descending">The descending.</param>
            <returns>List&lt;Assembly&gt;.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.TryLoadAssembly(System.Reflection.AssemblyName)">
            <summary>
            Tries the load assembly.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <returns>System.Reflection.Assembly.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.FillAssemblyDependency(System.Collections.Generic.List{Beyova.ReflectionExtension.AssemblyDependency},System.Reflection.Assembly,Beyova.ReflectionExtension.AssemblyDependency,System.Int32)">
            <summary>
            Fills the assembly dependency.
            </summary>
            <param name="container">The container.</param>
            <param name="assembly">The assembly.</param>
            <param name="lastDependency">The last dependency.</param>
            <param name="currentLevel">The current level.</param>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetFullName(System.Reflection.MethodBase,System.Type)">
            <summary>
            Gets the full name.
            </summary>
            <param name="methodBase">The method base.</param>
            <param name="requiredAttribute">The required attribute.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetFullName(System.Type,System.Type)">
            <summary>
            Gets the full name. Actually, it returns as code look.
            </summary>
            <param name="type">The type.</param>
            <param name="requiredAttribute">The required attribute.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetCurrentMethod">
            <summary>
            Gets the current method.
            </summary>
            <returns>System.Reflection.MethodBase.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.ConvertToObjectByType(System.Type,System.String,System.Boolean)">
            <summary>
            Converts the objects by <see cref="T:System.Type" /> instance.
            </summary>
            <param name="type">The type.</param>
            <param name="value">The value.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.ConvertStringToObject``1(System.String,System.Boolean)">
            <summary>
            Converts to object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns>``0.</returns>
            <exception cref="T:Beyova.ExceptionSystem.InvalidObjectException"></exception>
        </member>
        <member name="M:Beyova.ReflectionExtension.ConvertStringToObject(System.String,System.Type,System.Boolean)">
            <summary>
            Converts the string to object.
            </summary>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="throwException">The throw exception.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.InvokeMethod(System.Type,System.Object,System.String,System.Object[],System.Type[],System.Boolean)">
            <summary>
            Invokes the method.
            </summary>
            <param name="objectType">Type of the object.</param>
            <param name="instance">The instance.</param>
            <param name="methodName">Name of the method.</param>
            <param name="invokeParameters">The invoke parameters.</param>
            <param name="genericTypes">The generic types.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns>System.Object.</returns>
            <exception cref="T:System.InvalidCastException">Neither objectType or instance is valid.</exception>
        </member>
        <member name="M:Beyova.ReflectionExtension.InvokeStaticGenericMethod(System.Type,System.String,System.Object[],System.Type[],System.Boolean)">
            <summary>
            Invokes the static generic method.
            </summary>
            <param name="objectType">Type of the object.</param>
            <param name="methodName">Name of the method.</param>
            <param name="invokeParameters">The invoke parameters.</param>
            <param name="genericTypes">The generic types.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.CreateSampleObject``1">
            <summary>
            Creates the sample object.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>``0.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.CreateSampleObjectPropertyValue(System.Reflection.PropertyInfo)">
            <summary>
            Creates the property value.
            </summary>
            <param name="propertyInfo">The property information.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.CreateSampleObject(System.Type)">
            <summary>
            Creates the sample object.
            </summary>
            <param name="type">The type.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Beyova.ReflectionExtension.GetRandomNumber(System.Int32,System.Int32)">
            <summary>
            Gets the random number.
            </summary>
            <param name="max">The maximum.</param>
            <param name="min">The minimum.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:Beyova.ColorUtility">
            <summary>
            Singleton utility class for color.
            </summary>
        </member>
        <member name="F:Beyova.ColorUtility.knownColors">
            <summary>
            The known colors
            </summary>
        </member>
        <member name="M:Beyova.ColorUtility.#ctor">
            <summary>
            Initializes the <see cref="T:Beyova.ColorUtility" /> class.
            </summary>
        </member>
        <member name="M:Beyova.ColorUtility.GetKnownColorSet">
            <summary>
            Gets the known color set.
            </summary>
            <returns>List&lt;Color&gt;.</returns>
        </member>
        <member name="M:Beyova.ColorUtility.GetClosestColor(System.Drawing.Color)">
            <summary>
            Gets the color of the closest.
            </summary>
            <param name="color">The color.</param>
            <returns>KnownColor.</returns>
        </member>
        <member name="M:Beyova.ColorUtility.ColorDiff(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Colors the diff.
            </summary>
            <param name="color">The color.</param>
            <param name="curr">The curr.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Beyova.ColorUtility.GetImageFeatureSet(System.Drawing.Bitmap)">
            <summary>
            Gets the image feature set.
            </summary>
            <param name="image">The image.</param>
            <returns>Dictionary&lt;System.String, System.Int32&gt;.</returns>
        </member>
        <member name="T:Beyova.ContextHelper">
            <summary>
            Class ContextHelper.
            </summary>
        </member>
        <member name="F:Beyova.ContextHelper.threadKey_ApiContext">
            <summary>
            The thread key_ API context
            </summary>
        </member>
        <member name="F:Beyova.ContextHelper.threadKey_TraceContext">
            <summary>
            The thread key_ trace context
            </summary>
        </member>
        <member name="M:Beyova.ContextHelper.GetCurrentOperatorKey">
            <summary>
            Gets the current operator key.
            </summary>
            <returns>Guid.</returns>
        </member>
        <member name="P:Beyova.ContextHelper.CurrentUserInfo">
            <summary>
            Gets the current user information.
            </summary>
            <value>The current user information.</value>
        </member>
        <member name="P:Beyova.ContextHelper.CurrentCultureInfo">
            <summary>
            Gets the current culture code.
            Order: Query String[language] -> IUserInfo.Language -> CultureInfo.Current.
            </summary>
            <value>The current culture code.</value>
        </member>
        <member name="P:Beyova.ContextHelper.CurrentCredential">
            <summary>
            Gets the current credential.
            </summary>
            <value>The current credential.</value>
        </member>
        <member name="P:Beyova.ContextHelper.CurrentPermissions">
            <summary>
            Gets the current permissions.
            </summary>
            <value>The current permissions.</value>
        </member>
        <member name="P:Beyova.ContextHelper.CurrentFullIdentifier">
            <summary>
            Gets the current full identifier.
            </summary>
            <value>The current full identifier.</value>
        </member>
        <member name="P:Beyova.ContextHelper.IpAddress">
            <summary>
            Gets or sets the ip address.
            </summary>
            <value>The ip address.</value>
        </member>
        <member name="P:Beyova.ContextHelper.UserAgent">
            <summary>
            Gets or sets the user agent.
            </summary>
            <value>The user agent.</value>
        </member>
        <member name="P:Beyova.ContextHelper.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Beyova.ContextHelper.IsUser">
            <summary>
            Gets a value indicating whether this instance is user.
            </summary>
            <value><c>true</c> if this instance is user; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Beyova.ContextHelper.ApiContext">
            <summary>
            Gets or sets the API context.
            </summary>
            <value>The API context.</value>
        </member>
        <member name="M:Beyova.ContextHelper.ConsistContext(System.Web.HttpRequestBase,System.String)">
            <summary>
            Consists the context.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="settingName">Name of the setting.</param>
        </member>
        <member name="M:Beyova.ContextHelper.ConsistContext(System.Web.HttpRequest,System.String)">
            <summary>
            Consists the context.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="settingName">Name of the setting.</param>
        </member>
        <member name="M:Beyova.ContextHelper.ConsistContext(System.Net.HttpListenerRequest,System.String)">
            <summary>
            Consists the context.
            </summary>
            <param name="httpRequest">The HTTP request.</param>
            <param name="settingName">Name of the setting.</param>
        </member>
        <member name="M:Beyova.ContextHelper.ConsistContext(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Consists the context.
            </summary>
            <param name="token">The token.</param>
            <param name="settingName">Name of the setting.</param>
            <param name="ipAddress">The ip address.</param>
            <param name="userAgent">The user agent.</param>
            <param name="cultureCode">The culture code.</param>
        </member>
        <member name="M:Beyova.ContextHelper.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Beyova.ContextHelper.Reinitialize">
            <summary>
            Reinitializes this instance.
            </summary>
        </member>
        <member name="M:Beyova.ContextHelper.ToBaseCredential(Beyova.ICredential)">
            <summary>
            To the base credential.
            </summary>
            <param name="credential">The credential.</param>
            <returns>Beyova.BaseCredential.</returns>
        </member>
        <member name="T:Beyova.GuidConverter">
            <summary>
            Class GuidConverter.
            </summary>
        </member>
        <member name="P:Beyova.GuidConverter.GuidFormat">
            <summary>
            Gets or sets the unique identifier format.
            </summary>
            <value>The unique identifier format.</value>
        </member>
        <member name="M:Beyova.GuidConverter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.GuidConverter" /> class.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Beyova.GuidConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns><c>true</c> if this instance can convert the specified object type; otherwise,
            <c>false</c>.</returns>
        </member>
        <member name="M:Beyova.GuidConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Beyova.GuidConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:Beyova.SafeContractResolver">
            <summary>
            Class SafeContractResolver.
            </summary>
        </member>
        <member name="F:Beyova.SafeContractResolver.httpRequestIgnoreProperties">
            <summary>
            The HTTP request ignore properties
            </summary>
        </member>
        <member name="M:Beyova.SafeContractResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.SafeContractResolver" /> class.
            </summary>
        </member>
        <member name="M:Beyova.SafeContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)">
            <summary>
            Creates properties for the given
            <see cref="T:Newtonsoft.Json.Serialization.JsonContract" />.
            </summary>
            <param name="type">The type to create properties for.</param>
            <param name="memberSerialization">The member serialization mode for the type.</param>
            <returns>Properties for the given <see cref="T:Newtonsoft.Json.Serialization.JsonContract" />.</returns>
        </member>
        <member name="T:Beyova.EncodingOrSecurityExtension">
            <summary>
            Class EncodingOrSecurityExtension.
            </summary>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToUrlPathEncodedText(System.String)">
            <summary>
            To the URL path encoded text. It is used for URL Query String or when passing a URL as parameter of anther URL. (Space to '%20', but not encode special character like '/', '=', '?' and '&amp;'. Any character after first '?' would not be encoded)
            </summary>
            <param name="originalText">The original text.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToUrlEncodedText(System.String)">
            <summary>
            To the URL encoded text. It is used for URL Path. (Space to '+', and encode any special character, including '/', '=', '?' and '&amp;')
            </summary>
            <param name="originalText">The original text.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToUrlDecodedText(System.String)">
            <summary>
            To the URL decoded text.
            </summary>
            <param name="originalText">The original text.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToHtmlEncodedText(System.String)">
            <summary>
            To the HTML encoded text.
            </summary>
            <param name="originalText">The original text.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToHtmlDecodedText(System.String)">
            <summary>
            To the HTML decoded text.
            </summary>
            <param name="originalText">The original text.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.EncodeStringToUnicode(System.String)">
            <summary>
            Encodes the string to unicode.
            </summary>
            <param name="sourceText">The SRC text.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.DecodeUnicodeToString(System.String)">
            <summary>
            Decodes the unicode to string.
            </summary>
            <param name="sourceText">The source text.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.EncodeBase64(System.String,System.Text.Encoding)">
            <summary>
            Encodes to base64.
            </summary>
            <param name="stringObject">The source.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.EncodeBase64(System.Byte[])">
            <summary>
            Encodes the base64.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.DecodeBase64(System.String,System.Text.Encoding)">
            <summary>
            Decodes the base64.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToBase62(System.Byte[])">
            <summary>
            Convert a byte array
            </summary>
            <param name="original">Byte array</param>
            <returns>Base62 string</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.FromBase62(System.String)">
            <summary>
            Convert a Base62 string to byte array
            </summary>
            <param name="base62">Base62 string</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToMD5Bytes(System.Byte[])">
            <summary>
            To the m d5 bytes.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToMD5Bytes(System.IO.Stream,System.Nullable{System.Int64})">
            <summary>
            To the m d5 bytes.
            </summary>
            <param name="stream">The stream.</param>
            <param name="resetPosition">The reset position.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToMD5String(System.String,System.Text.Encoding)">
            <summary>
            To the m d5 string.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToBase64Md5(System.Byte[])">
            <summary>
            To the m d5 base64 string.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToBase64Md5(System.IO.Stream,System.Nullable{System.Int64})">
            <summary>
            To the m d5 base64 string.
            </summary>
            <param name="stream">The stream.</param>
            <param name="resetPosition">The reset position.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToMD5String(System.Byte[])">
            <summary>
            To the m d5 string.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToMD5String(System.IO.Stream,System.Nullable{System.Int64})">
            <summary>
            To the m d5 string.
            </summary>
            <param name="stream">The stream.</param>
            <param name="resetPosition">The reset position.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToSHA1(System.String,System.Text.Encoding)">
            <summary>
            Encrypts to SHA1.
            </summary>
            <param name="stringObject">The string object.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToSHA1(System.Byte[])">
            <summary>
            Encrypts to SH a1.
            </summary>
            <param name="data">The data.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.GenerateTripleDESKey">
            <summary>
            Generates the triple DES key.
            </summary>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.GenerateTripleDESKeyAsString">
            <summary>
            Generates the triple DES key as string.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.EncryptTripleDES(System.String,System.String,System.Security.Cryptography.CipherMode,System.Text.Encoding)">
            <summary>
            Encrypt 3DES.
            </summary>
            <param name="content">The content.</param>
            <param name="encryptKey">The encrypt key.</param>
            <param name="cipherMode">The cipher mode.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.EncryptTripleDES(System.Byte[],System.Byte[],System.Security.Cryptography.CipherMode)">
            <summary>
            Encrypts the triple DES.
            </summary>
            <param name="content">The content.</param>
            <param name="encryptKey">The encrypt key.</param>
            <param name="cipherMode">The cipher mode.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.EncryptTripleDES(System.Byte[],System.String,System.Security.Cryptography.CipherMode)">
            <summary>
            Encrypts the triple DES.
            </summary>
            <param name="content">The content.</param>
            <param name="encryptKey">The encrypt key.</param>
            <param name="cipherMode">The cipher mode.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.DecryptTripleDES(System.String,System.String,System.Security.Cryptography.CipherMode,System.Text.Encoding)">
            <summary>
            Decrypt3s the DES.
            </summary>
            <param name="content">The content.</param>
            <param name="encryptKey">The encrypt key.</param>
            <param name="cipherMode">The cipher mode.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.DecryptTripleDES(System.Byte[],System.Byte[],System.Security.Cryptography.CipherMode)">
            <summary>
            Decrypt3s the DES.
            </summary>
            <param name="content">The content.</param>
            <param name="encryptKey">The encrypt key.</param>
            <param name="cipherMode">The cipher mode.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.RsaEncrypt(System.Byte[],System.String,System.Int32)">
            <summary>
            Encrypts within RSA. Note: Under 1024 bit key, 117 bytes can be encrypted at most. Under 2048 bit key, 245 bytes can be encrypted at most.
            </summary>
            <param name="dataToEncrypt">The data to encrypt.</param>
            <param name="publicKey">The public key.</param>
            <param name="dwKeySize">Size of the dw key.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.RsaDecrypt(System.String,System.String,System.Int32)">
            <summary>
            Decrypts within RSA.
            </summary>
            <param name="content">The content.</param>
            <param name="privateKey">The private key.</param>
            <param name="dwKeySize">Size of the dw key.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.RsaDecrypt(System.Byte[],System.String,System.Int32)">
            <summary>
            RSAs the decrypt.
            </summary>
            <param name="dataToDecrypt">The data to decrypt.</param>
            <param name="privateKey">The private key.</param>
            <param name="dwKeySize">Size of the dw key.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.CreateRsaKeys(System.Object,System.String@,System.String@,System.Int32)">
            <summary>
            Creates the RSA keys.
            </summary>
            <param name="anyObject">Any object.</param>
            <param name="publicKey">The public key.</param>
            <param name="privateKey">The private key.</param>
            <param name="dwKeySize">Size of the dw key.</param>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.CreateRsaKeys(System.Int32)">
            <summary>
            Creates the RSA keys.
            </summary>
            <param name="dwKeySize">Size of the dw key.</param>
            <returns>Beyova.RsaKeys.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.GenerateRandomDESKey(System.Object)">
            <summary>
            Generates the random DES key.
            </summary>
            <param name="anyObject">Any object.</param>
            <returns>The <see cref="T:System.Byte" /> array for DES key.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.EncryptDES(System.String,System.String)">
            <summary>
            Encrypts the DES.
            </summary>
            <param name="content">The content.</param>
            <param name="encryptKey">The encrypt key.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.DecryptDES(System.String,System.String)">
            <summary>
            Decrypts the DES.
            </summary>
            <param name="content">The content.</param>
            <param name="encryptKey">The encrypt key.</param>
            <returns>System.String.</returns>
        </member>
        <member name="F:Beyova.EncodingOrSecurityExtension.desKeyLength">
            <summary>
            The description key length
            </summary>
        </member>
        <member name="F:Beyova.EncodingOrSecurityExtension.tripleDesKeyLength">
            <summary>
            The triple description key length
            </summary>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.EncryptR3DES(System.Byte[])">
            <summary>
            Encrypts the r3 DES.
            </summary>
            <param name="content">The content.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.EncryptR3DES(System.String,System.Text.Encoding)">
            <summary>
            Encrypts the r3 DES.
            </summary>
            <param name="content">The content.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.DecryptR3DES(System.Byte[])">
            <summary>
            Decrypts the r3 DES.
            </summary>
            <param name="content">The content.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.DecryptR3DES(System.String,System.Text.Encoding)">
            <summary>
            Decrypt within 3DES.
            </summary>
            <param name="content">The content.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToHMACSHA1(System.String,System.Byte[])">
            <summary>
            To the HMAC SHA1.
            </summary>
            <param name="message">The message.</param>
            <param name="secretKey">The secret key.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.EncodingOrSecurityExtension.ToHMACSHA1(System.String,System.String)">
            <summary>
            To the HMAC SHA1.
            </summary>
            <param name="message">The message.</param>
            <param name="secretKey">The secret key.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Beyova.RegexPatternBuilder">
            <summary>
            Class RegexPatternBuilder. This class cannot be inherited.
            </summary>
        </member>
        <member name="F:Beyova.RegexPatternBuilder.builder">
            <summary>
            The builder
            </summary>
        </member>
        <member name="M:Beyova.RegexPatternBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.RegexPatternBuilder"/> class.
            </summary>
        </member>
        <member name="M:Beyova.RegexPatternBuilder.AppendStatic(System.String)">
            <summary>
            Appends the static.
            </summary>
            <param name="staticString">The static string.</param>
        </member>
        <member name="M:Beyova.RegexPatternBuilder.AppendOptionalStatic(System.String)">
            <summary>
            Appends the optional static.
            </summary>
            <param name="staticString">The static string.</param>
        </member>
        <member name="M:Beyova.RegexPatternBuilder.AppendVariable(System.String,System.String)">
            <summary>
            Appends the variable.
            </summary>
            <param name="name">The name.</param>
            <param name="constraint">The constraint.</param>
        </member>
        <member name="M:Beyova.RegexPatternBuilder.AppendOptionalVariable(System.String,System.String)">
            <summary>
            Appends the optional variable.
            </summary>
            <param name="name">The name.</param>
            <param name="constraint">The constraint.</param>
        </member>
        <member name="M:Beyova.RegexPatternBuilder.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.RegexPatternBuilder.InternalGetPatternByStatic(System.String)">
            <summary>
            Internals the get pattern by static.
            </summary>
            <param name="staticString">The static string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.RegexPatternBuilder.InternalGetVariable(System.String,System.String)">
            <summary>
            Internals the get variable.
            </summary>
            <param name="name">The name.</param>
            <param name="constraint">The constraint.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.RegexPatternBuilder.InternalAppendOptionalPattern(System.String)">
            <summary>
            Appends the optional pattern.
            </summary>
            <param name="pattern">The pattern.</param>
        </member>
        <member name="M:Beyova.RegexPatternBuilder.InternalAppendPattern(System.String)">
            <summary>
            Appends the pattern.
            </summary>
            <param name="pattern">The pattern.</param>
        </member>
        <member name="T:Beyova.StringShifterExtension">
            <summary>
            Class StringShifterExtension.
            </summary>
        </member>
        <member name="F:Beyova.StringShifterExtension.holderKeyVariable">
            <summary>
            The holder key variable
            </summary>
        </member>
        <member name="F:Beyova.StringShifterExtension.placeHolderRegex">
            <summary>
            The place holder regex
            </summary>
        </member>
        <member name="F:Beyova.StringShifterExtension.holderKeyResult">
            <summary>
            The holder key result
            </summary>
        </member>
        <member name="F:Beyova.StringShifterExtension.placeHolderPatternFormat">
            <summary>
            The place holder pattern format
            </summary>
        </member>
        <member name="F:Beyova.StringShifterExtension.defaultConstraint">
            <summary>
            The default constraint
            </summary>
        </member>
        <member name="M:Beyova.StringShifterExtension.GetPlaceHolderPattern(System.String,System.String)">
            <summary>
            Gets the place holder pattern.
            </summary>
            <param name="variableName">Name of the variable.</param>
            <param name="pattern">The pattern.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Beyova.StringShifterExtension.CreateStringBuilder(Beyova.StringShiftShard)">
            <summary>
            Creates the string builder.
            </summary>
            <param name="shard">The shard.</param>
            <returns>StringBuilder.</returns>
        </member>
        <member name="M:Beyova.StringShifterExtension.GetStringBuilderDefaultCapacity(Beyova.StringShiftShard)">
            <summary>
            Gets the string builder default capacity.
            </summary>
            <param name="shard">The shard.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Beyova.StringShifterExtension.ConvertFormatToRegex(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Converts the format to regex. Like convert "Name: {name}" within constraints "[a-z0-9]+" to "Name:\s(?&lt;name&gt;([a-z0-9]+))" as <seealso cref="T:System.Text.RegularExpressions.Regex" />. If no constraint specified, use ".+".
            </summary>
            <param name="format">The format.</param>
            <param name="constraints">The constraints.</param>
            <param name="regexOptions">The regex options.</param>
            <returns>Regex.</returns>
        </member>
        <member name="M:Beyova.StringShifterExtension.ConvertFormatToShiftShard(System.String)">
            <summary>
            Converts format to shift shards. Like convert "Its name is {name}" to <seealso cref="T:Beyova.StringShiftShard"/> instance.
            </summary>
            <param name="format">The format.</param>
            <returns>StringShiftShard.</returns>
        </member>
        <member name="M:Beyova.StringShifterExtension.FindPlaceHolders(System.String)">
            <summary>
            Finds the place holders. Given string "{name}'s birthday is {date}.", return ["name","date"]
            </summary>
            <param name="anyString">Any string.</param>
            <returns>System.String[].</returns>
        </member>
        <member name="T:Beyova.StringShiftShard">
            <summary>
            Class StringShiftShard. This class cannot be inherited.
            </summary>
        </member>
        <member name="F:Beyova.StringShiftShard.staticShards">
            <summary>
            The static shards
            </summary>
        </member>
        <member name="F:Beyova.StringShiftShard.dynamicShards">
            <summary>
            The dynamic shards
            </summary>
        </member>
        <member name="P:Beyova.StringShiftShard.StaticShards">
            <summary>
            Gets the static shards.
            </summary>
            <value>The static shards.</value>
        </member>
        <member name="P:Beyova.StringShiftShard.DynamicShards">
            <summary>
            Gets the dynamic shards.
            </summary>
            <value>The dynamic shards.</value>
        </member>
        <member name="P:Beyova.StringShiftShard.Placeholders">
            <summary>
            Gets the placeholders.
            </summary>
            <value>The placeholders.</value>
        </member>
        <member name="M:Beyova.StringShiftShard.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.StringShiftShard"/> class.
            </summary>
        </member>
        <member name="M:Beyova.StringShiftShard.ToString(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="values">The values.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.StringShiftShard.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Beyova.StringShiftShard.ToString(System.Text.RegularExpressions.Match)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="match">The match.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="P:Beyova.StringShiftShard.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value><c>true</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Beyova.StringShifter">
            <summary>
            Class StringShifter. Example:
            <![CDATA[
            var shifter = new StringShifter("http://{feature}.test.com/{id}", "http://test.com/api/v1/{feature}/{id}/", new Dictionary<string, string> { { "id", "[0-9A-Za-z]+" } });
            var result = shifter.Shift("http://nav.test.com/nav1234/"); // result: http://test.com/api/v1/nav/nav1234/
            ]]>
            </summary>
        </member>
        <member name="F:Beyova.StringShifter._sourceRegex">
            <summary>
            The _source regex
            </summary>
        </member>
        <member name="F:Beyova.StringShifter._destinationShiftShard">
            <summary>
            The _destination shift shard
            </summary>
        </member>
        <member name="M:Beyova.StringShifter.#ctor(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Beyova.StringShifter" /> class.
            </summary>
            <param name="sourceFormat">The source format.</param>
            <param name="destinationFormat">The destination format.</param>
            <param name="sourceFormatConstraints">The source format constraints.</param>
        </member>
        <member name="M:Beyova.StringShifter.Shift(System.String,System.String@)">
            <summary>
            Shifts the specified input.
            </summary>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <returns><c>true</c> if matched, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Beyova.StringShifter.Shift(System.String)">
            <summary>
            Shifts the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Beyova.DiagnosticUtil">
            <summary>
            Class DiagnosticUtil.
            </summary>
        </member>
        <member name="M:Beyova.DiagnosticUtil.Diagnostic(System.String,System.String[])">
            <summary>
            Diagnostics the specified base URL.
            </summary>
            <param name="baseUrl">The base URL.</param>
            <param name="paths">The paths.</param>
            <returns></returns>
        </member>
        <member name="M:Beyova.DiagnosticUtil.Ping(System.String,System.Nullable{System.Int32},System.Byte[],System.Net.NetworkInformation.PingOptions)">
            <summary>
            Pings the specified host name or address.
            </summary>
            <param name="hostNameOrAddress">The host name or address.</param>
            <param name="timeout">The timeout.</param>
            <param name="buffer">The buffer.</param>
            <param name="options">The options.</param>
            <returns>System.Net.NetworkInformation.PingReply.</returns>
        </member>
    </members>
</doc>
